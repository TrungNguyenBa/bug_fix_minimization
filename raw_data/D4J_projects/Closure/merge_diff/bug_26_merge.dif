diff --git a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
index fa01cd9e..a0f2dda0 100644
--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
@@ -16,7 +16,6 @@
 package com.google.javascript.jscomp;
 
 import com.google.common.base.Preconditions;
-import com.google.common.collect.Sets;
 import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
 import com.google.javascript.rhino.IR;
 import com.google.javascript.rhino.Node;
@@ -24,7 +23,6 @@ import com.google.javascript.rhino.Node;
 import java.io.File;
 import java.net.URI;
 import java.net.URISyntaxException;
-import java.util.Set;
 import java.util.regex.Pattern;
 
 /**
@@ -125,7 +123,6 @@ public class ProcessCommonJSModules implements CompilerPass {
       AbstractPostOrderCallback {
 
     private int scriptNodeCount = 0;
-    private Set<String> modulesWithExports = Sets.newHashSet();
 
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
@@ -205,10 +202,6 @@ public class ProcessCommonJSModules implements CompilerPass {
      */
     private void emitOptionalModuleExportsOverride(Node script,
         String moduleName) {
-      if (!modulesWithExports.contains(moduleName)) {
-        return;
-      }
-
       Node moduleExportsProp = IR.getprop(IR.name(moduleName),
           IR.string("module$exports"));
       script.addChildToBack(IR.ifNode(
@@ -229,7 +222,6 @@ public class ProcessCommonJSModules implements CompilerPass {
       Node exports = prop.getChildAtIndex(1);
       exports.putProp(Node.ORIGINALNAME_PROP, "exports");
       exports.setString("module$exports");
-      modulesWithExports.add(moduleName);
     }
 
     /**
diff --git a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
index fd8f632b..f1898834 100644
--- a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
+++ b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
@@ -1046,7 +1046,9 @@ public class CommandLineRunnerTest extends TestCase {
     args.add("--common_js_entry_module=foo/bar");
     setFilename(0, "foo/bar.js");
     test("exports.test = 1",
-        "var module$foo$bar={test:1};");
+        "var module$foo$bar={test:1}; " +
+        "module$foo$bar.module$exports && " +
+        "(module$foo$bar=module$foo$bar.module$exports)");
   }
 
   public void testTransformAMDAndProcessCJS() {
@@ -1055,7 +1057,9 @@ public class CommandLineRunnerTest extends TestCase {
     args.add("--common_js_entry_module=foo/bar");
     setFilename(0, "foo/bar.js");
     test("define({foo: 1})",
-        "var module$foo$bar={}, module$foo$bar={foo:1};");
+        "var module$foo$bar={}, module$foo$bar={foo:1}; " +
+        "module$foo$bar.module$exports && " +
+        "(module$foo$bar=module$foo$bar.module$exports)");
   }
 
   /* Helper functions */
diff --git a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
index 7525531c..4f6f0538 100644
--- a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
+++ b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
@@ -43,7 +43,9 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "var module$test = {};" +
         "goog.require('module$name');" +
         "var name$$module$test = module$name;" +
-        "name$$module$test();");
+        "name$$module$test();" +
+        "if(module$test.module$exports)" +
+        "module$test=module$test.module$exports");
     setFilename("test/sub");
     test(
         "var name = require('mod/name');" +
@@ -52,7 +54,9 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "var module$test$sub = {};" +
         "goog.require('module$mod$name');" +
         "var name$$module$test$sub = module$mod$name;" +
-        "(function() { name$$module$test$sub(); })();");
+        "(function() { name$$module$test$sub(); })();" +
+        "if(module$test$sub.module$exports)" +
+        "module$test$sub=module$test$sub.module$exports");
   }
 
   public void testExports() {
@@ -64,7 +68,9 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "var module$test = {};" +
         "goog.require('module$name');" +
         "var name$$module$test = module$name;" +
-        "module$test.foo = 1;");
+        "module$test.foo = 1;" +
+        "if(module$test.module$exports)" +
+        "module$test=module$test.module$exports");
     test(
         "var name = require('name');" +
         "module.exports = function() {};",
@@ -85,7 +91,9 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "goog.provide('module$test');" +
         "var module$test = {};" +
         "var a$$module$test = 1, b$$module$test = 2;" +
-        "(function() { var a; b$$module$test = 4})();");
+        "(function() { var a; b$$module$test = 4})();" +
+        "if(module$test.module$exports)" +
+        "module$test=module$test.module$exports");
   }
 
   public void testDash() {
@@ -96,7 +104,9 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "var module$test_test = {};" +
         "goog.require('module$name');" +
         "var name$$module$test_test = module$name;" +
-        "module$test_test.foo = 1;");
+        "module$test_test.foo = 1;" +
+        "if(module$test_test.module$exports)" +
+        "module$test_test=module$test_test.module$exports");
   }
 
   public void testModuleName() {
@@ -115,13 +125,17 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
         "var name = require('name');",
         "goog.provide('module$foo$bar'); var module$foo$bar = {};" +
         "goog.require('module$name');" +
-        "var name$$module$foo$bar = module$name;");
+        "var name$$module$foo$bar = module$name;" +
+        "if(module$foo$bar.module$exports)" +
+        "module$foo$bar=module$foo$bar.module$exports");
     test(
         "var name = require('./name');",
         "goog.provide('module$foo$bar');" +
         "var module$foo$bar = {};" +
         "goog.require('module$foo$name');" +
-        "var name$$module$foo$bar = module$foo$name;");
+        "var name$$module$foo$bar = module$foo$name;" +
+        "if(module$foo$bar.module$exports)" +
+        "module$foo$bar=module$foo$bar.module$exports");
 
   }
 
