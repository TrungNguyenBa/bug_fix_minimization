diff --git a/src/com/google/javascript/rhino/IR.java b/src/com/google/javascript/rhino/IR.java
index 002acd6c..6ffc95f0 100644
--- a/src/com/google/javascript/rhino/IR.java
+++ b/src/com/google/javascript/rhino/IR.java
@@ -108,10 +108,6 @@ public class IR {
     return block;
   }
 
-  private static Node blockUnchecked(Node stmt) {
-    return new Node(Token.BLOCK, stmt);
-  }
-
   public static Node script(Node ... stmts) {
     // TODO(johnlenz): finish setting up the SCRIPT node
     Node block = new Node(Token.SCRIPT);
@@ -224,8 +220,8 @@ public class IR {
   }
 
   public static Node tryFinally(Node tryBody, Node finallyBody) {
-    Preconditions.checkState(tryBody.isBlock());
-    Preconditions.checkState(finallyBody.isBlock());
+    Preconditions.checkState(tryBody.isLabelName());
+    Preconditions.checkState(finallyBody.isLabelName());
     Node catchBody = block().copyInformationFrom(tryBody);
     return new Node(Token.TRY, tryBody, catchBody, finallyBody);
   }
@@ -233,12 +229,11 @@ public class IR {
   public static Node tryCatch(Node tryBody, Node catchNode) {
     Preconditions.checkState(tryBody.isBlock());
     Preconditions.checkState(catchNode.isCatch());
-    Node catchBody = blockUnchecked(catchNode).copyInformationFrom(catchNode);
+    Node catchBody = block(catchNode).copyInformationFrom(catchNode);
     return new Node(Token.TRY, tryBody, catchBody);
   }
 
-  public static Node tryCatchFinally(
-      Node tryBody, Node catchNode, Node finallyBody) {
+  public static Node tryCatchFinally(Node tryBody, Node catchNode, Node finallyBody) {
     Preconditions.checkState(finallyBody.isBlock());
     Node tryNode = tryCatch(tryBody, catchNode);
     tryNode.addChildToBack(finallyBody);
diff --git a/test/com/google/javascript/rhino/IRTest.java b/test/com/google/javascript/rhino/IRTest.java
deleted file mode 100644
index 751c9e5f..00000000
--- a/test/com/google/javascript/rhino/IRTest.java
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- *
- * ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is Rhino code, released
- * May 6, 1999.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1997-1999
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *   John Lenz
- *
- * Alternatively, the contents of this file may be used under the terms of
- * the GNU General Public License Version 2 or later (the "GPL"), in which
- * case the provisions of the GPL are applicable instead of those above. If
- * you wish to allow use of your version of this file only under the terms of
- * the GPL and not to allow others to use your version of this file under the
- * MPL, indicate your decision by deleting the provisions above and replacing
- * them with the notice and other provisions required by the GPL. If you do
- * not delete the provisions above, a recipient may use your version of this
- * file under either the MPL or the GPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-package com.google.javascript.rhino;
-
-import junit.framework.TestCase;
-
-/**
- * @author johnlenz@google.com (John Lenz)
- */
-public class IRTest extends TestCase {
-  public void testIssue727_1() {
-    testIR(
-        IR.tryFinally(
-            IR.block(),
-            IR.block()),
-        "TRY\n" +
-        "    BLOCK\n" +
-        "    BLOCK\n" +
-        "    BLOCK\n");
-  }
-
-  public void testIssue727_2() {
-    testIR(
-        IR.tryCatch(
-            IR.block(),
-            IR.catchNode(
-                IR.name("e"),
-                IR.block())),
-        "TRY\n" +
-        "    BLOCK\n" +
-        "    BLOCK\n" +
-        "        CATCH\n" +
-        "            NAME e\n" +
-        "            BLOCK\n");
-  }
-
-  public void testIssue727_3() {
-    testIR(
-        IR.tryCatchFinally(
-            IR.block(),
-            IR.catchNode(IR.name("e"), IR.block()),
-            IR.block()),
-        "TRY\n" +
-        "    BLOCK\n" +
-        "    BLOCK\n" +
-        "        CATCH\n" +
-        "            NAME e\n" +
-        "            BLOCK\n" +
-        "    BLOCK\n");
-  }
-
-  private void testIR(Node node, String expectedStructure) {
-    assertEquals(expectedStructure, node.toStringTree());
-  }
-}
