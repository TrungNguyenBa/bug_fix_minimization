diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java
index d3def01b..5edb4f05 100644
--- a/src/com/google/javascript/jscomp/TypeCheck.java
+++ b/src/com/google/javascript/jscomp/TypeCheck.java
@@ -513,9 +513,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
         // Object literal keys are handled with OBJECTLIT
         if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
           ensureTyped(t, n, STRING_TYPE);
-        } else {
-          // Object literal keys are not typeable
-          typeable = false;
         }
         break;
 
diff --git a/test/com/google/javascript/jscomp/TypeCheckTest.java b/test/com/google/javascript/jscomp/TypeCheckTest.java
index 604db374..160759d9 100644
--- a/test/com/google/javascript/jscomp/TypeCheckTest.java
+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java
@@ -7779,16 +7779,6 @@ public class TypeCheckTest extends CompilerTypeTestCase {
     assertEquals(100.0, getTypedPercent(js), 0.1);
   }
 
-  public void testGetTypedPercent5() throws Exception {
-    String js = "/** @enum {number} */ keys = {A: 1,B: 2,C: 3};";
-    assertEquals(100.0, getTypedPercent(js), 0.1);
-  }
-
-  public void testGetTypedPercent6() throws Exception {
-    String js = "a = {TRUE: 1, FALSE: 0};";
-    assertEquals(100.0, getTypedPercent(js), 0.1);
-  }
-
   private double getTypedPercent(String js) throws Exception {
     Node n = compiler.parseTestCode(js);
 
