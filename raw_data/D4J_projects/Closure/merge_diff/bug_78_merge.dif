diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 1afb7a80..0df495dc 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -32,6 +32,10 @@ import java.util.Locale;
  */
 class PeepholeFoldConstants extends AbstractPeepholeOptimization {
 
+  static final DiagnosticType DIVIDE_BY_0_ERROR = DiagnosticType.error(
+      "JSC_DIVIDE_BY_0_ERROR",
+      "Divide by 0");
+
   static final DiagnosticType INVALID_GETELEM_INDEX_ERROR =
       DiagnosticType.error(
           "JSC_INVALID_GETELEM_INDEX_ERROR",
@@ -708,12 +712,14 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
         break;
       case Token.MOD:
         if (rval == 0) {
+          error(DIVIDE_BY_0_ERROR, right);
           return null;
         }
         result = lval % rval;
         break;
       case Token.DIV:
         if (rval == 0) {
+          error(DIVIDE_BY_0_ERROR, right);
           return null;
         }
         result = lval / rval;
diff --git a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
index 848acbd5..7919be50 100644
--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
@@ -555,11 +555,11 @@ public class PeepholeFoldConstantsTest extends CompilerTestCase {
     fold("x = 2.25 * 3", "x = 6.75");
     fold("z = x * y", "z = x * y");
     fold("x = y * 5", "x = y * 5");
-    fold("x = 1 / 0", "x = 1 / 0");
+    fold("x = 1 / 0", "", PeepholeFoldConstants.DIVIDE_BY_0_ERROR);
     fold("x = 3 % 2", "x = 1");
     fold("x = 3 % -2", "x = 1");
     fold("x = -1 % 3", "x = -1");
-    fold("x = 1 % 0", "x = 1 % 0");
+    fold("x = 1 % 0", "", PeepholeFoldConstants.DIVIDE_BY_0_ERROR);
   }
 
   public void testFoldArithmetic2() {
