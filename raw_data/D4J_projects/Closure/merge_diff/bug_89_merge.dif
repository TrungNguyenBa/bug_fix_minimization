diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index ddccf0db..4e7ea97b 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -481,10 +481,6 @@ class CollapseProperties implements CompilerPass {
     Node greatGramps = gramps.getParent();
     Node greatGreatGramps = greatGramps.getParent();
 
-    if (rvalue != null && rvalue.getType() == Token.FUNCTION) {
-      checkForHosedThisReferences(rvalue, refName.docInfo, refName);
-    }
-
     // Create the new alias node.
     Node nameNode = NodeUtil.newName(
         compiler.getCodingConvention(), alias, gramps.getFirstChild(),
diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java
index 82683391..26b13e8b 100644
--- a/src/com/google/javascript/jscomp/GlobalNamespace.java
+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java
@@ -467,11 +467,6 @@ class GlobalNamespace {
      *     declaration
      */
     private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {
-      // NOTE(nicksantos): This does not handle named constructors
-      // function a() {}
-      // For legacy reasons, we should not fix this, because we do not
-      // know who's depending on the current behavior.
-
       JSDocInfo info;
       int valueNodeType;
       switch (parent.getType()) {
@@ -916,8 +911,9 @@ class GlobalNamespace {
         return false;
       }
 
-      // If this is aliased, then its properties can't be collapsed either.
-      if (aliasingGets > 0) {
+      // If this is aliased, and its not a function, then its properties
+      // can't be collapsed either.
+      if (type != Type.FUNCTION && aliasingGets > 0) {
         return false;
       }
 
