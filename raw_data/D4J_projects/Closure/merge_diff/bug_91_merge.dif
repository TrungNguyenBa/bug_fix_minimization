diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java
index 91008e49..b6993d90 100644
--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java
+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java
@@ -110,17 +110,6 @@ final class CheckGlobalThis implements Callback {
             pType == Token.NUMBER)) {
         return false;
       }
-
-      // Don't traverse functions that are getting lent to a prototype.
-      Node gramps = parent.getParent();
-      if (NodeUtil.isObjectLitKey(parent, gramps)) {
-        JSDocInfo maybeLends = gramps.getJSDocInfo();
-        if (maybeLends != null &&
-            maybeLends.getLendsName() != null &&
-            maybeLends.getLendsName().endsWith(".prototype")) {
-          return false;
-        }
-      }
     }
 
     if (parent != null && parent.getType() == Token.ASSIGN) {
diff --git a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
index 8c8394c9..e0e98204 100644
--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
@@ -220,21 +220,4 @@ public class CheckGlobalThisTest extends CompilerTestCase {
     testSame("function Foo() {} " +
         "Foo.prototype = {write: function() { this.foo = 3; }};");
   }
-
-  public void testLendsAnnotation1() {
-    testFailure("/** @constructor */ function F() {}" +
-        "dojo.declare(F, {foo: function() { return this.foo; }});");
-  }
-
-  public void testLendsAnnotation2() {
-    testFailure("/** @constructor */ function F() {}" +
-        "dojo.declare(F, /** @lends {F.bar} */ (" +
-        "    {foo: function() { return this.foo; }}));");
-  }
-
-  public void testLendsAnnotation3() {
-    testSame("/** @constructor */ function F() {}" +
-        "dojo.declare(F, /** @lends {F.prototype} */ (" +
-        "    {foo: function() { return this.foo; }}));");
-  }
 }
