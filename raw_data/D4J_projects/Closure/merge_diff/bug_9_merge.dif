diff --git a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
index 67779577..bed92d07 100644
--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
@@ -114,10 +114,6 @@ public class ProcessCommonJSModules implements CompilerPass {
   }
 
   private String normalizeSourceName(String filename) {
-    // The DOS command shell will normalize "/" to "\", so we have to
-    // wrestle it back.
-    filename = filename.replace("\\", "/");
-
     if (filename.indexOf(filenamePrefix) == 0) {
       filename = filename.substring(filenamePrefix.length());
     }
@@ -181,7 +176,8 @@ public class ProcessCommonJSModules implements CompilerPass {
       Preconditions.checkArgument(scriptNodeCount == 1,
           "ProcessCommonJSModules supports only one invocation per " +
           "CompilerInput / script node");
-      String moduleName = guessCJSModuleName(script.getSourceFileName());
+      String moduleName = guessCJSModuleName(normalizeSourceName(script
+          .getSourceFileName()));
       script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit())
           .copyInformationFromForTree(script));
       if (reportDependencies) {
diff --git a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
index 43bc8ede..7525531c 100644
--- a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
+++ b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java
@@ -129,9 +129,5 @@ public class ProcessCommonJSModulesTest extends CompilerTestCase {
     ProcessCommonJSModules pass = new ProcessCommonJSModules(null, "foo");
     assertEquals("module$baz",
         pass.guessCJSModuleName("foo/baz.js"));
-    assertEquals("module$baz",
-        pass.guessCJSModuleName("foo\\baz.js"));
-    assertEquals("module$bar$baz",
-        pass.guessCJSModuleName("foo\\bar\\baz.js"));
   }
 }
