diff --git a/test/com/google/javascript/rhino/jstype/JSTypeTest.java b/test/com/google/javascript/rhino/jstype/JSTypeTest.java
index 20818551..ce46b96b 100644
--- a/test/com/google/javascript/rhino/jstype/JSTypeTest.java
+++ b/test/com/google/javascript/rhino/jstype/JSTypeTest.java
@@ -2716,11 +2716,14 @@ public class JSTypeTest extends BaseJSTypeTestCase {
     builder.addProperty("e", NUMBER_TYPE, null);
     builder.addProperty("b", STRING_TYPE, null);
     builder.addProperty("c", STRING_TYPE, null);
-    JSType otherRecordType = builder.build();
+    JSType subRecordType = builder.build();
 
-    assertTypeEquals(
-        registry.createUnionType(recordType, otherRecordType),
-        recordType.getLeastSupertype(otherRecordType));
+    JSType leastSupertype = recordType.getLeastSupertype(subRecordType);
+
+    builder = new RecordTypeBuilder(registry);
+    builder.addProperty("b", STRING_TYPE, null);
+
+    assertTypeEquals(leastSupertype, builder.build());
   }
 
   public void testRecordTypeLeastSuperType3() {
@@ -2728,11 +2731,10 @@ public class JSTypeTest extends BaseJSTypeTestCase {
     builder.addProperty("d", NUMBER_TYPE, null);
     builder.addProperty("e", STRING_TYPE, null);
     builder.addProperty("f", STRING_TYPE, null);
-    JSType otherRecordType = builder.build();
+    JSType subRecordType = builder.build();
 
-    assertTypeEquals(
-        registry.createUnionType(recordType, otherRecordType),
-        recordType.getLeastSupertype(otherRecordType));
+    JSType leastSupertype = recordType.getLeastSupertype(subRecordType);
+    assertTypeEquals(leastSupertype, OBJECT_TYPE);
   }
 
   public void testRecordTypeLeastSuperType4() {
@@ -4886,12 +4888,6 @@ public class JSTypeTest extends BaseJSTypeTestCase {
 
     builder = new RecordTypeBuilder(registry);
     builder.addProperty("a", STRING_TYPE, null);
-    builder.addProperty("c", STRING_TYPE, null);
-    JSType acType = builder.build();
-    JSType abOrAcType = registry.createUnionType(abType, acType);
-
-    builder = new RecordTypeBuilder(registry);
-    builder.addProperty("a", STRING_TYPE, null);
     builder.addProperty("b", STRING_TYPE, null);
     builder.addProperty("c", NUMBER_TYPE, null);
     JSType abcType = builder.build();
@@ -4901,7 +4897,6 @@ public class JSTypeTest extends BaseJSTypeTestCase {
         registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),
         registry.getNativeType(JSTypeNative.OBJECT_TYPE),
         aType,
-        abOrAcType,
         abType,
         abcType,
         registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),
