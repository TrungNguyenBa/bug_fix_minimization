diff --git a/test/com/google/javascript/jscomp/LooseTypeCheckTest.java b/test/com/google/javascript/jscomp/LooseTypeCheckTest.java
index d2e90dcc..87c3fdcf 100644
--- a/test/com/google/javascript/jscomp/LooseTypeCheckTest.java
+++ b/test/com/google/javascript/jscomp/LooseTypeCheckTest.java
@@ -1342,13 +1342,13 @@ public class LooseTypeCheckTest extends CompilerTypeTestCase {
   }
 
   public void testFunctionArguments13() throws Exception {
-    // verifying that the argument type have non-inferrable types
+    // verifying that the argument type have inferable types
     testTypes(
         "/** @return {boolean} */ function u() { return true; }" +
-        "/** @param {boolean} b\n@return {?boolean} */" +
+        "/** @param {boolean} b\n@return {boolean} */" +
         "function f(b) { if (u()) { b = null; } return b; }",
-        "assignment\n" +
-        "found   : null\n" +
+        "inconsistent return type\n" +
+        "found   : (boolean|null)\n" +
         "required: boolean");
   }
 
@@ -1967,15 +1967,11 @@ public class LooseTypeCheckTest extends CompilerTypeTestCase {
   }
 
   public void testDuplicateLocalVarDecl() throws Exception {
-    testClosureTypesMultipleWarnings(
+    testTypes(
         "/** @param {number} x */\n" +
         "function f(x) { /** @type {string} */ var x = ''; }",
-        Lists.newArrayList(
-            "variable x redefined with type string, original definition" +
-            " at  [testcode] :2 with type number",
-            "initializing variable\n" +
-            "found   : string\n" +
-            "required: number"));
+        "variable x redefined with type string, " +
+        "original definition at [testcode]:2 with type number");
   }
 
   public void testStubFunctionDeclaration1() throws Exception {
