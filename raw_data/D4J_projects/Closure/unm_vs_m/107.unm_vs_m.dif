2c2
< index 3aae2e7..93b3547 100644
---
> index 3aae2e77..ee2dd58c 100644
5,7c5,11
< @@ -859,7 +859,6 @@ public class CommandLineRunner extends
<        // so we might as well inline it. But shut off the i18n warnings,
<        // because the user didn't really ask for i18n.
---
> @@ -856,10 +856,8 @@ public class CommandLineRunner extends
>        // run-time.
>        //
>        // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
> -      // so we might as well inline it. But shut off the i18n warnings,
> -      // because the user didn't really ask for i18n.
> +      // so we might as well inline it.
12a17,79
> diff --git a/src/com/google/javascript/jscomp/DefaultPassConfig.java b/src/com/google/javascript/jscomp/DefaultPassConfig.java
> index 9d8e963a..9398f9ec 100644
> --- a/src/com/google/javascript/jscomp/DefaultPassConfig.java
> +++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java
> @@ -1027,7 +1027,7 @@ public class DefaultPassConfig extends PassConfig {
>            /* warn about message dupes */
>            true,
>            /* allow messages with goog.getMsg */
> -          JsMessage.Style.CLOSURE,
> +          JsMessage.Style.getFromParams(true, false),
>            /* if we can't find a translation, don't worry about it. */
>            false);
>      }
> @@ -1042,7 +1042,7 @@ public class DefaultPassConfig extends PassConfig {
>            /* warn about message dupes */
>            true,
>            /* allow messages with goog.getMsg */
> -          JsMessage.Style.CLOSURE);
> +          JsMessage.Style.getFromParams(true, false));
>      }
>    };
>  
> diff --git a/src/com/google/javascript/jscomp/JsMessageVisitor.java b/src/com/google/javascript/jscomp/JsMessageVisitor.java
> index 7837dcc7..157f133e 100644
> --- a/src/com/google/javascript/jscomp/JsMessageVisitor.java
> +++ b/src/com/google/javascript/jscomp/JsMessageVisitor.java
> @@ -86,20 +86,6 @@ abstract class JsMessageVisitor extends AbstractPostOrderCallback
>        DiagnosticType.error("JSC_MSG_FALLBACK_ARG_ERROR",
>            "Could not find message entry for fallback argument {0}");
>  
> -  /**
> -   * Warnings that only apply to people who use MSG_ to denote
> -   * messages. Note that this doesn't include warnings about
> -   * proper use of goog.getMsg
> -   */
> -  static final DiagnosticGroup MSG_CONVENTIONS = new DiagnosticGroup(
> -      "messageConventions",
> -      MESSAGE_HAS_NO_DESCRIPTION,
> -      MESSAGE_HAS_NO_TEXT,
> -      MESSAGE_TREE_MALFORMED,
> -      MESSAGE_HAS_NO_VALUE,
> -      MESSAGE_DUPLICATE_KEY,
> -      MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX);
> -
>    private static final String PH_JS_PREFIX = "{$";
>    private static final String PH_JS_SUFFIX = "}";
>  
> diff --git a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> index 5eb35233..298933a2 100644
> --- a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> +++ b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> @@ -390,11 +390,6 @@ public class CommandLineRunnerTest extends TestCase {
>           "window.foo = 'foo';");
>    }
>  
> -  public void testGetMsgWiringNoWarnings() throws Exception {
> -    args.add("--compilation_level=ADVANCED_OPTIMIZATIONS");
> -    test("/** @desc A bad foo. */ var MSG_FOO = 1;", "");
> -  }
> -
>    public void testCssNameWiring() throws Exception {
>      test("var goog = {}; goog.getCssName = function() {};" +
>           "goog.setCssNameMapping = function() {};" +
