2c2
< index b2a1690..1e22c9e 100644
---
> index b2a16900..82350529 100644
5c5,6
< @@ -256,7 +256,6 @@ class ScopedAliases implements HotSwapCompilerPass {
---
> @@ -255,9 +255,6 @@ class ScopedAliases implements HotSwapCompilerPass {
>      // This map is temporary and cleared for each scope.
8c9
<      // Also temporary and cleared for each scope.
---
> -    // Also temporary and cleared for each scope.
10c11
<  
---
> -
13c14,15
< @@ -314,7 +313,6 @@ class ScopedAliases implements HotSwapCompilerPass {
---
>      // As a side-effect, this means you can shadow the namespace 'goog'
> @@ -314,7 +311,6 @@ class ScopedAliases implements HotSwapCompilerPass {
21c23
< @@ -431,7 +429,6 @@ class ScopedAliases implements HotSwapCompilerPass {
---
> @@ -431,7 +427,6 @@ class ScopedAliases implements HotSwapCompilerPass {
29,31c31,36
< @@ -581,7 +578,7 @@ class ScopedAliases implements HotSwapCompilerPass {
<          // When we inject declarations, we duplicate jsdoc. Make sure
<          // we only process that jsdoc once.
---
> @@ -578,10 +573,8 @@ class ScopedAliases implements HotSwapCompilerPass {
>            aliasUsages.add(new AliasedNode(aliasVar, n));
>          }
>  
> -        // When we inject declarations, we duplicate jsdoc. Make sure
> -        // we only process that jsdoc once.
37a43,69
> diff --git a/test/com/google/javascript/jscomp/ScopedAliasesTest.java b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
> index 45ab1b04..a08cd49f 100644
> --- a/test/com/google/javascript/jscomp/ScopedAliasesTest.java
> +++ b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
> @@ -566,22 +566,6 @@ public class ScopedAliasesTest extends CompilerTestCase {
>           SCOPE_NAMESPACE + "/** @type {number} */ $jscomp.scope.a;");
>    }
>  
> -  public void testIssue1144() {
> -    test("var ns = {};" +
> -         "ns.sub = {};" +
> -         "/** @constructor */ ns.sub.C = function () {};" +
> -         "goog.scope(function () {" +
> -         "  var sub = ns.sub;" +
> -         "  /** @type {sub.C} */" +
> -         "  var x = null;" +
> -         "});",
> -         SCOPE_NAMESPACE +
> -         "var ns = {};" +
> -         "ns.sub = {};" +
> -         "/** @constructor */ ns.sub.C = function () {};" +
> -         "$jscomp.scope.x = null;");
> -  }
> -
>    // Alias Recording Tests
>    // TODO(tylerg) : update these to EasyMock style tests once available
>    public void testNoGoogScope() {
