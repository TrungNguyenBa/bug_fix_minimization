2c2
< index 85cee7c..70bf1b0 100644
---
> index 85cee7c7..6f69dffb 100644
5,8c5,13
< @@ -326,7 +326,7 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
<        // the checks for broken requires turned off. In these cases, we
<        // allow broken requires to be preserved by the first run to
<        // let them be caught in the subsequent run.
---
> @@ -321,12 +321,12 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
>        maybeAddToSymbolTable(left);
>        maybeAddStringNodeToSymbolTable(arg);
>  
> -      // Requires should be removed before further processing.
> -      // Some clients run closure pass multiple times, first with
> -      // the checks for broken requires turned off. In these cases, we
> -      // allow broken requires to be preserved by the first run to
> -      // let them be caught in the subsequent run.
9a15,19
> +      // Requires should be removed before runtime.  The one
> +      // exception is if the type has not been provided yet, in which case,
> +      // we will be doing a later pass that may error, so we can
> +      // leave this here this time and let it error next time if it
> +      // is still not provided.
13a24,41
> diff --git a/test/com/google/javascript/jscomp/VarCheckTest.java b/test/com/google/javascript/jscomp/VarCheckTest.java
> index a43169ae..dbca8bcf 100644
> --- a/test/com/google/javascript/jscomp/VarCheckTest.java
> +++ b/test/com/google/javascript/jscomp/VarCheckTest.java
> @@ -365,13 +365,6 @@ public class VarCheckTest extends CompilerTestCase {
>          null, VarCheck.VAR_ARGUMENTS_SHADOWED_ERROR);
>    }
>  
> -  public void testNoUndeclaredVarWhenUsingClosurePass() {
> -    enableClosurePass();
> -    // We don't want to get goog as an undeclared var here.
> -    test("goog.require('namespace.Class1');\n", null,
> -        ProcessClosurePrimitives.MISSING_PROVIDE_ERROR);
> -  }
> -
>    private final static class VariableTestCheck implements CompilerPass {
>  
>      final AbstractCompiler compiler;
