2c2
< index c6b70c5..1a95aa2 100644
---
> index c6b70c55..714e9a57 100644
5c5
< @@ -565,15 +565,8 @@ class IRFactory {
---
> @@ -565,15 +565,6 @@ class IRFactory {
14,15c14,15
<  
<          // Return the bare minimum to put the AST in a valid state.
---
> -
> -        // Return the bare minimum to put the AST in a valid state.
20a21,44
> diff --git a/test/com/google/javascript/jscomp/parsing/ParserTest.java b/test/com/google/javascript/jscomp/parsing/ParserTest.java
> index 22fef603..b98f8e52 100644
> --- a/test/com/google/javascript/jscomp/parsing/ParserTest.java
> +++ b/test/com/google/javascript/jscomp/parsing/ParserTest.java
> @@ -958,19 +958,6 @@ public class ParserTest extends BaseJSTypeTestCase {
>      assertNotNull(partialTree);
>    }
>  
> -  public void testForEach() {
> -    parseError(
> -        "function f(stamp, status) {\n" +
> -        "  for each ( var curTiming in this.timeLog.timings ) {\n" +
> -        "    if ( curTiming.callId == stamp ) {\n" +
> -        "      curTiming.flag = status;\n" +
> -        "      break;\n" +
> -        "    }\n" +
> -        "  }\n" +
> -        "};",
> -        "unsupported language extension: for each");
> -  }
> -
>    /**
>     * Verify that the given code has the given parse errors.
>     * @return If in IDE mode, returns a partial tree.
