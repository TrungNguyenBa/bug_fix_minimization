2c2
< index d92b16c..9061925 100644
---
> index d92b16cb..a7544505 100644
5c5,6
< @@ -328,9 +328,6 @@ class InlineObjectLiterals implements CompilerPass {
---
> @@ -327,10 +327,6 @@ class InlineObjectLiterals implements CompilerPass {
>                     NodeUtil.newUndefinedNode(null)));
8c9
<        Node replacement;
---
> -      Node replacement;
15c16,25
< @@ -350,7 +347,6 @@ class InlineObjectLiterals implements CompilerPass {
---
> @@ -339,7 +335,7 @@ class InlineObjectLiterals implements CompilerPass {
>        // create a tree. In the tree the first child be the COMMA to match
>        // the parser, otherwise tree equality tests fail.
>        nodes = Lists.reverse(nodes);
> -        replacement = new Node(Token.COMMA);
> +      Node replacement = new Node(Token.COMMA);
>        Node cur = replacement;
>        int i;
>        for (i = 0; i < nodes.size() - 2; i++) {
> @@ -350,7 +346,6 @@ class InlineObjectLiterals implements CompilerPass {
22a33,48
> diff --git a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
> index 2e15d4f4..2d764291 100644
> --- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
> +++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
> @@ -356,11 +356,6 @@ public class InlineObjectLiteralsTest extends CompilerTestCase {
>           "new JSCompiler_object_inline_b_0.c");
>    }
>  
> -  public void testBug545() {
> -    testLocal("var a = {}", "");
> -    testLocal("var a; a = {}", "true");
> -  }
> -
>    private final String LOCAL_PREFIX = "function local(){";
>    private final String LOCAL_POSTFIX = "}";
>  
