2c2
< index 45d88ba..71f76d8 100644
---
> index 45d88ba1..a4a41a8e 100644
5c5,7
< @@ -1429,7 +1429,7 @@ public class Compiler extends AbstractCompiler {
---
> @@ -1427,9 +1427,7 @@ public class Compiler extends AbstractCompiler {
>                cb.getLineIndex(), cb.getColumnIndex());
>          }
7,8c9,10
<          // if LanguageMode is ECMASCRIPT5_STRICT, only print 'use strict'
<          // for the first input file
---
> -        // if LanguageMode is ECMASCRIPT5_STRICT, only print 'use strict'
> -        // for the first input file
14c16
< @@ -1458,19 +1458,19 @@ public class Compiler extends AbstractCompiler {
---
> @@ -1458,19 +1456,19 @@ public class Compiler extends AbstractCompiler {
36a39,65
> diff --git a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> index 19ee30a3..7fcbb1b3 100644
> --- a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> +++ b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java
> @@ -787,22 +787,6 @@ public class CommandLineRunnerTest extends TestCase {
>      test("var let", RhinoErrorReporter.PARSE_ERROR);
>    }
>  
> -  public void testES5StrictUseStrict() {
> -    args.add("--language_in=ECMASCRIPT5_STRICT");
> -    Compiler compiler = compile(new String[] {"var x = f.function"});
> -    String outputSource = compiler.toSource();
> -    assertEquals("'use strict'", outputSource.substring(0, 12));
> -  }
> -
> -  public void testES5StrictUseStrictMultipleInputs() {
> -    args.add("--language_in=ECMASCRIPT5_STRICT");
> -    Compiler compiler = compile(new String[] {"var x = f.function",
> -        "var y = f.function", "var z = f.function"});
> -    String outputSource = compiler.toSource();
> -    assertEquals("'use strict'", outputSource.substring(0, 12));
> -    assertEquals(outputSource.substring(13).indexOf("'use strict'"), -1);
> -  }
> -
>    /* Helper functions */
>  
>    private void testSame(String original) {
