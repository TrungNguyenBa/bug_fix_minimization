2c2
< index fa7d47d..0afabc8 100644
---
> index fa7d47d2..ed88c98d 100644
5c5
< @@ -610,13 +610,9 @@ public abstract class ChainableReverseAbstractInterpreter
---
> @@ -610,13 +610,7 @@ public abstract class ChainableReverseAbstractInterpreter
10,11c10
< +        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
<            // Objects are restricted to "Function", subtypes are left
---
> -          // Objects are restricted to "Function", subtypes are left
14c13
<            // Only filter out subtypes of "function"
---
> -          // Only filter out subtypes of "function"
16a16
> +        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
19a20,84
> diff --git a/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java b/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
> index 704c969f..7a5eedbf 100644
> --- a/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
> +++ b/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
> @@ -117,20 +117,6 @@ public class ClosureReverseAbstractInterpreterTest extends
>          NULL_TYPE);
>    }
>  
> -  public void testGoogIsFunction2() throws Exception {
> -    testClosureFunction("goog.isFunction",
> -        OBJECT_NUMBER_STRING_BOOLEAN,
> -        U2U_CONSTRUCTOR_TYPE,
> -        OBJECT_NUMBER_STRING_BOOLEAN);
> -  }
> -
> -  public void testGoogIsFunction3() throws Exception {
> -    testClosureFunction("goog.isFunction",
> -        createUnionType(U2U_CONSTRUCTOR_TYPE,NUMBER_STRING_BOOLEAN),
> -        U2U_CONSTRUCTOR_TYPE,
> -        NUMBER_STRING_BOOLEAN);
> -  }
> -
>    public void testGoogIsArray() throws Exception {
>      testClosureFunction("goog.isArray",
>          OBJECT_TYPE,
> diff --git a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
> index ea687a57..632f5a89 100644
> --- a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
> +++ b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
> @@ -460,35 +460,6 @@ public class SemanticReverseAbstractInterpreterTest
>    }
>  
>    @SuppressWarnings("unchecked")
> -  public void testTypeof3() {
> -    FlowScope blind = newScope();
> -    testBinop(blind,
> -        Token.EQ,
> -        new Node(Token.TYPEOF, createVar(
> -            blind, "a", OBJECT_NUMBER_STRING_BOOLEAN)),
> -        Node.newString("function"),
> -        Sets.newHashSet(
> -            new TypedName("a", U2U_CONSTRUCTOR_TYPE)),
> -        Sets.newHashSet(
> -            new TypedName("a", OBJECT_NUMBER_STRING_BOOLEAN)));
> -  }
> -
> -  @SuppressWarnings("unchecked")
> -  public void testTypeof4() {
> -    FlowScope blind = newScope();
> -    testBinop(blind,
> -        Token.EQ,
> -        new Node(Token.TYPEOF, createVar(
> -            blind, "a", createUnionType(
> -                U2U_CONSTRUCTOR_TYPE,NUMBER_STRING_BOOLEAN))),
> -        Node.newString("function"),
> -        Sets.newHashSet(
> -            new TypedName("a", U2U_CONSTRUCTOR_TYPE)),
> -        Sets.newHashSet(
> -            new TypedName("a", NUMBER_STRING_BOOLEAN)));
> -  }
> -
> -  @SuppressWarnings("unchecked")
>    public void testInstanceOf() {
>      FlowScope blind = newScope();
>      testBinop(blind,
