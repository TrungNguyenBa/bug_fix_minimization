diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java
index c5ca8cd1..18a05efe 100644
--- a/src/java/org/apache/commons/lang/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/NumberUtils.java
@@ -142,9 +142,6 @@ public final class NumberUtils {
         if (val.length() == 0) {
             throw new NumberFormatException("\"\" is not a valid number.");
         }
-        if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
-            throw new NumberFormatException(val + " is not a valid number.");
-        }
         if (val.startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
diff --git a/src/test/org/apache/commons/lang/NumberUtilsTest.java b/src/test/org/apache/commons/lang/NumberUtilsTest.java
index 19aa3488..f95727be 100644
--- a/src/test/org/apache/commons/lang/NumberUtilsTest.java
+++ b/src/test/org/apache/commons/lang/NumberUtilsTest.java
@@ -521,16 +521,4 @@ public class NumberUtilsTest extends TestCase {
         }
     }
     
-    public void testLang457() {
-        String[] badInputs = new String[] { "l", "L", "f", "F", "junk", "bobL"};
-        for(int i=0; i<badInputs.length; i++) {
-            try {
-                NumberUtils.createNumber(badInputs[i]);
-                fail("NumberFormatException was expected for " + badInputs[i]);
-            } catch (NumberFormatException e) {
-                return; // expected
-            }
-        }
-    }
-    
 }
