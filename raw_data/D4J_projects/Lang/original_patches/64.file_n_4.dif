diff --git a/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java b/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
index 8ceea27c..579bb585 100644
--- a/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
+++ b/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2002-2006 The Apache Software Foundation.
+ * Copyright 2002-2005 The Apache Software Foundation.
  * 
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,7 +15,6 @@
  */
 package org.apache.commons.lang.enums;
 
-import java.net.URLClassLoader;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -65,103 +64,11 @@ public final class ValuedEnumTest extends TestCase {
         assertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.RED) > 0);
     }
 
-    public void testCompareTo_classloader_equal() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("BLUE").get(null);
-            assertTrue(((Comparable) blue1).compareTo(blue2) == 0);
-        }
-    }
-
-    public void testCompareTo_classloader_different() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("RED").get(null);
-            assertTrue(((Comparable) blue1).compareTo(blue2) != 0);
-        }
-    }
-
-    public void testCompareTo_nonEnumType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(new TotallyUnrelatedClass(ValuedColorEnum.BLUE.getValue()));
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_otherEnumType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_otherType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo("Blue");
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_null() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(null);
-            fail();
-        } catch (NullPointerException ex) {
-            // expected
-        }
-    }
-
     public void testEquals() {
         assertSame(ValuedColorEnum.RED, ValuedColorEnum.RED);
         assertSame(ValuedColorEnum.getEnum("Red"), ValuedColorEnum.RED);
     }
 
-    public void testEquals_classloader_equal() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("BLUE").get(null);
-            assertEquals(true, blue1.equals(blue2));
-        }
-    }
-
-    public void testEquals_classloader_different() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("RED").get(null);
-            assertEquals(false, blue1.equals(blue2));
-        }
-    }
-
     public void testToString() {
         String toString = ValuedColorEnum.RED.toString();
         assertEquals("ValuedColorEnum[Red=1]", toString);
@@ -225,17 +132,4 @@ public final class ValuedEnumTest extends TestCase {
         assertSame(ValuedColorEnum.BLUE, SerializationUtils.clone(ValuedColorEnum.BLUE));
     }
 
-    //-----------------------------------------------------------------------s
-    static class TotallyUnrelatedClass {
-        private final int value;
-
-        public TotallyUnrelatedClass(final int value) {
-            this.value = value;
-        }
-
-        public int getValue() {
-            return value;
-        }
-    }
-
 }
