2c2
< index 7c89b61..1ee636c 100644
---
> index 7c89b61d..b766b214 100644
5c5,14
< @@ -236,8 +236,6 @@ public class SerializationUtils {
---
> @@ -25,8 +25,6 @@ import java.io.ObjectOutputStream;
>  import java.io.ObjectStreamClass;
>  import java.io.OutputStream;
>  import java.io.Serializable;
> -import java.util.HashMap;
> -import java.util.Map;
>  
>  /**
>   * <p>Assists with the serialization process and performs additional functionality based
> @@ -236,8 +234,6 @@ public class SerializationUtils {
14c23,24
< @@ -251,15 +249,6 @@ public class SerializationUtils {
---
> @@ -250,16 +246,6 @@ public class SerializationUtils {
>          public ClassLoaderAwareObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {
17c27
<  
---
> -
30c40
< @@ -276,15 +265,7 @@ public class SerializationUtils {
---
> @@ -276,15 +262,7 @@ public class SerializationUtils {
45a56,88
> diff --git a/src/site/changes/changes.xml b/src/site/changes/changes.xml
> index ec922c60..e859411a 100644
> --- a/src/site/changes/changes.xml
> +++ b/src/site/changes/changes.xml
> @@ -22,7 +22,6 @@
>    <body>
>  
>    <release version="3.2" date="TBA" description="Next release">
> -    <action type="fix" issue="LANG-788">SerializationUtils throws ClassNotFoundException when cloning primitive classes</action>
>      <action type="fix" issue="LANG-786">StringUtils equals() relies on undefined behavior</action>
>      <action type="fix" issue="LANG-783">Documentation bug: StringUtils.split</action>
>      <action type="fix" issue="LANG-776">TypeUtilsTest contains incorrect type assignability assertion</action>
> diff --git a/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java b/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java
> index 9bf9c0d7..01c98cd2 100644
> --- a/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java
> +++ b/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java
> @@ -365,16 +365,6 @@ public class SerializationUtilsTest extends TestCase {
>          fail();
>      }
>  
> -    public void testPrimitiveTypeClassSerialization() {
> -        Class<?>[] primitiveTypes = { byte.class, short.class, int.class, long.class, float.class, double.class,
> -                boolean.class, char.class, void.class };
> -
> -        for (Class<?> primitiveType : primitiveTypes) {
> -            Class<?> clone = SerializationUtils.clone(primitiveType);
> -            assertEquals(primitiveType, clone);
> -        }
> -    }
> -
>  }
>  
>  @SuppressWarnings("serial")
