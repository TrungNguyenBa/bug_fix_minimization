2c2
< index 8db8abf..415cefa 100644
---
> index 8db8abf4..bf4942f4 100644
18c18,39
< @@ -672,7 +672,7 @@ public class TypeUtils {
---
> @@ -234,19 +234,6 @@ public class TypeUtils {
>          return true;
>      }
>  
> -    private static Type unrollVariableAssignments(TypeVariable<?> var, Map<TypeVariable<?>, Type> typeVarAssigns) {
> -        Type result;
> -        do {
> -            result = typeVarAssigns.get(var);
> -            if (result instanceof TypeVariable<?> && !result.equals(var)) {
> -                var = (TypeVariable<?>) result;
> -                continue;
> -            }
> -            break;
> -        } while (true);
> -        return result;
> -    }
> -
>      /**
>       * <p> Checks if the subject type may be implicitly cast to the target
>       * generic array type following the Java generics rules. </p>
> @@ -671,8 +658,8 @@ public class TypeUtils {
>          HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
21c42
<          // has target class been reached?
---
> -        // has target class been reached?
22a44
> +        // no arguments for the parameters, or target class has been reached
