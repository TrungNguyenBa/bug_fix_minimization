2c2
< index d1caaa8..8a26f28 100644
---
> index d1caaa89..0be752ba 100644
5c5,6
< @@ -282,14 +282,16 @@ public class FastDateFormat extends Format {
---
> @@ -281,15 +281,16 @@ public class FastDateFormat extends Format {
>          if (timeZone != null) {
8,10d8
<  
< -        if (locale == null) {
< -            locale = Locale.getDefault();
12a11,16
> +        }
>  
> +        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
> +        if (format == null) {
>              if (locale == null) {
>                  locale = Locale.getDefault();
16,21c20,22
<  
<          FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
<          if (format == null) {
< +            if (locale == null) {
< +                locale = Locale.getDefault();
< +            }
---
> -
> -        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
> -        if (format == null) {
25c26
< @@ -460,13 +462,15 @@ public class FastDateFormat extends Format {
---
> @@ -460,13 +461,16 @@ public class FastDateFormat extends Format {
30a32
> -        }
32,34c34,35
< +            key = new Pair(key, locale);
<          }
< -        key = new Pair(key, locale);
---
>              key = new Pair(key, locale);
> +        }
40a42
> +
43a46,96
> diff --git a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
> index 878dd343..e7394f0d 100644
> --- a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
> +++ b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
> @@ -132,46 +132,6 @@ public class FastDateFormatTest extends TestCase {
>          }
>      }
>  
> -    public void test_changeDefault_Locale_DateInstance() {
> -        Locale realDefaultLocale = Locale.getDefault();
> -        try {
> -            Locale.setDefault(Locale.US);
> -            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);
> -            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
> -            Locale.setDefault(Locale.GERMANY);
> -            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
> -
> -            assertSame(Locale.GERMANY, format1.getLocale());
> -            assertSame(Locale.US, format2.getLocale());
> -            assertSame(Locale.GERMANY, format3.getLocale());
> -            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
> -            assertTrue(format2 != format3);
> -
> -        } finally {
> -            Locale.setDefault(realDefaultLocale);
> -        }
> -    }
> -
> -    public void test_changeDefault_Locale_DateTimeInstance() {
> -        Locale realDefaultLocale = Locale.getDefault();
> -        try {
> -            Locale.setDefault(Locale.US);
> -            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);
> -            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
> -            Locale.setDefault(Locale.GERMANY);
> -            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
> -
> -            assertSame(Locale.GERMANY, format1.getLocale());
> -            assertSame(Locale.US, format2.getLocale());
> -            assertSame(Locale.GERMANY, format3.getLocale());
> -            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
> -            assertTrue(format2 != format3);
> -
> -        } finally {
> -            Locale.setDefault(realDefaultLocale);
> -        }
> -    }
> -
>      public void test_getInstance_String_TimeZone_Locale() {
>          Locale realDefaultLocale = Locale.getDefault();
>          TimeZone realDefaultZone = TimeZone.getDefault();
