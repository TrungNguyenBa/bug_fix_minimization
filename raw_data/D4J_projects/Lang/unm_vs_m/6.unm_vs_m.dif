0a1,12
> diff --git a/src/changes/changes.xml b/src/changes/changes.xml
> index f31c928a..aea46f0e 100644
> --- a/src/changes/changes.xml
> +++ b/src/changes/changes.xml
> @@ -22,7 +22,6 @@
>    <body>
>  
>    <release version="3.2" date="TBA" description="Next release">
> -    <action issue="LANG-857" type="add">StringIndexOutOfBoundsException in CharSequenceTranslator</action>
>      <action issue="LANG-856" type="add">Code refactoring in NumberUtils</action>
>      <action issue="LANG-855" type="add">NumberUtils#createBigInteger does not allow for hex and octal numbers</action>
>      <action issue="LANG-854" type="add">NumberUtils#createNumber - does not allow for hex numbers to be larger than Long</action>
2c14
< index 0500460..4d010ea 100644
---
> index 05004604..4d010eaf 100644
13a26,44
> diff --git a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java
> index bad56e97..b11a6337 100644
> --- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java
> +++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java
> @@ -2181,14 +2181,4 @@ public class StringUtilsTest {
>          expectedBytes = expectedString.getBytes(encoding);
>          assertEquals(expectedString, StringUtils.toString(expectedBytes, encoding));
>      }
> -    
> -    @Test
> -    public void testEscapeSurrogatePairs() throws Exception {
> -        assertEquals("\uD83D\uDE30", StringEscapeUtils.escapeCsv("\uD83D\uDE30"));
> -        // Examples from https://en.wikipedia.org/wiki/UTF-16
> -        assertEquals("\uD800\uDC00", StringEscapeUtils.escapeCsv("\uD800\uDC00"));
> -        assertEquals("\uD834\uDD1E", StringEscapeUtils.escapeCsv("\uD834\uDD1E"));
> -        assertEquals("\uDBFF\uDFFD", StringEscapeUtils.escapeCsv("\uDBFF\uDFFD"));
> -        
> -    }
>  }
