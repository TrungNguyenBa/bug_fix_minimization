diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index ec44dd50f..e07d8c3ae 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -52,11 +52,6 @@ If the output is not quite correct, check for invisible trailing spaces!
   <body>
     <release version="3.1" date="TBD" description="
 ">
-      <action dev="psteitz" type="update" issue="MATH-859">
-        Clarified definition of isSupportXxxBoundInclusive in RealDistribution
-        interface, made code consistent with the definition, and deprecated
-        these methods, marking for removal in 4.0.
-      </action>
       <action dev="erans" type="update" issue="MATH-841" due-to="Sebastien Riou">
         Performance improvement in computation of the greatest common divisor
         (in class "o.a.c.m.util.ArithmeticUtils").
diff --git a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
index e301e2ef5..8b0993c4d 100644
--- a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
@@ -272,7 +272,7 @@ public class FDistribution extends AbstractRealDistribution {
 
     /** {@inheritDoc} */
     public boolean isSupportLowerBoundInclusive() {
-        return false;
+        return true;
     }
 
     /** {@inheritDoc} */
diff --git a/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java b/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
index 90dc8fdeb..f09c5acbe 100644
--- a/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
@@ -137,26 +137,18 @@ public interface RealDistribution {
     double getSupportUpperBound();
 
     /**
-     * Whether or not the lower bound of support is in the domain of the density
-     * function.  Returns true iff {@code getSupporLowerBound()} is finite and
-     * {@code density(getSupportLowerBound())} returns a non-NaN, non-infinite
-     * value.
+     * Use this method to get information about whether the lower bound
+     * of the support is inclusive or not.
      *
-     * @return true if the lower bound of support is finite and the density 
-     * function returns a non-NaN, non-infinite value there
-     * @deprecated to be removed in 4.0
+     * @return whether the lower bound of the support is inclusive or not
      */
     boolean isSupportLowerBoundInclusive();
 
     /**
-     * Whether or not the upper bound of support is in the domain of the density
-     * function.  Returns true iff {@code getSupportUpperBound()} is finite and
-     * {@code density(getSupportUpperBound())} returns a non-NaN, non-infinite
-     * value.
-     *
-     * @return true if the upper bound of support is finite and the density 
-     * function returns a non-NaN, non-infinite value there
-     * @deprecated to be removed in 4.0
+     * Use this method to get information about whether the upper bound
+     * of the support is inclusive or not.
+     *
+     * @return whether the upper bound of the support is inclusive or not
      */
     boolean isSupportUpperBoundInclusive();
 
diff --git a/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java b/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
index 0d279de1f..5d32f6ebf 100644
--- a/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
@@ -181,7 +181,7 @@ public class UniformRealDistribution extends AbstractRealDistribution {
 
     /** {@inheritDoc} */
     public boolean isSupportUpperBoundInclusive() {
-        return true;
+        return false;
     }
 
     /**
