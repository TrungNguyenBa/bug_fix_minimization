diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
index e0cb42714..4e95ed5eb 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
@@ -32,11 +32,6 @@ import org.apache.commons.math.analysis.UnivariateRealFunction;
  */
 public class BrentSolver extends UnivariateRealSolverImpl {
 
-    /** Error message for non-bracketing interval. */
-    private static final String NON_BRACKETING_MESSAGE =
-        "function values at endpoints do not have different signs.  " +
-        "Endpoints: [{0}, {1}], Values: [{2}, {3}]";
-
     /** Serializable version identifier */
     private static final long serialVersionUID = 7694577816772532779L;
 
@@ -133,11 +128,6 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
 
-        if (yMin * yMax > 0) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
-        }
-
         // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);
 
@@ -186,7 +176,9 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
-                        NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
+                        "function values at endpoints do not have different signs.  " +
+                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
+                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 77f3faaca..c1390995d 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -39,9 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
   <body>
     <release version="2.1" date="TBD" description="TBD">
-      <action dev="luc" type="fix" issue="MATH-343" >
-        Fixed a missing bracketing check of initial interval in Brent solver.
-      </action>
       <action dev="dimpbx" type="fix" issue="MATH-342">
         In SVD, the matrices passed to EigenDecomposition are now symmetric
         by construction (rather than simply by definition).  In EigenDecomposition,
diff --git a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
index 587487155..8fc47f00f 100644
--- a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
+++ b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
@@ -329,12 +329,6 @@ public final class BrentSolverTest extends TestCase {
         } catch (IllegalArgumentException ex) {
             // expected
         }
-        try {  // no bracket
-            solver.solve(f, 1, 1.5, 1.2);
-            fail("Expecting IllegalArgumentException - non-bracketing");
-        } catch (IllegalArgumentException ex) {
-            // expected
-        }
     }
 
     public void testInitialGuess() throws MathException {
