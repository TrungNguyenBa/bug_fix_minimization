diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
index 59aeb07b0..395940365 100644
--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -141,13 +141,8 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret = 1.0;
-        double d = getDenominatorDegreesOfFreedom();
-        if (d > 2.0) {
-            // use mean
-            ret = d / (d - 2.0);
-        }
-        return ret;
+        return getDenominatorDegreesOfFreedom() /
+            (getDenominatorDegreesOfFreedom() - 2.0);
     }
     
     /**
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 69897d590..b626d7d0e 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -39,9 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
   <body>
     <release version="2.0" date="TBD" description="TBD">
-      <action dev="brentworden" type="fix" issue="MATH-227" due-to="Joerg Henning">
-        Fixed F distribution inverse CDF computation for small denominator degrees of freedom.
-      </action>
       <action dev="luc" type="fix" issue="MATH-226" due-to="Stuart Siegel">
         Fixed an error in CorrelatedRandomVectorGenerator leading to a component of
         the generated vector being constant.
diff --git a/src/test/org/apache/commons/math/distribution/FDistributionTest.java b/src/test/org/apache/commons/math/distribution/FDistributionTest.java
index de153e006..d345d68e9 100644
--- a/src/test/org/apache/commons/math/distribution/FDistributionTest.java
+++ b/src/test/org/apache/commons/math/distribution/FDistributionTest.java
@@ -105,19 +105,4 @@ public class FDistributionTest extends ContinuousDistributionAbstractTest {
         double x = fd.inverseCumulativeProbability(p);
         assertEquals(.999, x, 1.0e-5);
     }
-
-    public void testSmallDegreesOfFreedom() throws Exception {
-        org.apache.commons.math.distribution.FDistributionImpl fd =
-            new org.apache.commons.math.distribution.FDistributionImpl(
-                1.0, 1.0);
-        double p = fd.cumulativeProbability(0.975);
-        double x = fd.inverseCumulativeProbability(p);
-        assertEquals(0.975, x, 1.0e-5);
-
-        fd.setDenominatorDegreesOfFreedom(2.0);
-        p = fd.cumulativeProbability(0.975);
-        x = fd.inverseCumulativeProbability(p);
-        assertEquals(0.975, x, 1.0e-5);
-    }
-
 }
