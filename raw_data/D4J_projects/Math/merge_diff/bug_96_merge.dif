diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java
index 8b622cb29..16b387332 100644
--- a/src/java/org/apache/commons/math/complex/Complex.java
+++ b/src/java/org/apache/commons/math/complex/Complex.java
@@ -255,7 +255,10 @@ public class Complex implements Serializable  {
                 if (rhs.isNaN()) {
                     ret = this.isNaN();
                 } else {
-                    ret = (real == rhs.real) && (imaginary == rhs.imaginary); 
+                ret = (Double.doubleToRawLongBits(real) ==
+                        Double.doubleToRawLongBits(rhs.getReal())) &&
+                    (Double.doubleToRawLongBits(imaginary) ==
+                        Double.doubleToRawLongBits(rhs.getImaginary())); 
                 }
             } catch (ClassCastException ex) {
                 // ignore exception
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index a38c39c21..ee0980f1f 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -39,10 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
   <body>
     <release version="2.0" date="TBD" description="TBD">
-      <action dev="luc" type="fix" issue="MATH-221" due-to="Dieter Roth">
-        Changed the Complex.equals() method so that it considers +0 and -0 are equal,
-        as required by IEEE-754 standard.
-      </action>
       <action dev="luc" type="add" issue="MATH-220" >
         Added JAMA-like interfaces for decomposition algorithms. These interfaces
         decompose a matrix as a product of several other matrices with predefined
diff --git a/src/test/org/apache/commons/math/complex/ComplexTest.java b/src/test/org/apache/commons/math/complex/ComplexTest.java
index 61ff86f52..4ba7a6513 100644
--- a/src/test/org/apache/commons/math/complex/ComplexTest.java
+++ b/src/test/org/apache/commons/math/complex/ComplexTest.java
@@ -690,10 +690,4 @@ public class ComplexTest extends TestCase {
     public void testTanhCritical() {
         TestUtils.assertSame(nanInf, new Complex(0, pi/2).tanh());
     }
-
-    /** test issue MATH-221 */
-    public void testMath221() {
-        assertEquals(new Complex(0,-1), new Complex(0,1).multiply(new Complex(-1,0)));
-    }
-
 }
