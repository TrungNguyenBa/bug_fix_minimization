diff --git a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
index c7af9ae56..ebb36d310 100644
--- a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
@@ -21,7 +21,6 @@ import org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOpt
 import org.apache.commons.math3.analysis.function.HarmonicOscillator;
 import org.apache.commons.math3.exception.ZeroException;
 import org.apache.commons.math3.exception.NumberIsTooSmallException;
-import org.apache.commons.math3.exception.MathIllegalStateException;
 import org.apache.commons.math3.exception.util.LocalizedFormats;
 import org.apache.commons.math3.util.FastMath;
 
@@ -251,8 +250,6 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
          * has been called previously.
          *
          * @throws ZeroException if the abscissa range is zero.
-         * @throws MathIllegalStateException when the guessing procedure cannot
-         * produce sensible results.
          */
         private void guessAOmega() {
             // initialize the sums for the linear model between the two integrals
@@ -320,12 +317,6 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
                 }
                 a = 0.5 * (yMax - yMin);
             } else {
-                if (c2 == 0) {
-                    // In some ill-conditioned cases (cf. MATH-844), the guesser
-                    // procedure cannot produce sensible results.
-                    throw new MathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
-                }
-
                 a = FastMath.sqrt(c1 / c2);
                 omega = FastMath.sqrt(c2 / c3);
             }
