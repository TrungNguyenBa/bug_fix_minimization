diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java
index 457c9580d..08fb0c7d0 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java
@@ -24,13 +24,10 @@ package org.apache.commons.math.analysis.solvers;
  *
  * <p>Like the <em>Regula Falsi</em> method, convergence is guaranteed by
  * maintaining a bracketed solution. The <em>Pegasus</em> method however,
- * should converge much faster than the original <em>Regula Falsi</em>
- * method. Furthermore, this implementation of the <em>Pegasus</em> method
- * should not suffer from the same implementation issues as the <em>Regula
- * Falsi</em> method, which may fail to convergence in certain cases. Also,
- * the <em>Pegasus</em> method should converge faster than the
- * {@link IllinoisSolver <em>Illinois</em>} method, another <em>Regula
- * Falsi</em>-based method.</p>
+ * should converge much faster than the original <em>Regula Falsi</em> method.
+ * Furthermore, it should converge faster than the
+ * {@link IllinoisSolver <em>Illinois</em>} method, another
+ * <em>Regula Falsi</em>-based method.</p>
  *
  * <p>The <em>Pegasus</em> method assumes that the function is continuous,
  * but not necessarily smooth.</p>
@@ -53,7 +50,7 @@ public class PegasusSolver extends BaseSecantSolver {
     /**
      * Construct a solver.
      *
-     * @param absoluteAccuracy Absolute accuracy.
+     * @param absoluteAccuracy absolute accuracy
      */
     public PegasusSolver(final double absoluteAccuracy) {
         super(absoluteAccuracy, Method.PEGASUS);
@@ -62,8 +59,8 @@ public class PegasusSolver extends BaseSecantSolver {
     /**
      * Construct a solver.
      *
-     * @param relativeAccuracy Relative accuracy.
-     * @param absoluteAccuracy Absolute accuracy.
+     * @param relativeAccuracy relative accuracy
+     * @param absoluteAccuracy absolute accuracy
      */
     public PegasusSolver(final double relativeAccuracy,
                          final double absoluteAccuracy) {
@@ -73,8 +70,8 @@ public class PegasusSolver extends BaseSecantSolver {
     /**
      * Construct a solver.
      *
-     * @param relativeAccuracy Relative accuracy.
-     * @param absoluteAccuracy Absolute accuracy.
+     * @param relativeAccuracy relative accuracy
+     * @param absoluteAccuracy absolute accuracy
      * @param functionValueAccuracy Maximum function value error.
      */
     public PegasusSolver(final double relativeAccuracy,
@@ -82,4 +79,5 @@ public class PegasusSolver extends BaseSecantSolver {
                          final double functionValueAccuracy) {
         super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy, Method.PEGASUS);
     }
+
 }
