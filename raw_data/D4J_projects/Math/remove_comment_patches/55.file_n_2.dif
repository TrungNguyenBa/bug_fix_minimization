172,190c172,175
< public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
< final double n1 = v1.getNormSq();
< final double n2 = v2.getNormSq();
< if ((n1 * n2) < MathUtils.SAFE_MIN) {
< return ZERO;
< }
< final int deltaExp = (FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4;
< final double x1    = FastMath.scalb(v1.x, -deltaExp);
< final double y1    = FastMath.scalb(v1.y, -deltaExp);
< final double z1    = FastMath.scalb(v1.z, -deltaExp);
< final double x2    = FastMath.scalb(v2.x,  deltaExp);
< final double y2    = FastMath.scalb(v2.y,  deltaExp);
< final double z2    = FastMath.scalb(v2.z,  deltaExp);
< final double ratio = (x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2, 2 * deltaExp);
< final double rho   = FastMath.rint(256 * ratio) / 256;
< final double x3 = x1 - rho * x2;
< final double y3 = y1 - rho * y2;
< final double z3 = z1 - rho * z2;
< return new Vector3D(y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2);
---
> public static Vector3D crossProduct(Vector3D v1, Vector3D v2) {
> return new Vector3D(v1.y * v2.z - v1.z * v2.y,
> v1.z * v2.x - v1.x * v2.z,
> v1.x * v2.y - v1.y * v2.x);
