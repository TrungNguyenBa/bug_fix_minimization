8d7
< import java.util.HashSet;
10d8
< import java.util.Set;
167,170c165
< Integer basicRow =
< getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
< double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
< Set<Integer> basicRows = new HashSet<Integer>();
---
> double mostNegative = getDecisionVariableValue(getOriginalNumDecisionVariables());
172,176d166
< basicRow = getBasicRow(getNumObjectiveFunctions() + i);
< if (basicRows.contains(basicRow)) {
< coefficients[i] = 0;
< } else {
< basicRows.add(basicRow);
178,180c168
< (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
< (restrictToNonNegative ? 0 : mostNegative);
< }
---
> getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative);
183a172,184
> protected double getDecisionVariableValue(final int decisionVariable) {
> int col = getNumObjectiveFunctions() + decisionVariable;
> Integer basicRow = getBasicRow(col);
> if (basicRow == null) {
> return 0;
> }
> for (int i = getNumObjectiveFunctions(); i < col; i++) {
> if (tableau.getEntry(basicRow, i) == 1) {
> return 0;
> }
> }
> return getEntry(basicRow, getRhsOffset());
> }
