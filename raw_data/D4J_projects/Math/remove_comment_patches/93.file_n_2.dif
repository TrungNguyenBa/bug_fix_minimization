121,125d120
< private static final long[] factorials = new long[]
< {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,
< 479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,
< 355687428096000l, 6402373705728000l, 121645100408832000l,
< 2432902008176640000l};
127,130c122,123
< if (n < 0) {
< throw new IllegalArgumentException("must have n >= 0 for n!");
< }
< if (n > 20) {
---
> long result = Math.round(factorialDouble(n));
> if (result == Long.MAX_VALUE) {
132c125
< "factorial value is too large to fit in a long");
---
> "result too large to represent in a long integer");
134c127
< return factorials[n];
---
> return result;
140,142d132
< if (n < 21) {
< return factorial(n);
< }
149,151d138
< if (n < 21) {
< return Math.log(factorial(n));
< }
