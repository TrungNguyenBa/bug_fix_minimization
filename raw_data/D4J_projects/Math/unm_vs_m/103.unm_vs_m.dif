2c2
< index a08eac5..02810e1 100644
---
> index a08eac52f..ff54236de 100644
5,6c5,20
< @@ -106,18 +106,8 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution
<       * convergence exception is caught and 0 or 1 is returned.
---
> @@ -20,7 +20,6 @@ package org.apache.commons.math.distribution;
>  import java.io.Serializable;
>  
>  import org.apache.commons.math.MathException;
> -import org.apache.commons.math.MaxIterationsExceededException;
>  import org.apache.commons.math.special.Erf;
>  
>  /**
> @@ -101,23 +100,11 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution
>       * For this disbution, X, this method returns P(X &lt; <code>x</code>).
>       * @param x the value at which the CDF is evaluated.
>       * @return CDF evaluted at <code>x</code>. 
> -     * @throws MathException if the algorithm fails to converge; unless
> -     * x is more than 20 standard deviations from the mean, in which case the
> -     * convergence exception is caught and 0 or 1 is returned.
> +     * @throws MathException if the algorithm fails to converge.
23a38,84
> diff --git a/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java b/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> index 8ce73c139..894215bf6 100644
> --- a/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> +++ b/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> @@ -120,26 +120,4 @@ public class NormalDistributionTest extends ContinuousDistributionAbstractTest
>              // Expected
>          }
>      }
> -    
> -    /**
> -     * Check to make sure top-coding of extreme values works correctly.
> -     * Verifies fix for JIRA MATH-167
> -     */
> -    public void testExtremeValues() throws Exception {
> -        NormalDistribution distribution = (NormalDistribution) getDistribution();
> -        distribution.setMean(0);
> -        distribution.setStandardDeviation(1);
> -        for (int i = 0; i < 100; i+=5) { // make sure no convergence exception
> -            double lowerTail = distribution.cumulativeProbability((double)-i);
> -            double upperTail = distribution.cumulativeProbability((double) i);
> -            if (i < 10) { // make sure not top-coded
> -                assertTrue(lowerTail > 0.0d);
> -                assertTrue(upperTail < 1.0d);
> -            }
> -            else { // make sure top coding not reversed
> -                assertTrue(lowerTail < 0.00001);
> -                assertTrue(upperTail > 0.99999);
> -            }
> -        } 
> -   }
>  }
> diff --git a/xdocs/changes.xml b/xdocs/changes.xml
> index c4e02155d..427e05894 100644
> --- a/xdocs/changes.xml
> +++ b/xdocs/changes.xml
> @@ -87,11 +87,6 @@ Commons Math Release Notes</title>
>        <action dev="psteitz" type="update" issue="MATH-160" due-to "Matthias Hummel">
>          Added two sample (binned comparison) ChiSquare test.
>        </action>
> -      <action dev="psteitz" type="fix" issue="MATH-167">
> -        Modified NormalDistributionImpl.cumulativeProbablity to catch
> -        MaxIterationsExceededException and return 0 or 1, resp. if the argument
> -        is more than 20 standard deviations from the mean.
> -      </action>
>      </release>
>      <release version="1.1" date="2005-12-17"  
>   description="This is a maintenance release containing bug fixes and enhancements.
