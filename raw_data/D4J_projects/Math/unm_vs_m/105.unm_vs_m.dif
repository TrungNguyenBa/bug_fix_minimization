2c2
< index d9fa592..dcf512b 100644
---
> index d9fa592c0..c105a41ae 100644
5c5,27
< @@ -261,7 +261,7 @@ public class SimpleRegression implements Serializable {
---
> @@ -236,21 +236,6 @@ public class SimpleRegression implements Serializable {
>       * sum of squared errors</a> (SSE) associated with the regression 
>       * model.
>       * <p>
> -     * The sum is computed using the computational formula
> -     * <p>
> -     * <code>SSE = SYY - (SXY * SXY / SXX)</code>
> -     * <p>
> -     * where <code>SYY</code> is the sum of the squared deviations of the y
> -     * values about their mean, <code>SXX</code> is similarly defined and
> -     * <code>SXY</code> is the sum of the products of x and y mean deviations.
> -     * <p>
> -     * The sums are accumulated using the updating algorithm referenced in 
> -     * {@link #addData}.  
> -     * <p>
> -     * The return value is constrained to be non-negative - i.e., if due to 
> -     * rounding errors the computational formula returns a negative result, 
> -     * 0 is returned.
> -     * <p>
>       * <strong>Preconditions</strong>: <ul>
>       * <li>At least two observations (with at least two different x values)
>       * must have been added before invoking this method. If this method is 
> @@ -261,7 +246,7 @@ public class SimpleRegression implements Serializable {
13a36,79
> diff --git a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
> index b6aa67c9d..a649b10d2 100644
> --- a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
> +++ b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
> @@ -237,7 +237,6 @@ public final class SimpleRegressionTest extends TestCase {
>          }
>          assertEquals(0.0, regression.getSignificance(), 1.0e-5);
>          assertTrue(regression.getSlope() > 0.0);
> -        assertTrue(regression.getSumSquaredErrors() >= 0.0);
>      }
>  
>      public void testPerfectNegative() throws Exception {
> @@ -262,16 +261,4 @@ public final class SimpleRegressionTest extends TestCase {
>          assertTrue( 0.0 < regression.getSignificance()
>                      && regression.getSignificance() < 1.0);       
>      }
> -    
> -    
> -    // Jira MATH-85 = Bugzilla 39432
> -    public void testSSENonNegative() {
> -        double[] y = { 8915.102, 8919.302, 8923.502 };
> -        double[] x = { 1.107178495E2, 1.107264895E2, 1.107351295E2 };
> -        SimpleRegression reg = new SimpleRegression();
> -        for (int i = 0; i < x.length; i++) {
> -            reg.addData(x[i], y[i]);
> -        }
> -        assertTrue(reg.getSumSquaredErrors() >= 0.0);
> -    } 
>  }
> diff --git a/xdocs/changes.xml b/xdocs/changes.xml
> index c534f2137..8f33730f8 100644
> --- a/xdocs/changes.xml
> +++ b/xdocs/changes.xml
> @@ -62,10 +62,6 @@ Commons Math Release Notes</title>
>        <action dev="psteitz" type="update" issue="MATH-140" due-to="Xiaogang Zhang">
>          Added Fast Fourier Transform implementation.
>        </action>
> -      <action dev="psteitz" type="fix" issue="MATH-85" due-to="Mark Osborn, Luc Maisonobe">
> -        Modified getSumSquaredErrors method in SimpleRegression to always
> -        return a non-negative result.
> -      </action>
>      </release>
>      <release version="1.1" date="2005-12-17"  
>   description="This is a maintenance release containing bug fixes and enhancements.
