0a1,14
> diff --git a/src/changes/changes.xml b/src/changes/changes.xml
> index 9bc1c7857..2ae0029df 100644
> --- a/src/changes/changes.xml
> +++ b/src/changes/changes.xml
> @@ -52,9 +52,6 @@ If the output is not quite correct, check for invisible trailing spaces!
>    <body>
>      <release version="3.1" date="TBD" description="
>  ">
> -      <action dev="erans" type="fix" issue="MATH-835" due-to="Baste Nesse Buanes">
> -        Fixed overflow in method "percentageValue" in class "Fraction".
> -      </action>
>        <action dev="erans" type="fix" issue="MATH-622">
>          Raised (to 10) the default number of fractional digits to print out.
>        </action>
2c16
< index f81ff0a..f84218e 100644
---
> index f81ff0a94..f84218ebd 100644
13a28,49
> diff --git a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
> index c112ab752..c5071cc27 100644
> --- a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
> +++ b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
> @@ -243,17 +243,6 @@ public class FractionTest {
>      }
>  
>      @Test
> -    public void testMath835() {
> -        final int numer = Integer.MAX_VALUE / 99;
> -        final int denom = 1;
> -        final double percentage = 100 * ((double) numer) / denom;
> -        final Fraction frac = new Fraction(numer, denom);
> -        // With the implementation that preceded the fix suggested in MATH-835,
> -        // this test was failing, due to overflow.
> -        Assert.assertEquals(percentage, frac.percentageValue(), Math.ulp(percentage));
> -    }
> -
> -    @Test
>      public void testReciprocal() {
>          Fraction f = null;
>  
