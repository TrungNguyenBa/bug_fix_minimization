2c2
< index a6672e4..6181ec3 100644
---
> index a6672e426..e93d76d46 100644
5c5,6
< @@ -683,14 +683,8 @@ public class BigFraction
---
> @@ -682,16 +682,7 @@ public class BigFraction
>       */
8c9
<          double result = numerator.doubleValue() / denominator.doubleValue();
---
> -        double result = numerator.doubleValue() / denominator.doubleValue();
10,11c11,12
<              // Numerator and/or denominator must be out of range:
<              // Calculate how far to shift them to put them in range.
---
> -            // Numerator and/or denominator must be out of range:
> -            // Calculate how far to shift them to put them in range.
17c18,19
<          return result;
---
> -        return result;
> +        return numerator.doubleValue() / denominator.doubleValue();
20c22,24
< @@ -736,14 +730,8 @@ public class BigFraction
---
>      /**
> @@ -735,16 +726,7 @@ public class BigFraction
>       */
23c27
<          float result = numerator.floatValue() / denominator.floatValue();
---
> -        float result = numerator.floatValue() / denominator.floatValue();
25,26c29,30
<              // Numerator and/or denominator must be out of range:
<              // Calculate how far to shift them to put them in range.
---
> -            // Numerator and/or denominator must be out of range:
> -            // Calculate how far to shift them to put them in range.
32c36,37
<          return result;
---
> -        return result;
> +        return numerator.floatValue() / denominator.floatValue();
34a40,91
>      /**
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index e7005bbf8..51d89fd4e 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -52,11 +52,6 @@ The <action> type attribute can be add,update,fix,remove.
>      If the output is not quite correct, check for invisible trailing spaces!
>       -->
>      <release version="3.0" date="TBD" description="TBD">
> -      <action dev="erans" type="fix" issue="MATH-744" due-to="Thundre">
> -        Fixed "doubleValue" and "floatValue" method in "BigFraction" when
> -        numerator and denominator are larger than the range of the
> -        corresponding primitive type.
> -      </action>
>        <action dev="erans" type="update" issue="MATH-488">
>          Removed "MathException" (from package "o.a.c.math").
>        </action>
> diff --git a/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java b/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java
> index f2fbe0d2a..42051ca8a 100644
> --- a/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java
> +++ b/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java
> @@ -198,30 +198,6 @@ public class BigFractionTest {
>          Assert.assertEquals(1.0 / 3.0, second.doubleValue(), 0.0);
>      }
>  
> -    // MATH-744
> -    @Test
> -    public void testDoubleValueForLargeNumeratorAndDenominator() {
> -        final BigInteger pow400 = BigInteger.TEN.pow(400);
> -        final BigInteger pow401 = BigInteger.TEN.pow(401);
> -        final BigInteger two = new BigInteger("2");
> -        final BigFraction large = new BigFraction(pow401.add(BigInteger.ONE),
> -                                                  pow400.multiply(two));
> -
> -        Assert.assertEquals(5, large.doubleValue(), 1e-15);
> -    }
> -
> -    // MATH-744
> -    @Test
> -    public void testFloatValueForLargeNumeratorAndDenominator() {
> -        final BigInteger pow400 = BigInteger.TEN.pow(400);
> -        final BigInteger pow401 = BigInteger.TEN.pow(401);
> -        final BigInteger two = new BigInteger("2");
> -        final BigFraction large = new BigFraction(pow401.add(BigInteger.ONE),
> -                                                  pow400.multiply(two));
> -
> -        Assert.assertEquals(5, large.floatValue(), 1e-15);
> -    }
> -
>      @Test
>      public void testFloatValue() {
>          BigFraction first = new BigFraction(1, 2);
