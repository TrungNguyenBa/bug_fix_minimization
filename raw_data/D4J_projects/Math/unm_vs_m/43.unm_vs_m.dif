2c2
< index da987cd..1203d51 100644
---
> index da987cd3c..1203d516c 100644
21a22,94
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index df07eb3c2..f7278cc8a 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -52,11 +52,6 @@ The <action> type attribute can be add,update,fix,remove.
>      If the output is not quite correct, check for invisible trailing spaces!
>       -->
>      <release version="3.0" date="TBD" description="TBD">
> -      <action dev="psteitz" type="fix" issue="MATH-691">
> -        Fixed errors in SummaryStatistics addValue causing variance, mean, or
> -        geometric mean statistics not to be updated if they have been overriden
> -        using instances of commons-math supplied implementations.
> -      </action>
>        <action dev="psteitz" type="update" issue="MATH-694">
>          Removed First, Third, Fourth moments from the public API.
>          These internally used statistics have non-standard definitions.
> diff --git a/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java b/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java
> index 53cf5656d..0194778a8 100644
> --- a/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java
> +++ b/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java
> @@ -18,10 +18,7 @@ package org.apache.commons.math.stat.descriptive;
>  
>  
>  import org.apache.commons.math.TestUtils;
> -
> -import org.apache.commons.math.stat.descriptive.moment.GeometricMean;
>  import org.apache.commons.math.stat.descriptive.moment.Mean;
> -import org.apache.commons.math.stat.descriptive.moment.Variance;
>  import org.apache.commons.math.stat.descriptive.summary.Sum;
>  import org.apache.commons.math.util.FastMath;
>  import org.junit.Assert;
> @@ -308,41 +305,4 @@ public class SummaryStatisticsTest {
>              // expected
>          }
>      }
> -    
> -    
> -    /**
> -     * JIRA: MATH-691
> -     */
> -    @Test
> -    public void testOverrideVarianceWithMathClass() throws Exception {
> -        double[] scores = {1, 2, 3, 4};
> -        SummaryStatistics stats = new SummaryStatistics();
> -        stats.setVarianceImpl(new Variance(false)); //use "population variance"
> -        for(double i : scores) {
> -          stats.addValue(i);
> -        }
> -        Assert.assertEquals((new Variance(false)).evaluate(scores),stats.getVariance(), 0); 
> -    }
> -    
> -    @Test
> -    public void testOverrideMeanWithMathClass() throws Exception {
> -        double[] scores = {1, 2, 3, 4};
> -        SummaryStatistics stats = new SummaryStatistics();
> -        stats.setMeanImpl(new Mean()); 
> -        for(double i : scores) {
> -          stats.addValue(i);
> -        }
> -        Assert.assertEquals((new Mean()).evaluate(scores),stats.getMean(), 0); 
> -    }
> -    
> -    @Test
> -    public void testOverrideGeoMeanWithMathClass() throws Exception {
> -        double[] scores = {1, 2, 3, 4};
> -        SummaryStatistics stats = new SummaryStatistics();
> -        stats.setGeoMeanImpl(new GeometricMean()); 
> -        for(double i : scores) {
> -          stats.addValue(i);
> -        }
> -        Assert.assertEquals((new GeometricMean()).evaluate(scores),stats.getGeometricMean(), 0); 
> -    }
>  }
