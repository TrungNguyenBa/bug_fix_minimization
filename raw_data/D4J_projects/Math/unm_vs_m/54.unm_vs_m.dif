2c2
< index 54aabc4..73f1ea3 100644
---
> index 54aabc411..04e66132d 100644
5c5,15
< @@ -270,9 +270,6 @@ public class Dfp implements FieldElement<Dfp> {
---
> @@ -163,7 +163,7 @@ public class Dfp implements FieldElement<Dfp> {
>      /** Mantissa. */
>      protected int[] mant;
>  
> -    /** Sign bit: 1 for positive, -1 for negative. */
> +    /** Sign bit: & for positive, -1 for negative. */
>      protected byte sign;
>  
>      /** Exponent. */
> @@ -269,10 +269,6 @@ public class Dfp implements FieldElement<Dfp> {
>          if (exponent == -1023) {
8c18
<                  // make sure 0 has the right sign
---
> -                // make sure 0 has the right sign
15c25
< @@ -2319,10 +2316,7 @@ public class Dfp implements FieldElement<Dfp> {
---
> @@ -2319,10 +2315,7 @@ public class Dfp implements FieldElement<Dfp> {
26a37,77
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index dd5c56276..8f3901486 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -52,9 +52,6 @@ The <action> type attribute can be add,update,fix,remove.
>      If the output is not quite correct, check for invisible trailing spaces!
>       -->
>      <release version="3.0" date="TBD" description="TBD">
> -      <action dev="luc" type="add" issue="MATH-567" due-to="Michel">
> -        Fixed conversion problems to/from 0 in Decimal Floating Point (Dfp) class.
> -      </action>
>        <action dev="luc" type="fix" >
>          Fixed initialization of multistep ODE integrators. Relying on the interpolation model
>          of the starter integrator inside only one step was wrong. The model may have a too
> diff --git a/src/test/java/org/apache/commons/math/dfp/DfpTest.java b/src/test/java/org/apache/commons/math/dfp/DfpTest.java
> index d8426c3ae..db5c05ce5 100644
> --- a/src/test/java/org/apache/commons/math/dfp/DfpTest.java
> +++ b/src/test/java/org/apache/commons/math/dfp/DfpTest.java
> @@ -17,8 +17,6 @@
>  
>  package org.apache.commons.math.dfp;
>  
> -import org.apache.commons.math.util.FastMath;
> -import org.apache.commons.math.util.MathUtils;
>  import org.junit.After;
>  import org.junit.Assert;
>  import org.junit.Before;
> @@ -1506,13 +1504,4 @@ public class DfpTest {
>               DfpField.FLAG_INVALID, "Sqrt #9");
>      }
>  
> -    @Test
> -    public void testIssue567() {
> -        DfpField field = new DfpField(100);
> -        Assert.assertEquals(0.0, field.getZero().toDouble(), MathUtils.SAFE_MIN);
> -        Assert.assertEquals(0.0, field.newDfp(0.0).toDouble(), MathUtils.SAFE_MIN);
> -        Assert.assertEquals(-1, FastMath.copySign(1, field.newDfp(-0.0).toDouble()), MathUtils.EPSILON);
> -        Assert.assertEquals(+1, FastMath.copySign(1, field.newDfp(+0.0).toDouble()), MathUtils.EPSILON);
> -    }
> -
>  }
