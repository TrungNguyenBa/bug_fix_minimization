2c2
< index fb0614e..56c9ffe 100644
---
> index fb0614eb7..56c9ffebc 100644
19a20,72
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index 72035c1a9..5c0e1d92d 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -52,9 +52,6 @@ The <action> type attribute can be add,update,fix,remove.
>      If the output is not quite correct, check for invisible trailing spaces!
>       -->
>      <release version="3.0" date="TBD" description="TBD">
> -      <action dev="erans" type="fix" issue="MATH-552" due-to="James Bence">
> -        Fixed bug in "MultidimensionalCounter".
> -      </action>
>        <action dev="luc" type="fix" issue="MATH-423" due-to="Gilles Sadowski" >
>          All unit tests have been converted to Junit 4. They need at least Junit 4.5 to run
>          (the ant and maven build systems are currently set to use Junit 4.8.2)
> diff --git a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
> index a3110b99a..827030df3 100644
> --- a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
> +++ b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
> @@ -121,32 +121,20 @@ public class MultidimensionalCounterTest {
>  
>      @Test
>      public void testIterationConsistency() {
> -        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 4);
> +        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 2);
>          final int[][] expected = new int[][] {
>              { 0, 0, 0 },
>              { 0, 0, 1 },
> -            { 0, 0, 2 },
> -            { 0, 0, 3 },
>              { 0, 1, 0 },
>              { 0, 1, 1 },
> -            { 0, 1, 2 },
> -            { 0, 1, 3 },
>              { 0, 2, 0 },
>              { 0, 2, 1 },
> -            { 0, 2, 2 },
> -            { 0, 2, 3 },
>              { 1, 0, 0 },
>              { 1, 0, 1 },
> -            { 1, 0, 2 },
> -            { 1, 0, 3 },
>              { 1, 1, 0 },
>              { 1, 1, 1 },
> -            { 1, 1, 2 },
> -            { 1, 1, 3 },
>              { 1, 2, 0 },
> -            { 1, 2, 1 },
> -            { 1, 2, 2 },
> -            { 1, 2, 3 }
> +            { 1, 2, 1 }
>          };
>  
>          final int totalSize = c.getSize();
