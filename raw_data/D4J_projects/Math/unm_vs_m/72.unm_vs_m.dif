2c2
< index 7fc090e..e0cb427 100644
---
> index 7fc090e2b..e0cb42714 100644
22a23,61
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index 9008d9520..77f3faaca 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -39,10 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
>    </properties>
>    <body>
>      <release version="2.1" date="TBD" description="TBD">
> -      <action dev="luc" type="fix" issue="MATH-344" >
> -        Fixed wrong return values when enpoints are roots in Brent solver with
> -        a user provided initial guess
> -      </action>
>        <action dev="luc" type="fix" issue="MATH-343" >
>          Fixed a missing bracketing check of initial interval in Brent solver.
>        </action>
> diff --git a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
> index a3bc425eb..587487155 100644
> --- a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
> +++ b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java
> @@ -308,17 +308,10 @@ public final class BrentSolverTest extends TestCase {
>  
>          // endpoint is root
>          double result = solver.solve(f, Math.PI, 4);
> -        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());
> +        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());
>  
>          result = solver.solve(f, 3, Math.PI);
> -        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());
> -
> -        result = solver.solve(f, Math.PI, 4, 3.5);
> -        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());
> -
> -        result = solver.solve(f, 3, Math.PI, 3.07);
> -        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());
> -
> +        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());
>      }
>  
>      public void testBadEndpoints() throws Exception {
