2c2
< index 1bbad3e..6f3e883 100644
---
> index 1bbad3ec3..70b2a2b52 100644
5c5,14
< @@ -242,15 +242,12 @@ public abstract class EmbeddedRungeKuttaIntegrator
---
> @@ -17,6 +17,8 @@
>  
>  package org.apache.commons.math.ode.nonstiff;
>  
> +import java.util.Arrays;
> +
>  import org.apache.commons.math.ode.DerivativeException;
>  import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
>  import org.apache.commons.math.ode.IntegratorException;
> @@ -242,15 +244,12 @@ public abstract class EmbeddedRungeKuttaIntegrator
10,11c19
< +          final double[] scale;
<            if (vecAbsoluteTolerance == null) {
---
> -          if (vecAbsoluteTolerance == null) {
15,16c23,25
< +              scale = new double[y0.length];
< +              java.util.Arrays.fill(scale, scalAbsoluteTolerance);
---
> +          final double[] scale;
> +          if (vecAbsoluteTolerance != null) {
> +            scale = vecAbsoluteTolerance;
21c30,31
< +              scale = vecAbsoluteTolerance;
---
> +            scale = new double[y0.length];
> +            Arrays.fill(scale, scalAbsoluteTolerance);
24a35,107
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index c1a0ee33e..f18bedf16 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -39,11 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
>    </properties>
>    <body>
>      <release version="2.1" date="TBD" description="TBD">
> -      <action dev="luc" type="fix" issue="MATH-338" due-to="Vincent Morand">
> -        Fixed automatic step initialization in embedded Runge-Kutta integrators.
> -        The relative tolerance setting was never used, only the absolute tolerance
> -        was used.
> -      </action>
>        <action dev="psteitz" type="fix" issue="MATH-329">
>          Fixed regression in Frequency.getPct(Object) introduced in 2.0. Cumulative
>          percent was being returned for Object arguments in place of percent.
> diff --git a/src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java b/src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java
> index 20dd4249d..0355800ac 100644
> --- a/src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java
> +++ b/src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java
> @@ -145,9 +145,9 @@ public class AdamsMoultonIntegratorTest {
>              integ.integrate(pb, pb.getInitialTime(), pb.getInitialState(),
>                              pb.getFinalTime(), new double[pb.getDimension()]);
>              if (nSteps < 4) {
> -                assertTrue(integ.getEvaluations() > 140);
> +                assertTrue(integ.getEvaluations() > 150);
>              } else {
> -                assertTrue(integ.getEvaluations() < 90);
> +                assertTrue(integ.getEvaluations() < 100);
>              }
>          }
>  
> diff --git a/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java b/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java
> index bb36cda31..895cefff6 100644
> --- a/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java
> +++ b/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java
> @@ -147,8 +147,8 @@ public class DormandPrince853IntegratorTest
>        integ.integrate(pb, pb.getInitialTime(), pb.getInitialState(),
>                        pb.getFinalTime(), new double[pb.getDimension()]);
>  
> -      assertTrue(handler.getLastError() < 8.1e-8);
> -      assertTrue(handler.getMaximalValueError() < 1.1e-7);
> +      assertTrue(handler.getLastError() < 8.0e-8);
> +      assertTrue(handler.getMaximalValueError() < 2.0e-7);
>        assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);
>        assertEquals("Dormand-Prince 8 (5, 3)", integ.getName());
>    }
> diff --git a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java
> index 56663c9a8..0785d9754 100644
> --- a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java
> +++ b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java
> @@ -387,7 +387,7 @@ public class HighamHall54IntegratorTest
>          maxError = error;
>        }
>        if (isLast) {
> -        assertTrue(maxError < 4.2e-11);
> +        assertTrue(maxError < 4e-11);
>          assertTrue(nbSteps < 670);
>        }
>      }
> diff --git a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java
> index a2645b7ac..9094b2a87 100644
> --- a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java
> +++ b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java
> @@ -49,7 +49,7 @@ public class HighamHall54StepInterpolatorTest {
>      HighamHall54Integrator integ = new HighamHall54Integrator(minStep, maxStep,
>                                                                scalAbsoluteTolerance,
>                                                                scalRelativeTolerance);
> -    StepInterpolatorTestUtils.checkDerivativesConsistency(integ, pb, 1.1e-10);
> +    StepInterpolatorTestUtils.checkDerivativesConsistency(integ, pb, 1.0e-10);
>    }
>  
>    @Test
