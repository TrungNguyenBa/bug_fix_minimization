2c2
< index e6398f6..bf3e4bf 100644
---
> index e6398f6ab..5b76415e2 100644
4a5,22
> @@ -131,7 +131,7 @@ public class UnivariateRealSolverUtils {
>       /**
>       * This method attempts to find two values a and b satisfying <ul>
>       * <li> <code> lowerBound <= a < initial < b <= upperBound</code> </li>
> -     * <li> <code> f(a) * f(b) <= 0 </code> </li>
> +     * <li> <code> f(a) * f(b) < 0 </code> </li>
>       * </ul>
>       * If f is continuous on <code>[a,b],</code> this means that <code>a</code>
>       * and <code>b</code> bracket a root of f.
> @@ -141,7 +141,7 @@ public class UnivariateRealSolverUtils {
>       * function at <code>a</code> and <code>b</code> and keeps moving
>       * the endpoints out by one unit each time through a loop that terminates 
>       * when one of the following happens: <ul>
> -     * <li> <code> f(a) * f(b) <= 0 </code> --  success!</li>
> +     * <li> <code> f(a) * f(b) < 0 </code> --  success!</li>
>       * <li> <code> a = lower </code> and <code> b = upper</code> 
>       * -- ConvergenceException </li>
>       * <li> <code> maximumIterations</code> iterations elapse 
13a32,119
> diff --git a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
> index 419fbfa37..808a573f1 100644
> --- a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
> +++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
> @@ -65,7 +65,7 @@ public abstract class AbstractContinuousDistribution
>          }
>  
>          // by default, do simple root finding using bracketing and default solver.
> -        // subclasses can override if there is a better method.
> +        // subclasses can overide if there is a better method.
>          UnivariateRealFunction rootFindingFunction =
>              new UnivariateRealFunction() {
>              public double value(double x) throws FunctionEvaluationException {
> diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
> index e25385370..468db7282 100644
> --- a/src/site/xdoc/changes.xml
> +++ b/src/site/xdoc/changes.xml
> @@ -39,9 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
>    </properties>
>    <body>
>      <release version="2.0" date="TBD" description="TBD">
> -      <action dev="luc" type="fix" issue="MATH-280">
> -        Fixed a bracketing issue in inverse cumulative probability computation
> -      </action>
>        <action dev="luc" type="add" issue="MATH-279" due-to="Michael Bjorkegren">
>          Added a check for too few rows with respect to the number of predictors in linear regression
>        </action>
> diff --git a/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java b/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
> index e87094ff3..9afd18e58 100644
> --- a/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
> +++ b/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
> @@ -17,12 +17,13 @@
>  
>  package org.apache.commons.math.analysis.solvers;
>  
> -import junit.framework.TestCase;
> -
> +import org.apache.commons.math.ConvergenceException;
>  import org.apache.commons.math.MathException;
>  import org.apache.commons.math.analysis.SinFunction;
>  import org.apache.commons.math.analysis.UnivariateRealFunction;
>  
> +import junit.framework.TestCase;
> +
>  /**
>   * @version $Revision$ $Date$
>   */
> @@ -90,6 +91,15 @@ public class UnivariateRealSolverUtilsTest extends TestCase {
>          assertTrue(sin.value(result[1]) > 0);
>      }
>      
> +    public void testBracketCornerSolution() throws MathException {
> +        try {
> +            UnivariateRealSolverUtils.bracket(sin, 1.5, 0, 2.0); 
> +            fail("Expecting ConvergenceException");
> +        } catch (ConvergenceException ex) {
> +            // expected
> +        }
> +    }
> +    
>      public void testBadParameters() throws MathException {
>          try { // null function
>              UnivariateRealSolverUtils.bracket(null, 1.5, 0, 2.0);
> diff --git a/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java b/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> index 8f3433c06..dd607f3f7 100644
> --- a/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> +++ b/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java
> @@ -17,8 +17,6 @@
>  
>  package org.apache.commons.math.distribution;
>  
> -import org.apache.commons.math.MathException;
> -
>  /**
>   * Test cases for NormalDistribution.
>   * Extends ContinuousDistributionAbstractTest.  See class javadoc for
> @@ -163,11 +161,4 @@ public class NormalDistributionTest extends ContinuousDistributionAbstractTest
>              }
>          } 
>     }
> -
> -    public void testMath280() throws MathException {
> -        NormalDistribution normal = new NormalDistributionImpl(0,1);
> -        double result = normal.inverseCumulativeProbability(0.9772498680518209);
> -        assertEquals(2.0, result, 1.0e-12);
> -    }
> -
>  }
