2c2
< index 70d622d..c8deca3 100644
---
> index 70d622dda..237c2f60b 100644
5c5,13
< @@ -107,11 +107,7 @@ public class Frequency implements Serializable {
---
> @@ -101,17 +101,13 @@ public class Frequency implements Serializable {
>       * </p>
>       * 
>       * @param v the value to add.
> -     * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
> -     *         or is not comparable with previous entries
> +     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
> +     * @throws ClassCastException if <code>v</code> is not Comparable
>       * @deprecated use {@link #addValue(Comparable)} instead
16a25,50
> diff --git a/src/test/org/apache/commons/math/stat/FrequencyTest.java b/src/test/org/apache/commons/math/stat/FrequencyTest.java
> index dc18d9212..b2e0b3a2d 100644
> --- a/src/test/org/apache/commons/math/stat/FrequencyTest.java
> +++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java
> @@ -192,16 +192,16 @@ public final class FrequencyTest extends TestCase {
>      // Check what happens when non-Comparable objects are added
>      public void testAddNonComparable(){
>          try {
> -            f.addValue(new Object()); // This was previously OK
> -            fail("Expected IllegalArgumentException");
> -        } catch (IllegalArgumentException expected) {
> +            f.addValue(new Object()); // This was OK
> +            fail("Expected ClassCastException");
> +        } catch (ClassCastException expected) {
>          }
>          f.clear();
>          f.addValue(1);
>          try {
>              f.addValue(new Object());
> -            fail("Expected IllegalArgumentException");
> -        } catch (IllegalArgumentException expected) {
> +            fail("Expected ClassCastException"); // Previously would have been IllegalArgument
> +        } catch (ClassCastException expected) {
>          }
>      }
>  
