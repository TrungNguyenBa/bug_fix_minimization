2c2
< index 237c2f6..75914d7 100644
---
> index 237c2f60b..a5b8d7b60 100644
5c5,12
< @@ -107,8 +107,6 @@ public class Frequency implements Serializable {
---
> @@ -101,26 +101,9 @@ public class Frequency implements Serializable {
>       * </p>
>       * 
>       * @param v the value to add.
> -     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
> -     * @throws ClassCastException if <code>v</code> is not Comparable
> -     * @deprecated use {@link #addValue(Comparable)} instead
> +     * @throws IllegalArgumentException if <code>v</code> is not comparable.
7c14
<      @Deprecated
---
> -    @Deprecated
11,17c18,28
<      
<      /**
<       * Adds 1 to the frequency count for v.
< @@ -120,7 +118,6 @@ public class Frequency implements Serializable {
<       * @param v the value to add.
<       * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
<       */
---
> -    
> -    /**
> -     * Adds 1 to the frequency count for v.
> -     * <p>
> -     * If other objects have already been added to this Frequency, v must
> -     * be comparable to those that have already been added.
> -     * </p>
> -     * 
> -     * @param v the value to add.
> -     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
> -     */
21a33,59
> diff --git a/src/test/org/apache/commons/math/stat/FrequencyTest.java b/src/test/org/apache/commons/math/stat/FrequencyTest.java
> index b2e0b3a2d..cc8fd030e 100644
> --- a/src/test/org/apache/commons/math/stat/FrequencyTest.java
> +++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java
> @@ -189,22 +189,6 @@ public final class FrequencyTest extends TestCase {
>          }
>      }
>      
> -    // Check what happens when non-Comparable objects are added
> -    public void testAddNonComparable(){
> -        try {
> -            f.addValue(new Object()); // This was OK
> -            fail("Expected ClassCastException");
> -        } catch (ClassCastException expected) {
> -        }
> -        f.clear();
> -        f.addValue(1);
> -        try {
> -            f.addValue(new Object());
> -            fail("Expected ClassCastException"); // Previously would have been IllegalArgument
> -        } catch (ClassCastException expected) {
> -        }
> -    }
> -
>      /** test empty table */
>      public void testEmptyTable() {
>          assertEquals("freq sum, empty table", 0, f.getSumFreq());
