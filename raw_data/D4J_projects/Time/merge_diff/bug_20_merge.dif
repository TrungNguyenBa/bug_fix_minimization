diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index e47e1dee..978a1de1 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -51,9 +51,6 @@ Bug fixes since 2.0
   Names now returned in locales other than English
   The names may differ between JDK1.5 and 1.6 due to the underlying JDK data
 
-- Time zone id parsing fixed for some longer time zones [3427389]
-  Time zones like "America/Dawson_Creek" were not parsed as "America/Dawson" was matched first
-
 - Interval/MutableInterval toString() now contains the time-zone offset [https://github.com/JodaOrg/joda-time/pull/2]
 
 - Javadoc fix to MutablePeriod [3413869]
diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
index ebb4b087..558a5864 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {
 
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
-            String best = null;
             for (String id : ALL_IDS) {
                 if (str.startsWith(id)) {
-                	if (best == null || id.length() > best.length()) {
-                		best = id;
+                    bucket.setZone(DateTimeZone.forID(id));
+                    return position + id.length();
                 }
             }
-            }
-            if (best != null) {
-                bucket.setZone(DateTimeZone.forID(best));
-                return position + best.length();
-            }
             return ~position;
         }
     }
diff --git a/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java b/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
index 54033bb4..31aa53c0 100644
--- a/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
+++ b/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
@@ -252,16 +252,6 @@ public class TestDateTimeFormatterBuilder extends TestCase {
         assertEquals(dt, f.withOffsetParsed().parseDateTime("2007-03-04 12:30 Europe/Paris"));
     }
 
-    public void test_printParseZoneDawsonCreek() {  // clashes with shorter Dawson
-        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()
-            .appendPattern("yyyy-MM-dd HH:mm ").appendTimeZoneId();
-        DateTimeFormatter f = bld.toFormatter();
-        
-        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID("America/Dawson_Creek"));
-        assertEquals("2007-03-04 12:30 America/Dawson_Creek", f.print(dt));
-        assertEquals(dt, f.parseDateTime("2007-03-04 12:30 America/Dawson_Creek"));
-    }
-
     public void test_printParseOffset() {
         DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()
             .appendPattern("yyyy-MM-dd HH:mm ").appendTimeZoneOffset("Z", true, 2, 2);
