diff --git a/src/main/java/de/Keyle/MyPet/skill/skills/implementation/inventory/CustomInventory.java b/src/main/java/de/Keyle/MyPet/skill/skills/implementation/inventory/CustomInventory.java
index a8d26309..325a8a8a 100644
--- a/src/main/java/de/Keyle/MyPet/skill/skills/implementation/inventory/CustomInventory.java
+++ b/src/main/java/de/Keyle/MyPet/skill/skills/implementation/inventory/CustomInventory.java
@@ -149,28 +149,19 @@ public class CustomInventory implements IInventory, Listener {
         }
     }
 
-    public ItemStack splitStack(int slot, int subtract) {
-        if (slot <= size && items.get(slot) != null) {
-            if (items.get(slot).count <= subtract) {
-                ItemStack itemStack = items.get(slot);
-                items.set(slot, null);
+    public ItemStack splitStack(int i, int j) {
+        if (i <= size && items.get(i) != null) {
+            ItemStack itemStack;
+            if (items.get(i).count <= j) {
+                itemStack = items.get(i);
+                items.set(i, null);
                 return itemStack;
             } else {
-                ItemStack itemStack = items.get(slot);
-
-                // --------------------------------------------------------------------------------------------
-                // ToDo: replace with cloneAndSubtract(int i) on next Bukkit revision
-                ItemStack splittedStack = new ItemStack(itemStack.getItem(), subtract, itemStack.getData());
-                if (itemStack.getTag() != null) {
-                    splittedStack.setTag(((NBTTagCompound) itemStack.getTag().clone()));
-                }
-                itemStack.count -= slot;
-                // --------------------------------------------------------------------------------------------
-
-                if (items.get(slot).count == 0) {
-                    items.set(slot, null);
+                itemStack = items.get(i).a(j);
+                if (items.get(i).count == 0) {
+                    items.set(i, null);
                 }
-                return splittedStack;
+                return itemStack;
             }
         }
         return null;
