diff --git a/src/main/java/de/Keyle/MyPet/entity/types/ocelot/MyOcelot.java b/src/main/java/de/Keyle/MyPet/entity/types/ocelot/MyOcelot.java
index e4c50159..3ae3fc06 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/ocelot/MyOcelot.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/ocelot/MyOcelot.java
@@ -35,28 +35,34 @@ import static de.Keyle.MyPet.entity.types.MyPet.LeashFlag.Tamed;
 import static org.bukkit.Material.RAW_FISH;
 
 @MyPetInfo(food = {RAW_FISH}, leashFlags = {Tamed})
-public class MyOcelot extends MyPet implements IMyPetBaby {
+public class MyOcelot extends MyPet implements IMyPetBaby
+{
     protected boolean isSitting = false;
     protected boolean isBaby = false;
     protected Type catType = Type.WILD_OCELOT;
 
-    public MyOcelot(MyPetPlayer petOwner) {
+    public MyOcelot(MyPetPlayer petOwner)
+    {
         super(petOwner);
     }
 
-    public Type getCatType() {
+    public Type getCatType()
+    {
         return catType;
     }
 
-    public void setCatType(Type value) {
-        if (status == PetState.Here) {
+    public void setCatType(Type value)
+    {
+        if (status == PetState.Here)
+        {
             ((EntityMyOcelot) getCraftPet().getHandle()).setCatType(value.getId());
         }
         this.catType = value;
     }
 
     @Override
-    public CompoundTag getExtendedInfo() {
+    public CompoundTag getExtendedInfo()
+    {
         CompoundTag info = super.getExtendedInfo();
         info.getValue().put("CatType", new IntTag("CatType", getCatType().getId()));
         info.getValue().put("Sitting", new ByteTag("Sitting", isSitting()));
@@ -65,47 +71,59 @@ public class MyOcelot extends MyPet implements IMyPetBaby {
     }
 
     @Override
-    public void setExtendedInfo(CompoundTag info) {
-        if (info.getValue().containsKey("CatType")) {
+    public void setExtendedInfo(CompoundTag info)
+    {
+        if (info.getValue().containsKey("CatType"))
+        {
             setCatType(Type.getType(((IntTag) info.getValue().get("CatType")).getValue()));
         }
-        if (info.getValue().containsKey("Sitting")) {
+        if (info.getValue().containsKey("Sitting"))
+        {
             setSitting(((ByteTag) info.getValue().get("Sitting")).getBooleanValue());
         }
-        if (info.getValue().containsKey("Baby")) {
+        if (info.getValue().containsKey("Baby"))
+        {
             setBaby(((ByteTag) info.getValue().get("Baby")).getBooleanValue());
         }
     }
 
     @Override
-    public MyPetType getPetType() {
+    public MyPetType getPetType()
+    {
         return MyPetType.Ocelot;
     }
 
-    public boolean isBaby() {
+    public boolean isBaby()
+    {
         return isBaby;
     }
 
-    public void setBaby(boolean flag) {
-        if (status == PetState.Here) {
+    public void setBaby(boolean flag)
+    {
+        if (status == PetState.Here)
+        {
             ((EntityMyOcelot) getCraftPet().getHandle()).setBaby(flag);
         }
         this.isBaby = flag;
     }
 
-    public boolean isSitting() {
+    public boolean isSitting()
+    {
         return isSitting;
     }
 
-    public void setSitting(boolean flag) {
-        if (status == PetState.Here) {
+    public void setSitting(boolean flag)
+    {
+        if (status == PetState.Here)
+        {
             ((EntityMyOcelot) getCraftPet().getHandle()).setSitting(flag);
         }
         this.isSitting = flag;
     }
 
     @Override
-    public String toString() {
+    public String toString()
+    {
         return "MyOcelot{owner=" + getOwner().getName() + ", name=" + ChatColor.stripColor(petName) + ", exp=" + experience.getExp() + "/" + experience.getRequiredExp() + ", lv=" + experience.getLevel() + ", status=" + status.name() + ", skilltree=" + (skillTree != null ? skillTree.getName() : "-") + ", worldgroup=" + worldGroup + ", sitting=" + isSitting() + ", cattype=" + getCatType().name() + ", baby=" + isBaby() + "}";
     }
 }
\ No newline at end of file
