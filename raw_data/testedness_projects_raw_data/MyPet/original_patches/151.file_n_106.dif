diff --git a/src/main/java/de/Keyle/MyPet/entity/types/sheep/EntityMySheep.java b/src/main/java/de/Keyle/MyPet/entity/types/sheep/EntityMySheep.java
index 27f57f93..a9647305 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/sheep/EntityMySheep.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/sheep/EntityMySheep.java
@@ -29,62 +29,80 @@ import net.minecraft.server.v1_6_R2.*;
 import org.bukkit.DyeColor;
 
 @EntitySize(width = 0.9F, height = 1.3F)
-public class EntityMySheep extends EntityMyPet {
+public class EntityMySheep extends EntityMyPet
+{
     public static boolean CAN_BE_SHEARED = true;
     public static boolean CAN_REGROW_WOOL = true;
     public static ConfigItem GROW_UP_ITEM;
 
-    public EntityMySheep(World world, MyPet myPet) {
+    public EntityMySheep(World world, MyPet myPet)
+    {
         super(world, myPet);
     }
 
-    public DyeColor getColor() {
+    public DyeColor getColor()
+    {
         return ((MySheep) myPet).color;
     }
 
-    public void setColor(byte color) {
+    public void setColor(byte color)
+    {
         this.datawatcher.watch(16, color);
         ((MySheep) myPet).color = DyeColor.getByWoolData(color);
     }
 
     @Override
-    protected String getDeathSound() {
+    protected String getDeathSound()
+    {
         return "mob.sheep.say";
     }
 
     @Override
-    protected String getHurtSound() {
+    protected String getHurtSound()
+    {
         return "mob.sheep.say";
     }
 
-    protected String getLivingSound() {
+    protected String getLivingSound()
+    {
         return "mob.sheep.say";
     }
 
-    public boolean handlePlayerInteraction(EntityHuman entityhuman) {
-        if (super.handlePlayerInteraction(entityhuman)) {
+    public boolean handlePlayerInteraction(EntityHuman entityhuman)
+    {
+        if (super.handlePlayerInteraction(entityhuman))
+        {
             return true;
         }
 
         ItemStack itemStack = entityhuman.inventory.getItemInHand();
 
-        if (getOwner().equals(entityhuman) && itemStack != null && canUseItem()) {
-            if (itemStack.id == 351 && itemStack.getData() != ((MySheep) myPet).getColor().getDyeData() && !isSheared()) {
-                if (itemStack.getData() <= 15) {
+        if (getOwner().equals(entityhuman) && itemStack != null && canUseItem())
+        {
+            if (itemStack.id == 351 && itemStack.getData() != ((MySheep) myPet).getColor().getDyeData() && !isSheared())
+            {
+                if (itemStack.getData() <= 15)
+                {
                     setColor(DyeColor.getByDyeData((byte) itemStack.getData()));
-                    if (!entityhuman.abilities.canInstantlyBuild) {
-                        if (--itemStack.count <= 0) {
+                    if (!entityhuman.abilities.canInstantlyBuild)
+                    {
+                        if (--itemStack.count <= 0)
+                        {
                             entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
                         }
                     }
                     return true;
                 }
-            } else if (itemStack.id == Item.SHEARS.id && CAN_BE_SHEARED && !((MySheep) myPet).isSheared()) {
-                if (!this.world.isStatic) {
+            }
+            else if (itemStack.id == Item.SHEARS.id && CAN_BE_SHEARED && !((MySheep) myPet).isSheared())
+            {
+                if (!this.world.isStatic)
+                {
                     ((MySheep) myPet).setSheared(true);
                     int i = 1 + this.random.nextInt(3);
 
-                    for (int j = 0; j < i; ++j) {
+                    for (int j = 0 ; j < i ; ++j)
+                    {
                         EntityItem entityitem = this.a(new ItemStack(Block.WOOL.id, 1, ((MySheep) myPet).getColor().getDyeData()), 1.0F);
 
                         entityitem.motY += (double) (this.random.nextFloat() * 0.05F);
@@ -95,10 +113,15 @@ public class EntityMySheep extends EntityMyPet {
                 }
                 itemStack.damage(1, entityhuman);
                 return true;
-            } else if (GROW_UP_ITEM.compare(itemStack) && getOwner().getPlayer().isSneaking()) {
-                if (isBaby()) {
-                    if (!entityhuman.abilities.canInstantlyBuild) {
-                        if (--itemStack.count <= 0) {
+            }
+            else if (GROW_UP_ITEM.compare(itemStack) && getOwner().getPlayer().isSneaking())
+            {
+                if (isBaby())
+                {
+                    if (!entityhuman.abilities.canInstantlyBuild)
+                    {
+                        if (--itemStack.count <= 0)
+                        {
                             entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
                         }
                     }
@@ -110,50 +133,65 @@ public class EntityMySheep extends EntityMyPet {
         return false;
     }
 
-    protected void initDatawatcher() {
+    protected void initDatawatcher()
+    {
         super.initDatawatcher();
         this.datawatcher.a(12, new Integer(0));     // age
         this.datawatcher.a(16, new Byte((byte) 0)); // color/sheared
     }
 
-    public boolean isBaby() {
+    public boolean isBaby()
+    {
         return this.datawatcher.getInt(12) < 0;
     }
 
-    public void setBaby(boolean flag) {
-        if (flag) {
+    public void setBaby(boolean flag)
+    {
+        if (flag)
+        {
             this.datawatcher.watch(12, Integer.valueOf(Integer.MIN_VALUE));
-        } else {
+        }
+        else
+        {
             this.datawatcher.watch(12, new Integer(0));
         }
         ((MySheep) myPet).isBaby = flag;
     }
 
-    public boolean isSheared() {
+    public boolean isSheared()
+    {
         return ((MySheep) myPet).isSheared;
     }
 
-    public void setSheared(boolean flag) {
+    public void setSheared(boolean flag)
+    {
 
         byte b0 = this.datawatcher.getByte(16);
-        if (flag) {
+        if (flag)
+        {
             this.datawatcher.watch(16, (byte) (b0 | 16));
-        } else {
+        }
+        else
+        {
             this.datawatcher.watch(16, (byte) (b0 & -17));
         }
         ((MySheep) myPet).isSheared = flag;
     }
 
-    public void playStepSound() {
+    public void playStepSound()
+    {
         makeSound("mob.sheep.step", 0.15F, 1.0F);
     }
 
-    public void setColor(DyeColor color) {
+    public void setColor(DyeColor color)
+    {
         setColor(color.getWoolData());
     }
 
-    public void setMyPet(MyPet myPet) {
-        if (myPet != null) {
+    public void setMyPet(MyPet myPet)
+    {
+        if (myPet != null)
+        {
             super.setMyPet(myPet);
 
             this.setColor(((MySheep) myPet).getColor());
@@ -162,7 +200,8 @@ public class EntityMySheep extends EntityMyPet {
         }
     }
 
-    public void setPathfinder() {
+    public void setPathfinder()
+    {
         super.setPathfinder();
         petPathfinderSelector.addGoal("EatGrass", new EatGrass(this, 0.02));
     }
