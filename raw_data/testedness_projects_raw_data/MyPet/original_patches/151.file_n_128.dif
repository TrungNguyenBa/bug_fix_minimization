diff --git a/src/main/java/de/Keyle/MyPet/entity/types/zombie/EntityMyZombie.java b/src/main/java/de/Keyle/MyPet/entity/types/zombie/EntityMyZombie.java
index 031b70bf..6011c5ef 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/zombie/EntityMyZombie.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/zombie/EntityMyZombie.java
@@ -30,31 +30,48 @@ import de.Keyle.MyPet.util.itemstringinterpreter.ConfigItem;
 import net.minecraft.server.v1_6_R2.*;
 
 @EntitySize(width = 0.6F, height = 1.9F)
-public class EntityMyZombie extends EntityMyPet {
+public class EntityMyZombie extends EntityMyPet
+{
     public static ConfigItem GROW_UP_ITEM;
 
-    public EntityMyZombie(World world, MyPet myPet) {
+    public EntityMyZombie(World world, MyPet myPet)
+    {
         super(world, myPet);
     }
 
-    public boolean checkForEquipment(ItemStack itemstack) {
+    public boolean checkForEquipment(ItemStack itemstack)
+    {
         int slot = b(itemstack);
-        if (slot == 0) {
-            if (itemstack.getItem() instanceof ItemSword) {
+        if (slot == 0)
+        {
+            if (itemstack.getItem() instanceof ItemSword)
+            {
                 return true;
-            } else if (itemstack.getItem() instanceof ItemAxe) {
+            }
+            else if (itemstack.getItem() instanceof ItemAxe)
+            {
                 return true;
-            } else if (itemstack.getItem() instanceof ItemSpade) {
+            }
+            else if (itemstack.getItem() instanceof ItemSpade)
+            {
                 return true;
-            } else if (itemstack.getItem() instanceof ItemHoe) {
+            }
+            else if (itemstack.getItem() instanceof ItemHoe)
+            {
                 return true;
-            } else if (itemstack.getItem() instanceof ItemPickaxe) {
+            }
+            else if (itemstack.getItem() instanceof ItemPickaxe)
+            {
                 return true;
-            } else if (itemstack.getItem() instanceof ItemBow) {
+            }
+            else if (itemstack.getItem() instanceof ItemBow)
+            {
                 return true;
             }
             return false;
-        } else {
+        }
+        else
+        {
             return true;
         }
     }
@@ -63,7 +80,8 @@ public class EntityMyZombie extends EntityMyPet {
      * Returns the sound that is played when the MyPet dies
      */
     @Override
-    protected String getDeathSound() {
+    protected String getDeathSound()
+    {
         return "mob.zombie.death";
     }
 
@@ -71,22 +89,26 @@ public class EntityMyZombie extends EntityMyPet {
      * Returns the sound that is played when the MyPet get hurt
      */
     @Override
-    protected String getHurtSound() {
+    protected String getHurtSound()
+    {
         return "mob.zombie.hurt";
     }
 
     /**
      * Returns the default sound of the MyPet
      */
-    protected String getLivingSound() {
+    protected String getLivingSound()
+    {
         return "mob.zombie.say";
     }
 
-    public ItemStack getPetEquipment(int slot) {
+    public ItemStack getPetEquipment(int slot)
+    {
         return ((MyZombie) myPet).getEquipment(EquipmentSlot.getSlotById(slot));
     }
 
-    public ItemStack[] getPetEquipment() {
+    public ItemStack[] getPetEquipment()
+    {
         return ((MyZombie) myPet).getEquipment();
     }
 
@@ -96,21 +118,28 @@ public class EntityMyZombie extends EntityMyPet {
      * true: there was a reaction on rightclick
      * false: no reaction on rightclick
      */
-    public boolean handlePlayerInteraction(EntityHuman entityhuman) {
-        if (super.handlePlayerInteraction(entityhuman)) {
+    public boolean handlePlayerInteraction(EntityHuman entityhuman)
+    {
+        if (super.handlePlayerInteraction(entityhuman))
+        {
             return true;
         }
 
         ItemStack itemStack = entityhuman.inventory.getItemInHand();
 
-        if (getOwner().equals(entityhuman) && itemStack != null) {
-            if (itemStack.id == Item.SHEARS.id && getOwner().getPlayer().isSneaking()) {
-                if (!canEquip()) {
+        if (getOwner().equals(entityhuman) && itemStack != null)
+        {
+            if (itemStack.id == Item.SHEARS.id && getOwner().getPlayer().isSneaking())
+            {
+                if (!canEquip())
+                {
                     return false;
                 }
-                for (EquipmentSlot slot : EquipmentSlot.values()) {
+                for (EquipmentSlot slot : EquipmentSlot.values())
+                {
                     ItemStack itemInSlot = ((MyZombie) myPet).getEquipment(slot);
-                    if (itemInSlot != null) {
+                    if (itemInSlot != null)
+                    {
                         EntityItem entityitem = this.a(itemInSlot.cloneItemStack(), 1.0F);
                         entityitem.motY += (double) (this.random.nextFloat() * 0.05F);
                         entityitem.motX += (double) ((this.random.nextFloat() - this.random.nextFloat()) * 0.1F);
@@ -119,13 +148,17 @@ public class EntityMyZombie extends EntityMyPet {
                     }
                 }
                 return true;
-            } else if (checkForEquipment(itemStack) && getOwner().getPlayer().isSneaking()) {
-                if (!canEquip()) {
+            }
+            else if (checkForEquipment(itemStack) && getOwner().getPlayer().isSneaking())
+            {
+                if (!canEquip())
+                {
                     return false;
                 }
                 EquipmentSlot slot = EquipmentSlot.getSlotById(b(itemStack));
                 ItemStack itemInSlot = ((MyZombie) myPet).getEquipment(slot);
-                if (itemInSlot != null && !entityhuman.abilities.canInstantlyBuild) {
+                if (itemInSlot != null && !entityhuman.abilities.canInstantlyBuild)
+                {
                     EntityItem entityitem = this.a(itemInSlot.cloneItemStack(), 1.0F);
                     entityitem.motY += (double) (this.random.nextFloat() * 0.05F);
                     entityitem.motX += (double) ((this.random.nextFloat() - this.random.nextFloat()) * 0.1F);
@@ -134,17 +167,24 @@ public class EntityMyZombie extends EntityMyPet {
                 ItemStack itemStackClone = itemStack.cloneItemStack();
                 itemStackClone.count = 1;
                 setPetEquipment(b(itemStack), itemStackClone);
-                if (!entityhuman.abilities.canInstantlyBuild) {
+                if (!entityhuman.abilities.canInstantlyBuild)
+                {
                     --itemStack.count;
                 }
-                if (itemStack.count <= 0) {
+                if (itemStack.count <= 0)
+                {
                     entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
                 }
                 return true;
-            } else if (GROW_UP_ITEM.compare(itemStack) && getOwner().getPlayer().isSneaking()) {
-                if (isBaby()) {
-                    if (!entityhuman.abilities.canInstantlyBuild) {
-                        if (--itemStack.count <= 0) {
+            }
+            else if (GROW_UP_ITEM.compare(itemStack) && getOwner().getPlayer().isSneaking())
+            {
+                if (isBaby())
+                {
+                    if (!entityhuman.abilities.canInstantlyBuild)
+                    {
+                        if (--itemStack.count <= 0)
+                        {
                             entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
                         }
                     }
@@ -156,37 +196,45 @@ public class EntityMyZombie extends EntityMyPet {
         return false;
     }
 
-    protected void initDatawatcher() {
+    protected void initDatawatcher()
+    {
         super.initDatawatcher();
         getDataWatcher().a(12, new Byte((byte) 0));     // is baby
         getDataWatcher().a(13, new Byte((byte) 0));     // is villager
         getDataWatcher().a(14, Byte.valueOf((byte) 0)); // N/A
     }
 
-    public boolean isBaby() {
+    public boolean isBaby()
+    {
         return ((MyZombie) myPet).isBaby;
     }
 
-    public void setBaby(boolean flag) {
+    public void setBaby(boolean flag)
+    {
         getDataWatcher().watch(12, (byte) (flag ? 1 : 0));
         ((MyZombie) myPet).isBaby = flag;
     }
 
-    public boolean isVillager() {
+    public boolean isVillager()
+    {
         return ((MyZombie) myPet).isVillager;
     }
 
-    public void setVillager(boolean flag) {
+    public void setVillager(boolean flag)
+    {
         getDataWatcher().watch(13, (byte) (flag ? 1 : 0));
         ((MyZombie) myPet).isVillager = flag;
     }
 
-    public void playStepSound() {
+    public void playStepSound()
+    {
         makeSound("mob.zombie.step", 0.15F, 1.0F);
     }
 
-    public void setMyPet(MyPet myPet) {
-        if (myPet != null) {
+    public void setMyPet(MyPet myPet)
+    {
+        if (myPet != null)
+        {
             super.setMyPet(myPet);
             final MyZombie myZombie = (MyZombie) myPet;
             final EntityMyZombie entityMyZombie = this;
@@ -194,11 +242,16 @@ public class EntityMyZombie extends EntityMyPet {
             this.setBaby(myZombie.isBaby());
             this.setVillager(myZombie.isVillager());
 
-            MyPetPlugin.getPlugin().getServer().getScheduler().runTaskLater(MyPetPlugin.getPlugin(), new Runnable() {
-                public void run() {
-                    if (myZombie.getStatus() == PetState.Here) {
-                        for (EquipmentSlot slot : EquipmentSlot.values()) {
-                            if (myZombie.getEquipment(slot) != null) {
+            MyPetPlugin.getPlugin().getServer().getScheduler().runTaskLater(MyPetPlugin.getPlugin(), new Runnable()
+            {
+                public void run()
+                {
+                    if (myZombie.getStatus() == PetState.Here)
+                    {
+                        for (EquipmentSlot slot : EquipmentSlot.values())
+                        {
+                            if (myZombie.getEquipment(slot) != null)
+                            {
                                 entityMyZombie.setPetEquipment(slot.getSlotId(), myZombie.getEquipment(slot));
                             }
                         }
@@ -208,7 +261,8 @@ public class EntityMyZombie extends EntityMyPet {
         }
     }
 
-    public void setPetEquipment(int slot, ItemStack itemStack) {
+    public void setPetEquipment(int slot, ItemStack itemStack)
+    {
         ((WorldServer) this.world).getTracker().a(this, new Packet5EntityEquipment(this.id, slot, itemStack));
         ((MyZombie) myPet).equipment.put(EquipmentSlot.getSlotById(slot), itemStack);
     }
