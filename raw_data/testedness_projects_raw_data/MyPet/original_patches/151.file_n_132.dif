diff --git a/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/SkillPropertyEditor.java b/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/SkillPropertyEditor.java
index 0e4a4489..5b7b593b 100644
--- a/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/SkillPropertyEditor.java
+++ b/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/SkillPropertyEditor.java
@@ -32,7 +32,8 @@ import java.awt.event.ActionListener;
 import java.util.HashMap;
 import java.util.Map;
 
-public class SkillPropertyEditor {
+public class SkillPropertyEditor
+{
     protected JPanel propertyPanel;
     protected JPanel skillPropertyEditorPanel;
     protected JButton cancelButton;
@@ -44,9 +45,12 @@ public class SkillPropertyEditor {
 
     private GridConstraints constraints = new GridConstraints();
 
-    public SkillPropertyEditor() {
-        saveButton.addActionListener(new ActionListener() {
-            public void actionPerformed(ActionEvent e) {
+    public SkillPropertyEditor()
+    {
+        saveButton.addActionListener(new ActionListener()
+        {
+            public void actionPerformed(ActionEvent e)
+            {
                 skillPropertiesPanel.verifyInput();
                 skillPropertiesPanel.save();
                 GuiMain.levelCreator.getFrame().setEnabled(true);
@@ -54,8 +58,10 @@ public class SkillPropertyEditor {
             }
         });
 
-        cancelButton.addActionListener(new ActionListener() {
-            public void actionPerformed(ActionEvent e) {
+        cancelButton.addActionListener(new ActionListener()
+        {
+            public void actionPerformed(ActionEvent e)
+            {
                 skillPropertiesPanel.load(skill.getProperties());
                 GuiMain.levelCreator.getFrame().setEnabled(true);
                 skillPropertyEditorFrame.setVisible(false);
@@ -63,35 +69,42 @@ public class SkillPropertyEditor {
         });
     }
 
-    public void setSkill(ISkillInfo skill) {
+    public void setSkill(ISkillInfo skill)
+    {
         this.skill = skill;
         propertyPanel.removeAll();
         skillPropertiesPanel = skill.getGuiPanel();
         propertyPanel.add(skillPropertiesPanel.getMainPanel(), constraints);
     }
 
-    public JPanel getMainPanel() {
+    public JPanel getMainPanel()
+    {
         return skillPropertyEditorPanel;
     }
 
-    public JFrame getFrame() {
-        if (skillPropertyEditorFrame == null) {
+    public JFrame getFrame()
+    {
+        if (skillPropertyEditorFrame == null)
+        {
             skillPropertyEditorFrame = new JFrame("Skill Properties - MyPet " + MyPetVersion.getMyPetVersion());
         }
         return skillPropertyEditorFrame;
     }
 
-    public Map<String, String> seperateParameter(String parameterString) {
+    public Map<String, String> seperateParameter(String parameterString)
+    {
         Map<String, String> parameterMap = new HashMap<String, String>();
 
         String[] splittedParameters = parameterString.split("&");
 
-        for (String splittedParameter : splittedParameters) {
-            if (splittedParameter.contains("=")) {
+        for (String splittedParameter : splittedParameters)
+        {
+            if (splittedParameter.contains("="))
+            {
                 String[] parameters = splittedParameter.split("=", 2);
                 parameterMap.put(parameters[0], parameters[1]);
             }
         }
         return parameterMap;
     }
-}
\ No newline at end of file
+}
