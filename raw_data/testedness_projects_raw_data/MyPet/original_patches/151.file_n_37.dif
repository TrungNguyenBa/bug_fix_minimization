diff --git a/src/main/java/de/Keyle/MyPet/commands/admin/CommandOptionSkilltree.java b/src/main/java/de/Keyle/MyPet/commands/admin/CommandOptionSkilltree.java
index 336577b1..fc29c736 100644
--- a/src/main/java/de/Keyle/MyPet/commands/admin/CommandOptionSkilltree.java
+++ b/src/main/java/de/Keyle/MyPet/commands/admin/CommandOptionSkilltree.java
@@ -37,34 +37,46 @@ import org.bukkit.entity.Player;
 import java.util.ArrayList;
 import java.util.List;
 
-public class CommandOptionSkilltree implements CommandOptionTabCompleter {
+public class CommandOptionSkilltree implements CommandOptionTabCompleter
+{
     @Override
-    public boolean onCommandOption(CommandSender sender, String[] args) {
-        if (args.length < 2) {
+    public boolean onCommandOption(CommandSender sender, String[] args)
+    {
+        if (args.length < 2)
+        {
             return false;
         }
 
         String lang = BukkitUtil.getCommandSenderLanguage(sender);
         Player petOwner = Bukkit.getServer().getPlayer(args[0]);
 
-        if (petOwner == null || !petOwner.isOnline()) {
+        if (petOwner == null || !petOwner.isOnline())
+        {
             sender.sendMessage("[" + ChatColor.AQUA + "MyPet" + ChatColor.RESET + "] " + Locales.getString("Message.No.PlayerOnline", lang));
             return true;
-        } else if (!MyPetList.hasMyPet(petOwner)) {
+        }
+        else if (!MyPetList.hasMyPet(petOwner))
+        {
             sender.sendMessage("[" + ChatColor.AQUA + "MyPet" + ChatColor.RESET + "] " + Util.formatText(Locales.getString("Message.No.UserHavePet", lang), petOwner.getName()));
             return true;
         }
         MyPet myPet = MyPetList.getMyPet(petOwner);
 
         SkillTreeMobType skillTreeMobType = SkillTreeMobType.getMobTypeByName(myPet.getPetType().getTypeName());
-        if (skillTreeMobType.hasSkillTree(args[1])) {
+        if (skillTreeMobType.hasSkillTree(args[1]))
+        {
             SkillTree skillTree = skillTreeMobType.getSkillTree(args[1]);
-            if (myPet.setSkilltree(skillTree)) {
+            if (myPet.setSkilltree(skillTree))
+            {
                 sender.sendMessage("[" + ChatColor.AQUA + "MyPet" + ChatColor.RESET + "] " + Util.formatText(Locales.getString("Message.Skilltree.SwitchedToFor", lang), petOwner.getName(), skillTree.getName()));
-            } else {
+            }
+            else
+            {
                 sender.sendMessage("[" + ChatColor.AQUA + "MyPet" + ChatColor.RESET + "] " + Locales.getString("Message.Skilltree.NotSwitched", lang));
             }
-        } else {
+        }
+        else
+        {
             sender.sendMessage("[" + ChatColor.AQUA + "MyPet" + ChatColor.RESET + "] " + Util.formatText(Locales.getString("Message.Command.Skilltree.CantFindSkilltree", lang), args[2]));
         }
 
@@ -72,21 +84,27 @@ public class CommandOptionSkilltree implements CommandOptionTabCompleter {
     }
 
     @Override
-    public List<String> onTabComplete(CommandSender commandSender, String[] strings) {
-        if (strings.length == 2) {
+    public List<String> onTabComplete(CommandSender commandSender, String[] strings)
+    {
+        if (strings.length == 2)
+        {
             return null;
         }
-        if (strings.length == 3) {
+        if (strings.length == 3)
+        {
             Player player = Bukkit.getServer().getPlayer(strings[1]);
-            if (player == null || !player.isOnline()) {
+            if (player == null || !player.isOnline())
+            {
                 return CommandAdmin.emptyList;
             }
-            if (MyPetList.hasMyPet(player)) {
+            if (MyPetList.hasMyPet(player))
+            {
                 MyPet myPet = MyPetList.getMyPet(player);
                 SkillTreeMobType skillTreeMobType = SkillTreeMobType.getMobTypeByName(myPet.getPetType().getTypeName());
 
                 List<String> skilltreeList = new ArrayList<String>();
-                for (SkillTree skillTree : skillTreeMobType.getSkillTrees()) {
+                for (SkillTree skillTree : skillTreeMobType.getSkillTrees())
+                {
                     skilltreeList.add(skillTree.getName());
                 }
                 return skilltreeList;
