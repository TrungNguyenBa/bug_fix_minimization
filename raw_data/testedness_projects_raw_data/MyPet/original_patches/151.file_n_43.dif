diff --git a/src/main/java/de/Keyle/MyPet/entity/ai/AIGoalSelector.java b/src/main/java/de/Keyle/MyPet/entity/ai/AIGoalSelector.java
index eb5ec0e9..f221f276 100644
--- a/src/main/java/de/Keyle/MyPet/entity/ai/AIGoalSelector.java
+++ b/src/main/java/de/Keyle/MyPet/entity/ai/AIGoalSelector.java
@@ -22,31 +22,39 @@ package de.Keyle.MyPet.entity.ai;
 
 import java.util.*;
 
-public class AIGoalSelector {
+public class AIGoalSelector
+{
     private Map<String, AIGoal> AIGoalMap = new HashMap<String, AIGoal>();
     private List<AIGoal> AIGoalList = new LinkedList<AIGoal>();
     private List<AIGoal> activeAIGoalList = new LinkedList<AIGoal>();
 
-    public void addGoal(String name, AIGoal myPetAIgoal) {
-        if (AIGoalMap.containsKey(name)) {
+    public void addGoal(String name, AIGoal myPetAIgoal)
+    {
+        if (AIGoalMap.containsKey(name))
+        {
             return;
         }
         AIGoalMap.put(name, myPetAIgoal);
         AIGoalList.add(myPetAIgoal);
     }
 
-    public void addGoal(String name, int pos, AIGoal myPetAIgoal) {
-        if (AIGoalMap.containsKey(name)) {
+    public void addGoal(String name, int pos, AIGoal myPetAIgoal)
+    {
+        if (AIGoalMap.containsKey(name))
+        {
             return;
         }
         AIGoalMap.put(name, myPetAIgoal);
         AIGoalList.add(pos, myPetAIgoal);
     }
 
-    public void replaceGoal(String name, AIGoal myPetAIgoal) {
-        if (AIGoalMap.containsKey(name)) {
+    public void replaceGoal(String name, AIGoal myPetAIgoal)
+    {
+        if (AIGoalMap.containsKey(name))
+        {
             AIGoal oldGoal = AIGoalMap.get(name);
-            if (activeAIGoalList.contains(oldGoal)) {
+            if (activeAIGoalList.contains(oldGoal))
+            {
                 activeAIGoalList.remove(oldGoal);
                 oldGoal.finish();
             }
@@ -54,47 +62,60 @@ public class AIGoalSelector {
             AIGoalList.add(index, myPetAIgoal);
             AIGoalList.remove(oldGoal);
             AIGoalMap.put(name, myPetAIgoal);
-        } else {
+        }
+        else
+        {
             addGoal(name, myPetAIgoal);
         }
     }
 
-    public void removeGoal(String name) {
-        if (AIGoalMap.containsKey(name)) {
+    public void removeGoal(String name)
+    {
+        if (AIGoalMap.containsKey(name))
+        {
             AIGoal goal = AIGoalMap.get(name);
             AIGoalList.remove(goal);
             AIGoalMap.remove(name);
-            if (activeAIGoalList.contains(goal)) {
+            if (activeAIGoalList.contains(goal))
+            {
                 goal.finish();
             }
             activeAIGoalList.remove(goal);
         }
     }
 
-    public boolean hasGoal(String name) {
+    public boolean hasGoal(String name)
+    {
         return AIGoalMap.containsKey(name);
     }
 
-    public AIGoal getGoal(String name) {
+    public AIGoal getGoal(String name)
+    {
         return AIGoalMap.get(name);
     }
 
-    public void clearGoals() {
+    public void clearGoals()
+    {
         AIGoalList.clear();
         AIGoalMap.clear();
-        for (AIGoal goal : activeAIGoalList) {
+        for (AIGoal goal : activeAIGoalList)
+        {
             goal.finish();
         }
         activeAIGoalList.clear();
     }
 
-    public void tick() {
+    public void tick()
+    {
         // add goals
         ListIterator iterator = AIGoalList.listIterator();
-        while (iterator.hasNext()) {
+        while (iterator.hasNext())
+        {
             AIGoal goal = (AIGoal) iterator.next();
-            if (!activeAIGoalList.contains(goal)) {
-                if (goal.shouldStart()) {
+            if (!activeAIGoalList.contains(goal))
+            {
+                if (goal.shouldStart())
+                {
                     goal.start();
                     activeAIGoalList.add(goal);
                 }
@@ -103,9 +124,11 @@ public class AIGoalSelector {
 
         // remove goals
         iterator = activeAIGoalList.listIterator();
-        while (iterator.hasNext()) {
+        while (iterator.hasNext())
+        {
             AIGoal goal = (AIGoal) iterator.next();
-            if (goal.shouldFinish()) {
+            if (goal.shouldFinish())
+            {
                 goal.finish();
                 iterator.remove();
             }
@@ -113,7 +136,8 @@ public class AIGoalSelector {
 
         // tick goals
         iterator = activeAIGoalList.listIterator();
-        while (iterator.hasNext()) {
+        while (iterator.hasNext())
+        {
             AIGoal goal = (AIGoal) iterator.next();
             goal.tick();
         }
