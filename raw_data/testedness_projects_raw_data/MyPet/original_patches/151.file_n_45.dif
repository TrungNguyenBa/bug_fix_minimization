diff --git a/src/main/java/de/Keyle/MyPet/entity/ai/attack/RangedAttack.java b/src/main/java/de/Keyle/MyPet/entity/ai/attack/RangedAttack.java
index ecea1015..b9a9426b 100644
--- a/src/main/java/de/Keyle/MyPet/entity/ai/attack/RangedAttack.java
+++ b/src/main/java/de/Keyle/MyPet/entity/ai/attack/RangedAttack.java
@@ -32,7 +32,8 @@ import net.minecraft.server.v1_6_R2.EntityLiving;
 import net.minecraft.server.v1_6_R2.MathHelper;
 import net.minecraft.server.v1_6_R2.World;
 
-public class RangedAttack extends AIGoal {
+public class RangedAttack extends AIGoal
+{
     private MyPet myPet;
     private final EntityMyPet entityMyPet;
     private EntityLiving target;
@@ -42,7 +43,8 @@ public class RangedAttack extends AIGoal {
     private float rangeSquared;
     private Ranged rangedSkill;
 
-    public RangedAttack(EntityMyPet entityMyPet, float walkSpeedModifier, float range) {
+    public RangedAttack(EntityMyPet entityMyPet, float walkSpeedModifier, float range)
+    {
         this.entityMyPet = entityMyPet;
         this.myPet = entityMyPet.getMyPet();
         this.shootTimer = -1;
@@ -53,17 +55,21 @@ public class RangedAttack extends AIGoal {
     }
 
     @Override
-    public boolean shouldStart() {
-        if (myPet.getRangedDamage() <= 0) {
+    public boolean shouldStart()
+    {
+        if (myPet.getRangedDamage() <= 0)
+        {
             return false;
         }
         EntityLiving goalTarget = this.entityMyPet.getGoalTarget();
 
-        if (goalTarget == null || !goalTarget.isAlive() || !entityMyPet.canMove()) {
+        if (goalTarget == null || !goalTarget.isAlive() || !entityMyPet.canMove())
+        {
             return false;
         }
         double space = this.entityMyPet.e(goalTarget.locX, goalTarget.boundingBox.b, goalTarget.locZ);
-        if (myPet.getDamage() > 0 && space < 16) {
+        if (myPet.getDamage() > 0 && space < 16)
+        {
             return false;
         }
         this.target = goalTarget;
@@ -71,18 +77,22 @@ public class RangedAttack extends AIGoal {
     }
 
     @Override
-    public boolean shouldFinish() {
-        if (entityMyPet.getGoalTarget() == null || !target.isAlive() || myPet.getRangedDamage() <= 0 || !entityMyPet.canMove()) {
+    public boolean shouldFinish()
+    {
+        if (entityMyPet.getGoalTarget() == null || !target.isAlive() || myPet.getRangedDamage() <= 0 || !entityMyPet.canMove())
+        {
             return true;
         }
-        if (myPet.getDamage() > 0 && this.entityMyPet.e(target.locX, target.boundingBox.b, target.locZ) < 16) {
+        if (myPet.getDamage() > 0 && this.entityMyPet.e(target.locX, target.boundingBox.b, target.locZ) < 16)
+        {
             return true;
         }
         return false;
     }
 
     @Override
-    public void finish() {
+    public void finish()
+    {
         this.target = null;
         this.lastSeenTimer = 0;
         this.shootTimer = -1;
@@ -91,52 +101,67 @@ public class RangedAttack extends AIGoal {
     }
 
     @Override
-    public void tick() {
+    public void tick()
+    {
         double distanceToTarget = this.entityMyPet.e(this.target.locX, this.target.boundingBox.b, this.target.locZ);
         boolean canSee = this.entityMyPet.getEntitySenses().canSee(this.target);
 
-        if (canSee) {
+        if (canSee)
+        {
             this.lastSeenTimer++;
-        } else {
+        }
+        else
+        {
             this.lastSeenTimer = 0;
         }
 
-        if ((distanceToTarget <= this.rangeSquared) && (this.lastSeenTimer >= 20)) {
+        if ((distanceToTarget <= this.rangeSquared) && (this.lastSeenTimer >= 20))
+        {
             this.entityMyPet.petNavigation.getParameters().removeSpeedModifier("RangedAttack");
             this.entityMyPet.petNavigation.stop();
-        } else {
+        }
+        else
+        {
             this.entityMyPet.petNavigation.getParameters().addSpeedModifier("RangedAttack", walkSpeedModifier);
             this.entityMyPet.petNavigation.navigateTo(this.target);
         }
 
         this.entityMyPet.getControllerLook().a(this.target, 30.0F, 30.0F);
 
-        if (--this.shootTimer <= 0) {
-            if (distanceToTarget < this.rangeSquared && canSee) {
+        if (--this.shootTimer <= 0)
+        {
+            if (distanceToTarget < this.rangeSquared && canSee)
+            {
                 shootProjectile(this.target, (float) myPet.getRangedDamage(), getProjectile());
                 this.shootTimer = this.rangedSkill.getRateOfFire();
             }
         }
     }
 
-    private Projectiles getProjectile() {
+    private Projectiles getProjectile()
+    {
         Skills skills = entityMyPet.getMyPet().getSkills();
-        if (skills.isSkillActive(Ranged.class)) {
+        if (skills.isSkillActive(Ranged.class))
+        {
             return skills.getSkill(Ranged.class).getProjectile();
         }
         return Projectiles.Arrow;
     }
 
-    public void shootProjectile(EntityLiving target, float damage, Projectiles projectile) {
+    public void shootProjectile(EntityLiving target, float damage, Projectiles projectile)
+    {
         World world = target.world;
 
-        if (projectile == Projectiles.Arrow) {
+        if (projectile == Projectiles.Arrow)
+        {
             EntityArrow arrow = new MyPetArrow(world, entityMyPet, target, 1.6F, 1);
             arrow.b(damage);
             arrow.a(false);
             entityMyPet.makeSound("random.bow", 1.0F, 1.0F / (entityMyPet.aC().nextFloat() * 0.4F + 0.8F));
             world.addEntity(arrow);
-        } else if (projectile == Projectiles.Snowball) {
+        }
+        else if (projectile == Projectiles.Snowball)
+        {
             MyPetSnowball snowball = new MyPetSnowball(world, entityMyPet);
             double distanceX = target.locX - entityMyPet.locX;
             double distanceY = target.locY + target.getHeadHeight() - 1.100000023841858D - snowball.locY;
@@ -146,7 +171,9 @@ public class RangedAttack extends AIGoal {
             snowball.shoot(distanceX, distanceY + distance20percent, distanceZ, 1.6F, 1);
             entityMyPet.makeSound("random.bow", 1.0F, 1.0F / (entityMyPet.aC().nextFloat() * 0.4F + 0.8F));
             world.addEntity(snowball);
-        } else if (projectile == Projectiles.LargeFireball) {
+        }
+        else if (projectile == Projectiles.LargeFireball)
+        {
             double distanceX = this.target.locX - entityMyPet.locX;
             double distanceY = this.target.boundingBox.b + this.target.length / 2.0F - (entityMyPet.locY + entityMyPet.length / 2.0F);
             double distanceZ = this.target.locZ - entityMyPet.locZ;
@@ -155,7 +182,9 @@ public class RangedAttack extends AIGoal {
             largeFireball.setDamage(damage);
             world.addEntity(largeFireball);
             world.makeSound(entityMyPet.locX + 0.5D, entityMyPet.locY + 0.5D, entityMyPet.locZ + 0.5D, "mob.ghast.fireball", 1.0F + entityMyPet.aC().nextFloat(), entityMyPet.aC().nextFloat() * 0.7F + 0.3F);
-        } else if (projectile == Projectiles.SmallFireball) {
+        }
+        else if (projectile == Projectiles.SmallFireball)
+        {
             double distanceX = this.target.locX - entityMyPet.locX;
             double distanceY = this.target.boundingBox.b + this.target.length / 2.5F - (entityMyPet.locY + entityMyPet.length / 2.5F);
             double distanceZ = this.target.locZ - entityMyPet.locZ;
@@ -164,7 +193,9 @@ public class RangedAttack extends AIGoal {
             smallFireball.setDamage(damage);
             world.addEntity(smallFireball);
             world.makeSound(entityMyPet.locX + 0.5D, entityMyPet.locY + 0.5D, entityMyPet.locZ + 0.5D, "mob.ghast.fireball", 1.0F + entityMyPet.aC().nextFloat(), entityMyPet.aC().nextFloat() * 0.7F + 0.3F);
-        } else if (projectile == Projectiles.WitherSkull) {
+        }
+        else if (projectile == Projectiles.WitherSkull)
+        {
             double distanceX = this.target.locX - entityMyPet.locX;
             double distanceY = this.target.boundingBox.b + this.target.length / 2.5F - (entityMyPet.locY + entityMyPet.length / 2.5F);
             double distanceZ = this.target.locZ - entityMyPet.locZ;
