diff --git a/src/main/java/de/Keyle/MyPet/entity/types/InactiveMyPet.java b/src/main/java/de/Keyle/MyPet/entity/types/InactiveMyPet.java
index 258d66ba..9db96707 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/InactiveMyPet.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/InactiveMyPet.java
@@ -31,7 +31,8 @@ import org.spout.nbt.*;
 import java.util.Collection;
 import java.util.UUID;
 
-public class InactiveMyPet implements IMyPet, NBTStorage {
+public class InactiveMyPet implements IMyPet, NBTStorage
+{
     private final MyPetPlayer petOwner;
     private UUID uuid = null;
     private String petName = "";
@@ -46,172 +47,220 @@ public class InactiveMyPet implements IMyPet, NBTStorage {
     private CompoundTag NBTSkills;
     private CompoundTag NBTextendetInfo;
 
-    public InactiveMyPet(MyPetPlayer petOwner) {
+    public InactiveMyPet(MyPetPlayer petOwner)
+    {
         this.petOwner = petOwner;
     }
 
-    public double getExp() {
+    public double getExp()
+    {
         return exp;
     }
 
-    public void setExp(double Exp) {
+    public void setExp(double Exp)
+    {
         this.exp = Exp;
     }
 
-    public double getHealth() {
+    public double getHealth()
+    {
         return health;
     }
 
-    public void setHealth(double health) {
+    public void setHealth(double health)
+    {
         this.health = health;
     }
 
-    public int getHungerValue() {
+    public int getHungerValue()
+    {
         return hunger;
     }
 
-    public void setHungerValue(int value) {
-        if (value > 100) {
+    public void setHungerValue(int value)
+    {
+        if (value > 100)
+        {
             hunger = 100;
-        } else if (value < 1) {
+        }
+        else if (value < 1)
+        {
             hunger = 1;
-        } else {
+        }
+        else
+        {
             hunger = value;
         }
     }
 
-    public CompoundTag getInfo() {
-        if (NBTextendetInfo == null) {
+    public CompoundTag getInfo()
+    {
+        if (NBTextendetInfo == null)
+        {
             NBTextendetInfo = new CompoundTag("Info", new CompoundMap());
         }
         return NBTextendetInfo;
     }
 
-    public void setInfo(CompoundTag info) {
+    public void setInfo(CompoundTag info)
+    {
         NBTextendetInfo = info;
     }
 
-    public MyPetPlayer getOwner() {
+    public MyPetPlayer getOwner()
+    {
         return petOwner;
     }
 
-    public String getPetName() {
+    public String getPetName()
+    {
         return petName;
     }
 
-    public void setPetName(String petName) {
+    public void setPetName(String petName)
+    {
         this.petName = petName;
     }
 
-    public MyPetType getPetType() {
+    public MyPetType getPetType()
+    {
         return petType;
     }
 
-    public void setPetType(MyPetType petType) {
+    public void setPetType(MyPetType petType)
+    {
         this.petType = petType;
-        if (respawnTime <= 0 && health == -1) {
+        if (respawnTime <= 0 && health == -1)
+        {
             this.health = MyPet.getStartHP(petType.getMyPetClass());
         }
 
     }
 
-    public int getRespawnTime() {
+    public int getRespawnTime()
+    {
         return respawnTime;
     }
 
-    public void setRespawnTime(int respawnTime) {
+    public void setRespawnTime(int respawnTime)
+    {
         this.respawnTime = respawnTime;
     }
 
-    public SkillTree getSkillTree() {
+    public SkillTree getSkillTree()
+    {
         return skillTree;
     }
 
-    public void setSkillTree(SkillTree skillTree) {
+    public void setSkillTree(SkillTree skillTree)
+    {
         this.skillTree = skillTree;
     }
 
-    public CompoundTag getSkills() {
-        if (NBTSkills == null) {
+    public CompoundTag getSkills()
+    {
+        if (NBTSkills == null)
+        {
             NBTSkills = new CompoundTag("Skills", new CompoundMap());
         }
         return NBTSkills;
     }
 
-    public void setSkills(CompoundTag skills) {
+    public void setSkills(CompoundTag skills)
+    {
         NBTSkills = skills;
     }
 
-    public UUID getUUID() {
-        if (this.uuid == null) {
+    public UUID getUUID()
+    {
+        if (this.uuid == null)
+        {
             this.uuid = UUID.randomUUID();
         }
 
         return this.uuid;
     }
 
-    public void setUUID(UUID uuid) {
+    public void setUUID(UUID uuid)
+    {
         this.uuid = uuid;
     }
 
     @Override
-    public String getWorldGroup() {
+    public String getWorldGroup()
+    {
         return worldGroup;
     }
 
     @Override
-    public long getLastUsed() {
+    public long getLastUsed()
+    {
         return lastUsed;
     }
 
-    public void setWorldGroup(String worldGroup) {
-        if (worldGroup != null) {
+    public void setWorldGroup(String worldGroup)
+    {
+        if (worldGroup != null)
+        {
             this.worldGroup = worldGroup;
         }
     }
 
     @Override
-    public void load(CompoundTag myPetNBT) {
-        if (myPetNBT.getValue().containsKey("UUID")) {
+    public void load(CompoundTag myPetNBT)
+    {
+        if (myPetNBT.getValue().containsKey("UUID"))
+        {
             uuid = UUID.fromString(((StringTag) myPetNBT.getValue().get("UUID")).getValue());
         }
 
         exp = ((DoubleTag) myPetNBT.getValue().get("Exp")).getValue();
-        if (myPetNBT.getValue().get("Health").getType() == TagType.TAG_INT) {
+        if (myPetNBT.getValue().get("Health").getType() == TagType.TAG_INT)
+        {
             health = ((IntTag) myPetNBT.getValue().get("Health")).getValue();
-        } else {
+        }
+        else
+        {
             health = ((DoubleTag) myPetNBT.getValue().get("Health")).getValue();
         }
 
         respawnTime = ((IntTag) myPetNBT.getValue().get("Respawntime")).getValue();
         petName = ((StringTag) myPetNBT.getValue().get("Name")).getValue();
 
-        if (myPetNBT.getValue().containsKey("Type")) {
+        if (myPetNBT.getValue().containsKey("Type"))
+        {
             petType = MyPetType.valueOf(((StringTag) myPetNBT.getValue().get("Type")).getValue());
         }
 
-        if (myPetNBT.getValue().containsKey("LastUsed")) {
+        if (myPetNBT.getValue().containsKey("LastUsed"))
+        {
             lastUsed = ((LongTag) myPetNBT.getValue().get("LastUsed")).getValue();
         }
 
-        if (myPetNBT.getValue().containsKey("Skilltree")) {
+        if (myPetNBT.getValue().containsKey("Skilltree"))
+        {
             String skillTreeName = ((StringTag) myPetNBT.getValue().get("Skilltree")).getValue();
-            if (skillTreeName != null) {
-                if (SkillTreeMobType.getMobTypeByPetType(petType) != null) {
+            if (skillTreeName != null)
+            {
+                if (SkillTreeMobType.getMobTypeByPetType(petType) != null)
+                {
                     SkillTreeMobType mobType = SkillTreeMobType.getMobTypeByPetType(petType);
 
-                    if (mobType.hasSkillTree(skillTreeName)) {
+                    if (mobType.hasSkillTree(skillTreeName))
+                    {
                         this.skillTree = mobType.getSkillTree(skillTreeName);
                     }
                 }
             }
         }
 
-        if (myPetNBT.getValue().containsKey("Hunger")) {
+        if (myPetNBT.getValue().containsKey("Hunger"))
+        {
             hunger = ((IntTag) myPetNBT.getValue().get("Hunger")).getValue();
         }
 
-        if (myPetNBT.getValue().containsKey("WorldGroup")) {
+        if (myPetNBT.getValue().containsKey("WorldGroup"))
+        {
             worldGroup = ((StringTag) myPetNBT.getValue().get("WorldGroup")).getValue();
         }
 
@@ -221,7 +270,8 @@ public class InactiveMyPet implements IMyPet, NBTStorage {
     }
 
     @Override
-    public CompoundTag save() {
+    public CompoundTag save()
+    {
         CompoundTag petNBT = new CompoundTag(null, new CompoundMap());
 
         petNBT.getValue().put("UUID", new StringTag("UUID", getUUID().toString()));
@@ -235,7 +285,8 @@ public class InactiveMyPet implements IMyPet, NBTStorage {
         petNBT.getValue().put("Exp", new DoubleTag("Exp", this.exp));
         petNBT.getValue().put("LastUsed", new LongTag("LastUsed", this.lastUsed));
         petNBT.getValue().put("Info", getInfo());
-        if (this.skillTree != null) {
+        if (this.skillTree != null)
+        {
             petNBT.getValue().put("Skilltree", new StringTag("Skilltree", skillTree.getName()));
         }
         petNBT.getValue().put("Skills", getSkills());
@@ -243,15 +294,20 @@ public class InactiveMyPet implements IMyPet, NBTStorage {
         return petNBT;
     }
 
-    public void setSkills(Collection<ISkillInstance> skills) {
-        if (NBTSkills == null) {
+    public void setSkills(Collection<ISkillInstance> skills)
+    {
+        if (NBTSkills == null)
+        {
             NBTSkills = new CompoundTag("Skills", new CompoundMap());
         }
-        for (ISkillInstance skill : skills) {
-            if (skill instanceof ISkillStorage) {
+        for (ISkillInstance skill : skills)
+        {
+            if (skill instanceof ISkillStorage)
+            {
                 ISkillStorage storageSkill = (ISkillStorage) skill;
                 CompoundTag s = storageSkill.save();
-                if (s != null) {
+                if (s != null)
+                {
                     this.NBTSkills.getValue().put(skill.getName(), s);
                 }
             }
@@ -259,7 +315,8 @@ public class InactiveMyPet implements IMyPet, NBTStorage {
     }
 
     @Override
-    public String toString() {
+    public String toString()
+    {
         return "InactiveMyPet{type=" + getPetType().getTypeName() + ", owner=" + getOwner().getName() + ", name=" + petName + ", exp=" + getExp() + ", health=" + getHealth() + ", worldgroup=" + worldGroup + "}";
     }
 }
\ No newline at end of file
