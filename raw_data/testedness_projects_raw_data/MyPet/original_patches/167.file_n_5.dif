diff --git a/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/skills/Ranged.java b/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/skills/Ranged.java
index d15bf9eb..f5e58b2a 100644
--- a/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/skills/Ranged.java
+++ b/src/main/java/de/Keyle/MyPet/gui/skilltreecreator/skills/Ranged.java
@@ -20,15 +20,12 @@
 
 package de.Keyle.MyPet.gui.skilltreecreator.skills;
 
-import de.Keyle.MyPet.util.Util;
 import org.spout.nbt.CompoundTag;
 import org.spout.nbt.DoubleTag;
 import org.spout.nbt.IntTag;
 import org.spout.nbt.StringTag;
 
 import javax.swing.*;
-import java.awt.event.KeyEvent;
-import java.awt.event.KeyListener;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
@@ -40,10 +37,6 @@ public class Ranged implements SkillPropertiesPanel
     private JRadioButton addDamageRadioButton;
     private JRadioButton setDamageRadioButton;
     private JComboBox projectileComboBox;
-    private JLabel arrowsPerSecondLabel;
-    private JRadioButton setRateOfFireRadioButton;
-    private JRadioButton addRateOfFireRadioButton;
-    private JTextField rateOfFireInput;
 
     private CompoundTag compoundTag;
 
@@ -51,29 +44,6 @@ public class Ranged implements SkillPropertiesPanel
     {
         this.compoundTag = compoundTag;
         load(compoundTag);
-
-        rateOfFireInput.addKeyListener(new KeyListener()
-        {
-            public void keyTyped(KeyEvent arg0)
-            {
-            }
-
-            public void keyReleased(KeyEvent arg0)
-            {
-                if (Util.isInt(rateOfFireInput.getText()))
-                {
-                    arrowsPerSecondLabel.setText(String.format("%1.2f", 1. / ((Integer.parseInt(rateOfFireInput.getText()) * 50.) / 1000.)) + " Arrows/Second");
-                }
-                else
-                {
-                    arrowsPerSecondLabel.setText("- Arrows/Second");
-                }
-            }
-
-            public void keyPressed(KeyEvent arg0)
-            {
-            }
-        });
     }
 
     @Override
@@ -85,14 +55,6 @@ public class Ranged implements SkillPropertiesPanel
     @Override
     public void verifyInput()
     {
-        if (!rateOfFireInput.getText().replaceAll("[^0-9]*", "").equals(rateOfFireInput.getText()))
-        {
-            rateOfFireInput.setText(rateOfFireInput.getText().replaceAll("[^0-9]*", ""));
-        }
-        if (!rateOfFireInput.getText().matches("[1-9][0-9]*"))
-        {
-            rateOfFireInput.setText("1");
-        }
         damageInput.setText(damageInput.getText().replaceAll("[^0-9\\.]*", ""));
         if (damageInput.getText().length() > 0)
         {
@@ -128,9 +90,6 @@ public class Ranged implements SkillPropertiesPanel
 
         compoundTag.getValue().put("addset_damage", new StringTag("addset_damage", addDamageRadioButton.isSelected() ? "add" : "set"));
         compoundTag.getValue().put("damage_double", new DoubleTag("damage_double", Double.parseDouble(damageInput.getText())));
-
-        compoundTag.getValue().put("addset_rateoffire", new StringTag("addset_rateoffire", addRateOfFireRadioButton.isSelected() ? "add" : "set"));
-        compoundTag.getValue().put("rateoffire", new IntTag("rateoffire", Integer.parseInt(rateOfFireInput.getText())));
         return compoundTag;
     }
 
@@ -168,18 +127,5 @@ public class Ranged implements SkillPropertiesPanel
                 }
             }
         }
-
-        if (!compoundTag.getValue().containsKey("addset_rateoffire") || ((StringTag) compoundTag.getValue().get("addset_rateoffire")).getValue().equals("add"))
-        {
-            addRateOfFireRadioButton.setSelected(true);
-        }
-        else
-        {
-            setRateOfFireRadioButton.setSelected(true);
-        }
-        if (compoundTag.getValue().containsKey("rateoffire"))
-        {
-            rateOfFireInput.setText("" + ((IntTag) compoundTag.getValue().get("rateoffire")).getValue());
-        }
     }
 }
\ No newline at end of file
