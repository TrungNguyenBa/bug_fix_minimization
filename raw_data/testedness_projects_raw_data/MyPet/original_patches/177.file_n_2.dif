diff --git a/src/main/java/de/Keyle/MyPet/skill/skills/SkillsInfo.java b/src/main/java/de/Keyle/MyPet/skill/skills/SkillsInfo.java
index a42ad244..845f3fdc 100644
--- a/src/main/java/de/Keyle/MyPet/skill/skills/SkillsInfo.java
+++ b/src/main/java/de/Keyle/MyPet/skill/skills/SkillsInfo.java
@@ -20,20 +20,20 @@
 
 package de.Keyle.MyPet.skill.skills;
 
+import com.google.common.collect.BiMap;
+import com.google.common.collect.HashBiMap;
 import de.Keyle.MyPet.skill.skills.info.ISkillInfo;
 import de.Keyle.MyPet.skill.skilltree.SkillTreeSkill;
 import de.Keyle.MyPet.util.logger.MyPetLogger;
 import org.bukkit.ChatColor;
 
 import java.lang.reflect.Constructor;
-import java.util.HashMap;
-import java.util.Map;
 import java.util.Set;
 
 public class SkillsInfo
 {
-    private static Map<Class<? extends SkillTreeSkill>, String> registeredSkillsNames = new HashMap<Class<? extends SkillTreeSkill>, String>();
-    private static Map<String, Class<? extends SkillTreeSkill>> registeredNamesSkills = new HashMap<String, Class<? extends SkillTreeSkill>>();
+    private static BiMap<Class<? extends SkillTreeSkill>, String> registeredSkillsNames = HashBiMap.create();
+    private static BiMap<String, Class<? extends SkillTreeSkill>> registeredNamesSkills = registeredSkillsNames.inverse();
 
     public static void registerSkill(Class<? extends SkillTreeSkill> clazz)
     {
@@ -42,6 +42,8 @@ public class SkillsInfo
             MyPetLogger.write(ChatColor.RED + clazz.getName() + " doesn't implements [ISkillInfo]!");
             return;
         }
+        if (!registeredSkillsNames.containsKey(clazz))
+        {
             try
             {
                 //MyPetLogger.write("Skill Annotations: " + Arrays.toString(clazz.getAnnotations()));
@@ -49,10 +51,9 @@ public class SkillsInfo
                 if (sn != null)
                 {
                     String skillName = sn.value();
-                if (!registeredNamesSkills.containsKey(skillName) && !registeredSkillsNames.containsKey(clazz))
+                    if (!registeredNamesSkills.containsKey(skillName))
                     {
                         registeredSkillsNames.put(clazz, skillName);
-                    registeredNamesSkills.put(skillName, clazz);
                         //DebugLogger.info("registered skill: " + clazz.getName());
                     }
                     else
@@ -70,6 +71,7 @@ public class SkillsInfo
                 MyPetLogger.write(ChatColor.RED + clazz.getName() + " is not a valid skill!");
             }
         }
+    }
 
     @SuppressWarnings("unchecked")
     public static Set<Class<? extends SkillTreeSkill>> getRegisteredSkillsInfo()
