diff --git a/src/main/java/de/Keyle/MyPet/listeners/LevelUpListener.java b/src/main/java/de/Keyle/MyPet/listeners/LevelUpListener.java
deleted file mode 100644
index d5c05184..00000000
--- a/src/main/java/de/Keyle/MyPet/listeners/LevelUpListener.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * This file is part of MyPet
- *
- * Copyright (C) 2011-2013 Keyle
- * MyPet is licensed under the GNU Lesser General Public License.
- *
- * MyPet is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * MyPet is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-package de.Keyle.MyPet.listeners;
-
-import de.Keyle.MyPet.api.event.MyPetLevelUpEvent;
-import de.Keyle.MyPet.entity.types.MyPet;
-import de.Keyle.MyPet.entity.types.MyPet.PetState;
-import de.Keyle.MyPet.skill.Experience;
-import de.Keyle.MyPet.skill.SkillTree;
-import de.Keyle.MyPet.skill.SkillTreeLevel;
-import de.Keyle.MyPet.skill.skills.info.ISkillInfo;
-import de.Keyle.MyPet.util.Colorizer;
-import de.Keyle.MyPet.util.Configuration;
-import de.Keyle.MyPet.util.Util;
-import de.Keyle.MyPet.util.locale.Locales;
-import org.bukkit.Color;
-import org.bukkit.FireworkEffect;
-import org.bukkit.FireworkEffect.Type;
-import org.bukkit.Location;
-import org.bukkit.entity.EntityType;
-import org.bukkit.entity.Firework;
-import org.bukkit.event.EventHandler;
-import org.bukkit.event.Listener;
-import org.bukkit.inventory.meta.FireworkMeta;
-
-import java.util.List;
-
-public class LevelUpListener implements Listener
-{
-    @EventHandler
-    public void onLevelUp(MyPetLevelUpEvent event)
-    {
-        MyPet myPet = event.getPet();
-        if (!event.isQuiet())
-        {
-            myPet.sendMessageToOwner(Util.formatText(Locales.getString("Message.LvlUp", event.getOwner().getLanguage()), myPet.getPetName(), event.getLevel()));
-
-            if (Experience.FIREWORK_ON_LEVELUP)
-            {
-                Location location = myPet.getLocation();
-                location.setY(location.getY() - 1.5);
-                location.setPitch(-90);
-                Firework fw = (Firework) location.getWorld().spawnEntity(location, EntityType.FIREWORK);
-                FireworkEffect fwe = FireworkEffect.builder().with(Type.STAR).withColor(Color.fromRGB(Configuration.LEVELUP_FIREWORK_COLOR)).withTrail().withFlicker().build();
-                FireworkMeta fwm = fw.getFireworkMeta();
-                fwm.addEffect(fwe);
-                fwm.addEffect(fwe);
-                fwm.addEffect(fwe);
-                fwm.setPower(0);
-                fw.setFireworkMeta(fwm);
-            }
-        }
-        int lvl = event.getLevel();
-        SkillTree skillTree = myPet.getSkillTree();
-        if (skillTree != null && skillTree.hasLevel(lvl))
-        {
-            SkillTreeLevel level = skillTree.getLevel(lvl);
-            if (!event.isQuiet())
-            {
-                if (level.hasLevelupMessage())
-                {
-                    myPet.sendMessageToOwner(Colorizer.setColors(level.getLevelupMessage()));
-                }
-            }
-
-            List<ISkillInfo> skillList = level.getSkills();
-            for (ISkillInfo skill : skillList)
-            {
-                myPet.getSkills().getSkill(skill.getName()).upgrade(skill, event.isQuiet());
-            }
-        }
-        if (myPet.getStatus() == PetState.Here)
-        {
-            myPet.setHealth(myPet.getMaxHealth());
-            myPet.setHungerValue(100);
-        }
-    }
-}
\ No newline at end of file
