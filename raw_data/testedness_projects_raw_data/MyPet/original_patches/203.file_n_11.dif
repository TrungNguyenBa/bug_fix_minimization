diff --git a/src/main/java/de/Keyle/MyPet/entity/types/MyPetType.java b/src/main/java/de/Keyle/MyPet/entity/types/MyPetType.java
index 941275f9..fa812d1a 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/MyPetType.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/MyPetType.java
@@ -130,19 +130,16 @@ public enum MyPetType
         this.myPetClass = myPetClass;
     }
 
-    public Class<? extends EntityMyPet> getEntityClass()
+    public static MyPetType getMyPetTypeByEntityType(EntityType type)
     {
-        return entityClass;
-    }
-
-    public EntityType getEntityType()
+        for (MyPetType myPetType : MyPetType.values())
         {
-        return bukkitType;
-    }
-
-    public Class<? extends MyPet> getMyPetClass()
+            if (myPetType.bukkitType == type)
             {
-        return myPetClass;
+                return myPetType;
+            }
+        }
+        return null;
     }
 
     public static MyPetType getMyPetTypeByEntityClass(Class<? extends EntityCreature> entityClass)
@@ -157,11 +154,11 @@ public enum MyPetType
         return null;
     }
 
-    public static MyPetType getMyPetTypeByEntityType(EntityType type)
+    public static MyPetType getMyPetTypeByName(String name)
     {
         for (MyPetType myPetType : MyPetType.values())
         {
-            if (myPetType.bukkitType == type)
+            if (myPetType.name.equalsIgnoreCase(name))
             {
                 return myPetType;
             }
@@ -169,16 +166,36 @@ public enum MyPetType
         return null;
     }
 
-    public static MyPetType getMyPetTypeByName(String name)
+    public static boolean isLeashableEntityType(EntityType type)
     {
         for (MyPetType myPetType : MyPetType.values())
         {
-            if (myPetType.name.equalsIgnoreCase(name))
+            if (myPetType.bukkitType == type)
             {
-                return myPetType;
+                return true;
             }
         }
-        return null;
+        return false;
+    }
+
+    public EntityType getEntityType()
+    {
+        return bukkitType;
+    }
+
+    public Class<? extends EntityMyPet> getEntityClass()
+    {
+        return entityClass;
+    }
+
+    public Class<? extends MyPet> getMyPetClass()
+    {
+        return myPetClass;
+    }
+
+    public String getTypeName()
+    {
+        return name;
     }
 
     public EntityMyPet getNewEntityInstance(World world, MyPet myPet)
@@ -224,21 +241,4 @@ public enum MyPetType
         }
         return pet;
     }
-
-    public String getTypeName()
-    {
-        return name;
-    }
-
-    public static boolean isLeashableEntityType(EntityType type)
-    {
-        for (MyPetType myPetType : MyPetType.values())
-        {
-            if (myPetType.bukkitType == type)
-            {
-                return true;
-            }
-        }
-        return false;
-    }
 }
\ No newline at end of file
