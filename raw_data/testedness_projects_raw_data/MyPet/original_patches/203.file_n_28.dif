diff --git a/src/main/java/de/Keyle/MyPet/entity/types/horse/MyHorse.java b/src/main/java/de/Keyle/MyPet/entity/types/horse/MyHorse.java
index 98489f9f..3ee159a2 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/horse/MyHorse.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/horse/MyHorse.java
@@ -36,10 +36,10 @@ import static org.bukkit.Material.*;
 @MyPetInfo(food = {SUGAR, WHEAT, APPLE}, leashFlags = {Tamed})
 public class MyHorse extends MyPet implements IMyPetBaby
 {
-    public int age = 0;
     protected byte horseType = 0;
     protected int variant = 0;
     protected int armor = 0;
+    public int age = 0;
     protected boolean chest = false;
     protected boolean saddle = false;
 
@@ -48,79 +48,6 @@ public class MyHorse extends MyPet implements IMyPetBaby
         super(petOwner);
     }
 
-    public int getAge()
-    {
-        return age;
-    }
-
-    public void setAge(int value)
-    {
-        value = Math.min(0, (Math.max(-24000, value)));
-        value = value - (value % 1000);
-        if (status == PetState.Here)
-        {
-            ((EntityMyHorse) getCraftPet().getHandle()).setAge(value);
-        }
-        this.age = value;
-    }
-
-    public int getArmor()
-    {
-        return armor;
-    }
-
-    public void setArmor(int value)
-    {
-        value = Math.min(Math.max(0, value), 3);
-        if (status == PetState.Here)
-        {
-            ((EntityMyHorse) getCraftPet().getHandle()).setArmor(value);
-        }
-        this.armor = value;
-    }
-
-    @Override
-    public CompoundTag getExtendedInfo()
-    {
-        CompoundTag info = super.getExtendedInfo();
-        info.getValue().put("Type", new ByteTag("Type", getHorseType()));
-        info.getValue().put("Variant", new IntTag("Variant", getVariant()));
-        info.getValue().put("Armor", new IntTag("Armor", getArmor()));
-        info.getValue().put("Age", new IntTag("Age", getAge()));
-        info.getValue().put("Chest", new ByteTag("Chest", hasChest()));
-        info.getValue().put("Saddle", new ByteTag("Saddle", hasSaddle()));
-        return info;
-    }
-
-    @Override
-    public void setExtendedInfo(CompoundTag info)
-    {
-        if (info.getValue().containsKey("Type"))
-        {
-            setHorseType(((ByteTag) info.getValue().get("Type")).getValue());
-        }
-        if (info.getValue().containsKey("Variant"))
-        {
-            setVariant(((IntTag) info.getValue().get("Variant")).getValue());
-        }
-        if (info.getValue().containsKey("Armor"))
-        {
-            setArmor(((IntTag) info.getValue().get("Armor")).getValue());
-        }
-        if (info.getValue().containsKey("Age"))
-        {
-            setAge(((IntTag) info.getValue().get("Age")).getValue());
-        }
-        if (info.getValue().containsKey("Chest"))
-        {
-            setChest(((ByteTag) info.getValue().get("Chest")).getBooleanValue());
-        }
-        if (info.getValue().containsKey("Saddle"))
-        {
-            setSaddle(((ByteTag) info.getValue().get("Saddle")).getBooleanValue());
-        }
-    }
-
     public byte getHorseType()
     {
         return horseType;
@@ -141,12 +68,6 @@ public class MyHorse extends MyPet implements IMyPetBaby
         }
     }
 
-    @Override
-    public MyPetType getPetType()
-    {
-        return MyPetType.Horse;
-    }
-
     public int getVariant()
     {
         return variant;
@@ -188,9 +109,28 @@ public class MyHorse extends MyPet implements IMyPetBaby
         }
     }
 
-    public boolean hasChest()
+    public int getArmor()
     {
-        return chest;
+        return armor;
+    }
+
+    public void setArmor(int value)
+    {
+        value = Math.min(Math.max(0, value), 3);
+        if (status == PetState.Here)
+        {
+            ((EntityMyHorse) getCraftPet().getHandle()).setArmor(value);
+        }
+        this.armor = value;
+    }
+
+    public void setSaddle(boolean flag)
+    {
+        if (status == PetState.Here)
+        {
+            ((EntityMyHorse) getCraftPet().getHandle()).setSaddle(flag);
+        }
+        this.saddle = flag;
     }
 
     public boolean hasSaddle()
@@ -198,10 +138,23 @@ public class MyHorse extends MyPet implements IMyPetBaby
         return saddle;
     }
 
-    @Override
-    public boolean isBaby()
+    public void setChest(boolean flag)
     {
-        return age < 0;
+        if (status == PetState.Here)
+        {
+            ((EntityMyHorse) getCraftPet().getHandle()).setChest(flag);
+        }
+        this.chest = flag;
+    }
+
+    public boolean hasChest()
+    {
+        return chest;
+    }
+
+    public int getAge()
+    {
+        return age;
     }
 
     public void setBaby(boolean flag)
@@ -220,22 +173,69 @@ public class MyHorse extends MyPet implements IMyPetBaby
         }
     }
 
-    public void setChest(boolean flag)
+    @Override
+    public boolean isBaby()
     {
+        return age < 0;
+    }
+
+    public void setAge(int value)
+    {
+        value = Math.min(0, (Math.max(-24000, value)));
+        value = value - (value % 1000);
         if (status == PetState.Here)
         {
-            ((EntityMyHorse) getCraftPet().getHandle()).setChest(flag);
+            ((EntityMyHorse) getCraftPet().getHandle()).setAge(value);
         }
-        this.chest = flag;
+        this.age = value;
     }
 
-    public void setSaddle(boolean flag)
+    @Override
+    public CompoundTag getExtendedInfo()
     {
-        if (status == PetState.Here)
+        CompoundTag info = super.getExtendedInfo();
+        info.getValue().put("Type", new ByteTag("Type", getHorseType()));
+        info.getValue().put("Variant", new IntTag("Variant", getVariant()));
+        info.getValue().put("Armor", new IntTag("Armor", getArmor()));
+        info.getValue().put("Age", new IntTag("Age", getAge()));
+        info.getValue().put("Chest", new ByteTag("Chest", hasChest()));
+        info.getValue().put("Saddle", new ByteTag("Saddle", hasSaddle()));
+        return info;
+    }
+
+    @Override
+    public void setExtendedInfo(CompoundTag info)
+    {
+        if (info.getValue().containsKey("Type"))
         {
-            ((EntityMyHorse) getCraftPet().getHandle()).setSaddle(flag);
+            setHorseType(((ByteTag) info.getValue().get("Type")).getValue());
         }
-        this.saddle = flag;
+        if (info.getValue().containsKey("Variant"))
+        {
+            setVariant(((IntTag) info.getValue().get("Variant")).getValue());
+        }
+        if (info.getValue().containsKey("Armor"))
+        {
+            setArmor(((IntTag) info.getValue().get("Armor")).getValue());
+        }
+        if (info.getValue().containsKey("Age"))
+        {
+            setAge(((IntTag) info.getValue().get("Age")).getValue());
+        }
+        if (info.getValue().containsKey("Chest"))
+        {
+            setChest(((ByteTag) info.getValue().get("Chest")).getBooleanValue());
+        }
+        if (info.getValue().containsKey("Saddle"))
+        {
+            setSaddle(((ByteTag) info.getValue().get("Saddle")).getBooleanValue());
+        }
+    }
+
+    @Override
+    public MyPetType getPetType()
+    {
+        return MyPetType.Horse;
     }
 
     @Override
