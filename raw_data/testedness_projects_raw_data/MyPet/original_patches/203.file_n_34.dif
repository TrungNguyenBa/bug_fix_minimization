diff --git a/src/main/java/de/Keyle/MyPet/entity/types/ocelot/EntityMyOcelot.java b/src/main/java/de/Keyle/MyPet/entity/types/ocelot/EntityMyOcelot.java
index 73fa0c2f..77f3d08c 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/ocelot/EntityMyOcelot.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/ocelot/EntityMyOcelot.java
@@ -41,6 +42,41 @@ public class EntityMyOcelot extends EntityMyPet
         super(world, myPet);
     }
 
+    public void setPathfinder()
+    {
+        super.setPathfinder();
+        petPathfinderSelector.addGoal("Sit", 2, sitPathfinder);
+    }
+
+    public void setMyPet(MyPet myPet)
+    {
+        if (myPet != null)
+        {
+            this.sitPathfinder = new MyPetAISit(this);
+
+            super.setMyPet(myPet);
+
+            this.setSitting(((MyOcelot) myPet).isSitting());
+            this.setBaby(((MyOcelot) myPet).isBaby());
+            this.setCatType(((MyOcelot) myPet).getCatType().getId());
+        }
+    }
+
+    public boolean canMove()
+    {
+        return !isSitting();
+    }
+
+    public void setSitting(boolean flag)
+    {
+        this.sitPathfinder.setSitting(flag);
+    }
+
+    public boolean isSitting()
+    {
+        return this.sitPathfinder.isSitting();
+    }
+
     public void applySitting(boolean flag)
     {
         int i = this.datawatcher.getByte(16);
@@ -55,11 +91,6 @@ public class EntityMyOcelot extends EntityMyPet
         ((MyOcelot) myPet).isSitting = flag;
     }
 
-    public boolean canMove()
-    {
-        return !isSitting();
-    }
-
     public Type getCatType()
     {
         return ((MyOcelot) myPet).catType;
@@ -71,28 +102,32 @@ public class EntityMyOcelot extends EntityMyPet
         ((MyOcelot) myPet).catType = Type.getType(value);
     }
 
-    /**
-     * Returns the sound that is played when the MyPet dies
-     */
-    protected String getDeathSound()
+    public boolean isBaby()
     {
-        return "mob.cat.hitt";
+        return ((MyOcelot) myPet).isBaby;
     }
 
-    /**
-     * Returns the sound that is played when the MyPet get hurt
-     */
-    protected String getHurtSound()
+    public void setBaby(boolean flag)
     {
-        return "mob.cat.hitt";
+        if (flag)
+        {
+            this.datawatcher.watch(12, Integer.valueOf(Integer.MIN_VALUE));
+        }
+        else
+        {
+            this.datawatcher.watch(12, new Integer(0));
+        }
+        ((MyOcelot) myPet).isBaby = flag;
     }
 
-    /**
-     * Returns the default sound of the MyPet
-     */
-    protected String getLivingSound()
+    protected void initDatawatcher()
     {
-        return !playIdleSound() ? null : this.random.nextInt(4) == 0 ? "mob.cat.purreow" : "mob.cat.meow";
+        super.initDatawatcher();
+        this.datawatcher.a(12, new Integer(0));     // age
+        this.datawatcher.a(16, new Byte((byte) 0)); // tamed/sitting
+        this.datawatcher.a(17, "");                 // ownername
+        this.datawatcher.a(18, new Byte((byte) 0)); // cat type
+
     }
 
     /**
@@ -159,61 +194,27 @@ public class EntityMyOcelot extends EntityMyPet
         return false;
     }
 
-    protected void initDatawatcher()
-    {
-        super.initDatawatcher();
-        this.datawatcher.a(12, new Integer(0));     // age
-        this.datawatcher.a(16, new Byte((byte) 0)); // tamed/sitting
-        this.datawatcher.a(17, "");                 // ownername
-        this.datawatcher.a(18, new Byte((byte) 0)); // cat type
-
-    }
-
-    public boolean isBaby()
-    {
-        return ((MyOcelot) myPet).isBaby;
-    }
-
-    public void setBaby(boolean flag)
-    {
-        if (flag)
-        {
-            this.datawatcher.watch(12, Integer.valueOf(Integer.MIN_VALUE));
-        }
-        else
-        {
-            this.datawatcher.watch(12, new Integer(0));
-        }
-        ((MyOcelot) myPet).isBaby = flag;
-    }
-
-    public boolean isSitting()
-    {
-        return this.sitPathfinder.isSitting();
-    }
-
-    public void setSitting(boolean flag)
+    /**
+     * Returns the sound that is played when the MyPet get hurt
+     */
+    protected String getHurtSound()
     {
-        this.sitPathfinder.setSitting(flag);
+        return "mob.cat.hitt";
     }
 
-    public void setMyPet(MyPet myPet)
-    {
-        if (myPet != null)
+    /**
+     * Returns the sound that is played when the MyPet dies
+     */
+    protected String getDeathSound()
     {
-            this.sitPathfinder = new MyPetAISit(this);
-
-            super.setMyPet(myPet);
-
-            this.setSitting(((MyOcelot) myPet).isSitting());
-            this.setBaby(((MyOcelot) myPet).isBaby());
-            this.setCatType(((MyOcelot) myPet).getCatType().getId());
-        }
+        return "mob.cat.hitt";
     }
 
-    public void setPathfinder()
+    /**
+     * Returns the default sound of the MyPet
+     */
+    protected String getLivingSound()
     {
-        super.setPathfinder();
-        petPathfinderSelector.addGoal("Sit", 2, sitPathfinder);
+        return !playIdleSound() ? null : this.random.nextInt(4) == 0 ? "mob.cat.purreow" : "mob.cat.meow";
     }
 }
\ No newline at end of file
