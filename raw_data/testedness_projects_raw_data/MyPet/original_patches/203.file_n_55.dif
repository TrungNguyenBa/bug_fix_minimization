diff --git a/src/main/java/de/Keyle/MyPet/entity/types/wolf/MyWolf.java b/src/main/java/de/Keyle/MyPet/entity/types/wolf/MyWolf.java
index e0808a5c..b717c104 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/wolf/MyWolf.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/wolf/MyWolf.java
@@ -48,6 +48,20 @@ public class MyWolf extends MyPet implements IMyPetBaby
         super(petOwner);
     }
 
+    public boolean isSitting()
+    {
+        return isSitting;
+    }
+
+    public void setSitting(boolean flag)
+    {
+        if (status == PetState.Here)
+        {
+            ((EntityMyWolf) getCraftPet().getHandle()).setSitting(flag);
+        }
+        this.isSitting = flag;
+    }
+
     public DyeColor getCollarColor()
     {
         return collarColor;
@@ -62,47 +76,18 @@ public class MyWolf extends MyPet implements IMyPetBaby
         this.collarColor = value;
     }
 
-    @Override
-    public CompoundTag getExtendedInfo()
+    public boolean isTamed()
     {
-        CompoundTag info = super.getExtendedInfo();
-        info.getValue().put("Sitting", new ByteTag("Sitting", isSitting()));
-        info.getValue().put("Baby", new ByteTag("Baby", isBaby()));
-        info.getValue().put("Tamed", new ByteTag("Tamed", isTamed()));
-        info.getValue().put("Angry", new ByteTag("Angry", isAngry()));
-        info.getValue().put("CollarColor", new ByteTag("CollarColor", getCollarColor().getDyeData()));
-        return info;
+        return isTamed;
     }
 
-    @Override
-    public void setExtendedInfo(CompoundTag info)
+    public void setTamed(boolean flag)
     {
-        if (info.getValue().containsKey("Sitting"))
-        {
-            setSitting(((ByteTag) info.getValue().get("Sitting")).getBooleanValue());
-        }
-        if (info.getValue().containsKey("CollarColor"))
-        {
-            setCollarColor(DyeColor.getByDyeData(((ByteTag) info.getValue().get("CollarColor")).getValue()));
-        }
-        if (info.getValue().containsKey("Tamed"))
-        {
-            setTamed(((ByteTag) info.getValue().get("Tamed")).getBooleanValue());
-        }
-        if (info.getValue().containsKey("Baby"))
-        {
-            setBaby(((ByteTag) info.getValue().get("Baby")).getBooleanValue());
-        }
-        if (info.getValue().containsKey("Angry"))
+        if (status == PetState.Here)
         {
-            setAngry(((ByteTag) info.getValue().get("Angry")).getBooleanValue());
+            ((EntityMyWolf) getCraftPet().getHandle()).setTamed(flag);
         }
-    }
-
-    @Override
-    public MyPetType getPetType()
-    {
-        return MyPetType.Wolf;
+        this.isTamed = flag;
     }
 
     public boolean isAngry()
@@ -133,32 +118,47 @@ public class MyWolf extends MyPet implements IMyPetBaby
         this.isBaby = flag;
     }
 
-    public boolean isSitting()
+    @Override
+    public CompoundTag getExtendedInfo()
     {
-        return isSitting;
+        CompoundTag info = super.getExtendedInfo();
+        info.getValue().put("Sitting", new ByteTag("Sitting", isSitting()));
+        info.getValue().put("Baby", new ByteTag("Baby", isBaby()));
+        info.getValue().put("Tamed", new ByteTag("Tamed", isTamed()));
+        info.getValue().put("Angry", new ByteTag("Angry", isAngry()));
+        info.getValue().put("CollarColor", new ByteTag("CollarColor", getCollarColor().getDyeData()));
+        return info;
     }
 
-    public void setSitting(boolean flag)
+    @Override
+    public void setExtendedInfo(CompoundTag info)
     {
-        if (status == PetState.Here)
+        if (info.getValue().containsKey("Sitting"))
         {
-            ((EntityMyWolf) getCraftPet().getHandle()).setSitting(flag);
+            setSitting(((ByteTag) info.getValue().get("Sitting")).getBooleanValue());
+        }
+        if (info.getValue().containsKey("CollarColor"))
+        {
+            setCollarColor(DyeColor.getByDyeData(((ByteTag) info.getValue().get("CollarColor")).getValue()));
+        }
+        if (info.getValue().containsKey("Tamed"))
+        {
+            setTamed(((ByteTag) info.getValue().get("Tamed")).getBooleanValue());
+        }
+        if (info.getValue().containsKey("Baby"))
+        {
+            setBaby(((ByteTag) info.getValue().get("Baby")).getBooleanValue());
+        }
+        if (info.getValue().containsKey("Angry"))
+        {
+            setAngry(((ByteTag) info.getValue().get("Angry")).getBooleanValue());
         }
-        this.isSitting = flag;
-    }
-
-    public boolean isTamed()
-    {
-        return isTamed;
     }
 
-    public void setTamed(boolean flag)
+    @Override
+    public MyPetType getPetType()
     {
-        if (status == PetState.Here)
-        {
-            ((EntityMyWolf) getCraftPet().getHandle()).setTamed(flag);
-        }
-        this.isTamed = flag;
+        return MyPetType.Wolf;
     }
 
     @Override
