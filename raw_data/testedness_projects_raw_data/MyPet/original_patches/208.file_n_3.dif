diff --git a/src/main/java/de/Keyle/MyPet/util/MyPetPlayer.java b/src/main/java/de/Keyle/MyPet/util/MyPetPlayer.java
index d32e87ca..0beb5f0b 100644
--- a/src/main/java/de/Keyle/MyPet/util/MyPetPlayer.java
+++ b/src/main/java/de/Keyle/MyPet/util/MyPetPlayer.java
@@ -20,8 +20,6 @@
 
 package de.Keyle.MyPet.util;
 
-import com.google.common.collect.BiMap;
-import com.google.common.collect.HashBiMap;
 import de.Keyle.MyPet.MyPetPlugin;
 import de.Keyle.MyPet.entity.types.InactiveMyPet;
 import de.Keyle.MyPet.entity.types.MyPet;
@@ -39,9 +37,7 @@ import org.bukkit.entity.AnimalTamer;
 import org.bukkit.entity.Player;
 import org.spout.nbt.*;
 
-import java.util.ArrayList;
-import java.util.List;
-import java.util.UUID;
+import java.util.*;
 
 public class MyPetPlayer implements IScheduler, NBTStorage
 {
@@ -56,9 +52,7 @@ public class MyPetPlayer implements IScheduler, NBTStorage
     private boolean captureHelperMode = false;
     private boolean autoRespawn = false;
     private int autoRespawnMin = 1;
-
-    private BiMap<String, UUID> petWorldUUID = HashBiMap.create();
-    private BiMap<UUID, String> petUUIDWorld = petWorldUUID.inverse();
+    private Map<String, UUID> petWorlds = new HashMap<String, UUID>();
     private CompoundTag extendedInfo = new CompoundTag("ExtendedInfo", new CompoundMap());
 
     public enum DonationRank
@@ -108,7 +102,7 @@ public class MyPetPlayer implements IScheduler, NBTStorage
         {
             return true;
         }
-        else if (petWorldUUID.size() > 0)
+        else if (petWorlds.size() > 0)
         {
             return true;
         }
@@ -155,27 +149,34 @@ public class MyPetPlayer implements IScheduler, NBTStorage
         }
         if (myPetUUID == null)
         {
-            petUUIDWorld.remove(myPetUUID);
+            petWorlds.remove(worldGroup);
         }
         else
         {
-            petWorldUUID.put(worldGroup, myPetUUID);
+            petWorlds.put(worldGroup, myPetUUID);
         }
     }
 
     public UUID getMyPetForWorldGroup(String worldGroup)
     {
-        return petWorldUUID.get(worldGroup);
+        return petWorlds.get(worldGroup);
     }
 
     public String getWorldGroupForMyPet(UUID petUUID)
     {
-        return petUUIDWorld.get(petUUID);
+        for (String worldGroup : petWorlds.keySet())
+        {
+            if (petWorlds.get(worldGroup).equals(petUUID))
+            {
+                return worldGroup;
+            }
+        }
+        return null;
     }
 
     public boolean hasMyPetInWorldGroup(String worldGroup)
     {
-        return petWorldUUID.containsKey(worldGroup);
+        return petWorlds.containsKey(worldGroup);
     }
 
     public boolean hasInactiveMyPetInWorldGroup(String worldGroup)
@@ -332,12 +333,12 @@ public class MyPetPlayer implements IScheduler, NBTStorage
 
     public boolean hasInactiveMyPets()
     {
-        return MyPetList.hasInactiveMyPets(this);
+        return MyPetList.hasInactiveMyPets(playerName);
     }
 
     public InactiveMyPet getInactiveMyPet(UUID petUUID)
     {
-        for (InactiveMyPet inactiveMyPet : MyPetList.getInactiveMyPets(this))
+        for (InactiveMyPet inactiveMyPet : MyPetList.getInactiveMyPets(playerName))
         {
             if (inactiveMyPet.getUUID().equals(petUUID))
             {
@@ -347,9 +348,9 @@ public class MyPetPlayer implements IScheduler, NBTStorage
         return null;
     }
 
-    public List<InactiveMyPet> getInactiveMyPets()
+    public InactiveMyPet[] getInactiveMyPets()
     {
-        return MyPetList.getInactiveMyPets(this);
+        return MyPetList.getInactiveMyPets(playerName);
     }
 
     public Player getPlayer()
@@ -424,9 +425,9 @@ public class MyPetPlayer implements IScheduler, NBTStorage
         playerNBT.getValue().put("CaptureMode", new ByteTag("CaptureMode", isCaptureHelperActive()));
 
         CompoundTag multiWorldCompound = new CompoundTag("MultiWorld", new CompoundMap());
-        for (String worldGroupName : petWorldUUID.keySet())
+        for (String worldGroupName : petWorlds.keySet())
         {
-            multiWorldCompound.getValue().put(worldGroupName, new StringTag(worldGroupName, petWorldUUID.get(worldGroupName).toString()));
+            multiWorldCompound.getValue().put(worldGroupName, new StringTag(worldGroupName, petWorlds.get(worldGroupName).toString()));
         }
         playerNBT.getValue().put("MultiWorld", multiWorldCompound);
 
