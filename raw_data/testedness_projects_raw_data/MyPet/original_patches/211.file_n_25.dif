diff --git a/src/main/java/de/Keyle/MyPet/listeners/MyPetPlayerListener.java b/src/main/java/de/Keyle/MyPet/listeners/MyPetPlayerListener.java
index fb73ca3f..e21614eb 100644
--- a/src/main/java/de/Keyle/MyPet/listeners/MyPetPlayerListener.java
+++ b/src/main/java/de/Keyle/MyPet/listeners/MyPetPlayerListener.java
@@ -32,10 +32,7 @@ import de.Keyle.MyPet.skill.skills.implementation.Control;
 import de.Keyle.MyPet.skill.skills.implementation.Inventory;
 import de.Keyle.MyPet.skill.skills.implementation.inventory.MyPetCustomInventory;
 import de.Keyle.MyPet.skill.skills.info.BehaviorInfo.BehaviorState;
-import de.Keyle.MyPet.util.MyPetConfiguration;
-import de.Keyle.MyPet.util.MyPetPermissions;
-import de.Keyle.MyPet.util.MyPetPlayer;
-import de.Keyle.MyPet.util.MyPetWorldGroup;
+import de.Keyle.MyPet.util.*;
 import de.Keyle.MyPet.util.locale.MyPetLocales;
 import org.bukkit.Material;
 import org.bukkit.block.Block;
@@ -69,7 +66,7 @@ public class MyPetPlayerListener implements Listener
                         Behavior behavior = (Behavior) myPet.getSkills().getSkill("Behavior");
                         if (behavior.getBehavior() == BehaviorState.Aggressive || behavior.getBehavior() == BehaviorState.Farm)
                         {
-                            event.getPlayer().sendMessage(MyPetLocales.getString("Message.Skill.Control.AggroFarm", event.getPlayer()).replace("%petname%", myPet.getPetName()).replace("%mode%", "" + behavior.getBehavior().name()));
+                            event.getPlayer().sendMessage(Colorizer.setColors(MyPetLocales.getString("Message.Skill.Control.AggroFarm", event.getPlayer()).replace("%petname%", myPet.getPetName()).replace("%mode%", "" + behavior.getBehavior().name())));
                             return;
                         }
                     }
@@ -77,13 +74,13 @@ public class MyPetPlayerListener implements Listener
                     {
                         if (myPet.getCraftPet().getHandle().hasRider())
                         {
-                            event.getPlayer().sendMessage(MyPetLocales.getString("Message.Skill.Control.Ride", event.getPlayer()).replace("%petname%", myPet.getPetName()));
+                            event.getPlayer().sendMessage(Colorizer.setColors(MyPetLocales.getString("Message.Skill.Control.Ride", event.getPlayer()).replace("%petname%", myPet.getPetName())));
                             return;
                         }
                     }
                     if (!MyPetPermissions.hasExtended(event.getPlayer(), "MyPet.user.extended.Control"))
                     {
-                        myPet.sendMessageToOwner(MyPetLocales.getString("Message.CantUse", myPet.getOwner().getLanguage()));
+                        myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.CantUse", myPet.getOwner().getLanguage())));
                         return;
                     }
                     Block block = event.getPlayer().getTargetBlock(null, 100);
@@ -120,13 +117,13 @@ public class MyPetPlayerListener implements Listener
                     {
                         MyPetList.setMyPetActive(inactiveMyPet);
                         MyPet activeMyPet = joinedPlayer.getMyPet();
-                        activeMyPet.sendMessageToOwner(MyPetLocales.getString("Message.NowActivePet", joinedPlayer).replace("%petname%", activeMyPet.getPetName()));
+                        activeMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NowActivePet", joinedPlayer).replace("%petname%", activeMyPet.getPetName())));
                         break;
                     }
                 }
                 if (!joinedPlayer.hasMyPet())
                 {
-                    joinedPlayer.getPlayer().sendMessage(MyPetLocales.getString("Message.NoActivePetInThisWorld", joinedPlayer));
+                    joinedPlayer.getPlayer().sendMessage(Colorizer.setColors(MyPetLocales.getString("Message.NoActivePetInThisWorld", joinedPlayer)));
                     joinedPlayer.setMyPetForWorldGroup(joinGroup.getName(), null);
                 }
             }
@@ -135,27 +132,27 @@ public class MyPetPlayerListener implements Listener
                 MyPet myPet = joinedPlayer.getMyPet();
                 if (myPet.getStatus() == PetState.Dead)
                 {
-                    myPet.sendMessageToOwner(MyPetLocales.getString("Message.RespawnIn", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()).replace("%time%", "" + myPet.getRespawnTime()));
+                    myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.RespawnIn", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()).replace("%time%", "" + myPet.getRespawnTime())));
                 }
                 else if (myPet.wantToRespawn() && myPet.getLocation().getWorld() == event.getPlayer().getLocation().getWorld() && myPet.getLocation().distance(event.getPlayer().getLocation()) < 75)
                 {
                     switch (myPet.createPet())
                     {
                         case Success:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.Call", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.Call", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             if (MyPetConfiguration.ENABLE_EVENTS)
                             {
                                 getPluginManager().callEvent(new MyPetSpoutEvent(myPet, MyPetSpoutEventReason.Call));
                             }
                             break;
                         case Canceled:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                         case NoSpace:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                         case NotAllowed:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                     }
                 }
@@ -216,7 +213,7 @@ public class MyPetPlayerListener implements Listener
                         {
                             MyPetList.setMyPetActive(inactiveMyPet);
                             MyPet activeMyPet = myPetPlayer.getMyPet();
-                            activeMyPet.sendMessageToOwner(MyPetLocales.getString("Message.NowActivePet", myPetPlayer).replace("%petname%", activeMyPet.getPetName()));
+                            activeMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NowActivePet", myPetPlayer).replace("%petname%", activeMyPet.getPetName())));
                             break;
                         }
                     }
@@ -229,7 +226,7 @@ public class MyPetPlayerListener implements Listener
             }
             if (!myPetPlayer.hasMyPet())
             {
-                myPetPlayer.getPlayer().sendMessage(MyPetLocales.getString("Message.NoActivePetInThisWorld", myPetPlayer));
+                myPetPlayer.getPlayer().sendMessage(Colorizer.setColors(MyPetLocales.getString("Message.NoActivePetInThisWorld", myPetPlayer)));
             }
             else
             {
@@ -246,24 +243,24 @@ public class MyPetPlayerListener implements Listener
                                 switch (runMyPet.createPet())
                                 {
                                     case Canceled:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()));
                                         break;
                                     case NoSpace:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()));
                                         break;
                                     case NotAllowed:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                                         break;
                                     case Dead:
                                         if (runMyPet != myPet)
                                         {
-                                            runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.CallWhenDead", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()).replace("%time%", "" + runMyPet.getRespawnTime()));
+                                            runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.CallWhenDead", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()).replace("%time%", "" + runMyPet.getRespawnTime()));
                                         }
                                         break;
                                     case Success:
                                         if (runMyPet != myPet)
                                         {
-                                            runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.Call", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()));
+                                            runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.Call", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()));
                                         }
                                         break;
                                 }
@@ -302,13 +299,13 @@ public class MyPetPlayerListener implements Listener
                                 switch (runMyPet.createPet())
                                 {
                                     case Canceled:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()));
                                         break;
                                     case NoSpace:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage()).replace("%petname%", runMyPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage())).replace("%petname%", runMyPet.getPetName()));
                                         break;
                                     case NotAllowed:
-                                        runMyPet.sendMessageToOwner(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                                        runMyPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                                         break;
                                 }
                             }
@@ -361,13 +358,13 @@ public class MyPetPlayerListener implements Listener
                             }
                             break;
                         case Canceled:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnPrevent", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                         case NoSpace:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.SpawnNoSpace", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                         case NotAllowed:
-                            myPet.sendMessageToOwner(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage()).replace("%petname%", myPet.getPetName()));
+                            myPet.sendMessageToOwner(Colorizer.setColors(MyPetLocales.getString("Message.NotAllowedHere", myPet.getOwner().getLanguage())).replace("%petname%", myPet.getPetName()));
                             break;
                     }
                 }
