diff --git a/src/main/java/de/Keyle/MyPet/entity/types/horse/EntityMyHorse.java b/src/main/java/de/Keyle/MyPet/entity/types/horse/EntityMyHorse.java
index 6e5f6ce6..54237030 100644
--- a/src/main/java/de/Keyle/MyPet/entity/types/horse/EntityMyHorse.java
+++ b/src/main/java/de/Keyle/MyPet/entity/types/horse/EntityMyHorse.java
@@ -33,8 +33,6 @@ public class EntityMyHorse extends EntityMyPet
 
     int soundCounter = 0;
     int rearCounter = -1;
-    int ageCounter = -1;
-    int ageFailCounter = 1;
 
     public EntityMyHorse(World world, MyPet myPet)
     {
@@ -132,7 +130,7 @@ public class EntityMyHorse extends EntityMyPet
     public void setAge(int value)
     {
         value = Math.min(0, (Math.max(-24000, value)));
-        value -= value % 1000;
+        value = value - (value % 1000);
         ((MyHorse) myPet).age = value;
         this.datawatcher.watch(12, new Integer(value));
     }
@@ -220,7 +218,7 @@ public class EntityMyHorse extends EntityMyPet
             }
             ItemStack itemStack = entityhuman.inventory.getItemInHand();
 
-            if (itemStack != null && canUseItem())
+            if (itemStack != null)
             {
                 if (itemStack.id == 329 && getOwner().getPlayer().isSneaking() && !hasSaddle() && getAge() >= 0 && canEquip())
                 {
@@ -293,34 +291,21 @@ public class EntityMyHorse extends EntityMyPet
                     }
                     return true;
                 }
-                else if (itemStack.id == GROW_UP_ITEM)
+                else if (itemStack.id == GROW_UP_ITEM && getOwner().getPlayer().isSneaking() && canUseItem())
                 {
                     if (isBaby())
                     {
-                        if (getOwner().getPlayer().isSneaking())
+                        if (!entityhuman.abilities.canInstantlyBuild)
                         {
-                            if (!entityhuman.abilities.canInstantlyBuild)
+                            if (--itemStack.count <= 0)
                             {
-                                if (--itemStack.count <= 0)
-                                {
-                                    entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
-                                }
+                                entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, null);
                             }
-                            this.setAge(getAge() + 3000);
-                            return true;
                         }
+                        this.setAge(getAge() + 1000);
+                        return true;
                     }
                 }
-                if (itemStack.id == Material.BREAD.getId() ||
-                        itemStack.id == Material.WHEAT.getId() ||
-                        itemStack.id == Material.GOLDEN_APPLE.getId() ||
-                        itemStack.id == Material.HAY_BLOCK.getId() ||
-                        itemStack.id == Material.GOLDEN_CARROT.getId() ||
-                        itemStack.id == Material.APPLE.getId() ||
-                        itemStack.id == Material.SUGAR.getId())
-                {
-                    ageCounter = 5;
-                }
             }
         }
         catch (Exception e)
@@ -418,13 +403,6 @@ public class EntityMyHorse extends EntityMyPet
         if (rearCounter > -1 && rearCounter-- == 0)
         {
             applyVisual(64, false);
-            rearCounter = -1;
-        }
-        if (ageCounter > -1 && ageCounter-- == 0)
-        {
-            this.datawatcher.watch(12, new Integer(getAge() + ageFailCounter++));
-            ageCounter = -1;
-            ageFailCounter %= 1000;
         }
     }
 
