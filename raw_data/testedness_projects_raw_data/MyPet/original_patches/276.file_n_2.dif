diff --git a/src/main/java/de/Keyle/MyPet/listeners/MyPetEntityListener.java b/src/main/java/de/Keyle/MyPet/listeners/MyPetEntityListener.java
index ed18a260..0d21488a 100644
--- a/src/main/java/de/Keyle/MyPet/listeners/MyPetEntityListener.java
+++ b/src/main/java/de/Keyle/MyPet/listeners/MyPetEntityListener.java
@@ -63,10 +63,7 @@ import org.bukkit.potion.PotionEffect;
 import org.bukkit.potion.PotionEffectType;
 import org.spout.nbt.*;
 
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
+import java.util.*;
 
 import static org.bukkit.Bukkit.getPluginManager;
 
@@ -135,7 +132,7 @@ public class MyPetEntityListener implements Listener
                         event.setCancelled(true);
                     }
                 }
-                if (event.getEntity() instanceof LivingEntity && !event.isCancelled() && MyPetExperience.DAMAGE_WEIGHTED_EXPERIENCE_DISTRIBUTION)
+                else if (event.getEntity() instanceof LivingEntity)
                 {
                     LivingEntity entity = (LivingEntity) event.getEntity();
                     event.setCancelled(true);
@@ -665,7 +662,33 @@ public class MyPetEntityListener implements Listener
     {
         if (MyPetExperience.DAMAGE_WEIGHTED_EXPERIENCE_DISTRIBUTION && event.getEntity() instanceof LivingEntity && !(event.getEntity() instanceof Player))
         {
-            MyPetExperience.addDamageToEntity((LivingEntity) event.getDamager(), (LivingEntity) event.getEntity(), event.getDamage());
+            Map<Entity, Integer> damageMap;
+            if (event.getEntity().hasMetadata("DamageCount"))
+            {
+                for (MetadataValue value : event.getEntity().getMetadata("DamageCount"))
+                {
+                    if (value.getOwningPlugin() == MyPetPlugin.getPlugin())
+                    {
+                        damageMap = (Map<Entity, Integer>) value.value();
+                        if (damageMap.containsKey(event.getDamager()))
+                        {
+                            int oldDamage = damageMap.get(event.getDamager());
+                            damageMap.put(event.getDamager(), ((LivingEntity) event.getEntity()).getHealth() < event.getDamage() ? ((LivingEntity) event.getEntity()).getHealth() + oldDamage : event.getDamage() + oldDamage);
+                        }
+                        else
+                        {
+                            damageMap.put(event.getDamager(), ((LivingEntity) event.getEntity()).getHealth() < event.getDamage() ? ((LivingEntity) event.getEntity()).getHealth() : event.getDamage());
+                        }
+                        break;
+                    }
+                }
+            }
+            else
+            {
+                damageMap = new HashMap<Entity, Integer>();
+                damageMap.put(event.getDamager(), ((LivingEntity) event.getEntity()).getHealth() < event.getDamage() ? ((LivingEntity) event.getEntity()).getHealth() : event.getDamage());
+                event.getEntity().setMetadata("DamageCount", new FixedMetadataValue(MyPetPlugin.getPlugin(), damageMap));
+            }
         }
     }
 
@@ -881,42 +904,66 @@ public class MyPetEntityListener implements Listener
             }
             if (MyPetExperience.DAMAGE_WEIGHTED_EXPERIENCE_DISTRIBUTION)
             {
-                Map<Entity, Double> damagePercentMap = MyPetExperience.getDamageToEntityPercent(event.getEntity());
-                for (Entity entity : damagePercentMap.keySet())
+                if (event.getEntity().hasMetadata("DamageCount"))
                 {
-                    if (entity instanceof CraftMyPet)
-                    {
-                        MyPet myPet = ((CraftMyPet) entity).getMyPet();
-                        if (MyPetConfiguration.PREVENT_LEVELLING_WITHOUT_SKILLTREE && myPet.getSkillTree() == null)
-                        {
-                            continue;
-                        }
-                        double randomExp = MyPetMonsterExperience.getMonsterExperience(event.getEntity().getType()).getRandomExp();
-                        myPet.getExperience().addExp(damagePercentMap.get(entity) * randomExp);
-                    }
-                    else if (entity instanceof Player)
+                    for (MetadataValue value : event.getEntity().getMetadata("DamageCount"))
                     {
-                        Player owner = (Player) entity;
-                        if (MyPetList.hasMyPet(owner))
+                        if (value.getOwningPlugin() == MyPetPlugin.getPlugin())
                         {
-                            MyPet myPet = MyPetList.getMyPet(owner);
-                            if (MyPetConfiguration.PREVENT_LEVELLING_WITHOUT_SKILLTREE && myPet.getSkillTree() == null)
+                            Map<Entity, Integer> damageMap = (Map<Entity, Integer>) value.value();
+                            for (Entity entity : damageMap.keySet())
                             {
-                                return;
-                            }
-                            if (myPet.isPassiv())
-                            {
-                                if (myPet.getStatus() == PetState.Here)
+                                if (entity instanceof CraftMyPet)
                                 {
+                                    MyPet myPet = ((CraftMyPet) entity).getMyPet();
+                                    if (MyPetConfiguration.PREVENT_LEVELLING_WITHOUT_SKILLTREE && myPet.getSkillTree() == null)
+                                    {
+                                        continue;
+                                    }
+                                    double damage = damageMap.get(entity);
+                                    double allDamage = 0;
                                     double randomExp = MyPetMonsterExperience.getMonsterExperience(event.getEntity().getType()).getRandomExp();
-                                    myPet.getExperience().addExp(damagePercentMap.get(entity) * randomExp);
+                                    for (Integer d : damageMap.values())
+                                    {
+                                        allDamage += d;
+                                    }
+                                    //MyPetLogger.write("Exp: " + (damage / allDamage * randomExp) + "/" + randomExp + " (" + (damage / allDamage * 100) + ")");
+                                    myPet.getExperience().addExp(damage / allDamage * randomExp);
+                                }
+                                else if (entity instanceof Player)
+                                {
+                                    Player owner = (Player) entity;
+                                    if (MyPetList.hasMyPet(owner))
+                                    {
+                                        MyPet myPet = MyPetList.getMyPet(owner);
+                                        if (MyPetConfiguration.PREVENT_LEVELLING_WITHOUT_SKILLTREE && myPet.getSkillTree() == null)
+                                        {
+                                            return;
+                                        }
+                                        if (myPet.isPassiv())
+                                        {
+                                            if (myPet.getStatus() == PetState.Here)
+                                            {
+                                                double damage = damageMap.get(entity);
+                                                double allDamage = 0;
+                                                double randomExp = MyPetMonsterExperience.getMonsterExperience(event.getEntity().getType()).getRandomExp();
+                                                for (Integer d : damageMap.values())
+                                                {
+                                                    allDamage += d;
+                                                }
+                                                //MyPetLogger.write("Exp: " + (damage / allDamage * randomExp) + "/" + randomExp + " (" + (damage / allDamage *100) + ")");
+                                                myPet.getExperience().addExp(damage / allDamage * randomExp);
+                                            }
+                                        }
+                                    }
                                 }
                             }
+                            return;
                         }
                     }
                 }
             }
-            else if (event.getEntity().getLastDamageCause() instanceof EntityDamageByEntityEvent)
+            if (event.getEntity().getLastDamageCause() instanceof EntityDamageByEntityEvent)
             {
                 EntityDamageByEntityEvent edbee = (EntityDamageByEntityEvent) event.getEntity().getLastDamageCause();
                 if (edbee.getDamager() instanceof CraftMyPet)
