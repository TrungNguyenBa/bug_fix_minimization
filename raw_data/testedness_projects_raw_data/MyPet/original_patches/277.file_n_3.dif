diff --git a/src/main/java/de/Keyle/MyPet/entity/ai/movement/MyPetAIFollowOwner.java b/src/main/java/de/Keyle/MyPet/entity/ai/movement/MyPetAIFollowOwner.java
index 798174b8..24336511 100644
--- a/src/main/java/de/Keyle/MyPet/entity/ai/movement/MyPetAIFollowOwner.java
+++ b/src/main/java/de/Keyle/MyPet/entity/ai/movement/MyPetAIFollowOwner.java
@@ -24,9 +24,8 @@ import de.Keyle.MyPet.entity.ai.MyPetAIGoal;
 import de.Keyle.MyPet.entity.ai.navigation.AbstractNavigation;
 import de.Keyle.MyPet.entity.types.EntityMyPet;
 import de.Keyle.MyPet.util.MyPetBukkitUtil;
-import net.minecraft.server.v1_5_R3.EntityPlayer;
 import org.bukkit.Location;
-import org.bukkit.craftbukkit.v1_5_R3.entity.CraftPlayer;
+import org.bukkit.entity.LivingEntity;
 
 public class MyPetAIFollowOwner extends MyPetAIGoal
 {
@@ -38,7 +37,6 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
     private float startDistance;
     private float teleportDistance;
     private MyPetAIControl controlPathfinderGoal;
-    private EntityPlayer owner;
 
     public MyPetAIFollowOwner(EntityMyPet entityMyPet, float walkSpeedModifier, float startDistance, float stopDistance, float teleportDistance)
     {
@@ -48,7 +46,6 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
         this.startDistance = startDistance * startDistance;
         this.stopDistance = stopDistance * stopDistance;
         this.teleportDistance = teleportDistance * teleportDistance;
-        this.owner = ((CraftPlayer) petEntity.getOwner().getPlayer()).getHandle();
     }
 
     @Override
@@ -77,11 +74,11 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
         {
             return false;
         }
-        else if (this.petEntity.e(owner) < this.startDistance)
+        else if (this.petEntity.e(this.petEntity.getOwner()) < this.startDistance)
         {
             return false;
         }
-        else if (controlPathfinderGoal.moveTo != null)
+        else if (controlPathfinderGoal != null && controlPathfinderGoal.moveTo != null)
         {
             return false;
         }
@@ -99,7 +96,7 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
         {
             return true;
         }
-        else if (this.petEntity.e(owner) < this.stopDistance)
+        else if (this.petEntity.e(this.petEntity.getOwner()) < this.stopDistance)
         {
             return true;
         }
@@ -138,7 +135,7 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
             return;
         }
 
-        this.petEntity.getControllerLook().a(owner, 10.0F, (float) this.petEntity.bs());
+        this.petEntity.getControllerLook().a(this.petEntity.getOwner(), 10.0F, (float) this.petEntity.bs());
 
         if (this.petEntity.canMove())
         {
@@ -146,12 +143,12 @@ public class MyPetAIFollowOwner extends MyPetAIGoal
             {
                 this.setPathTimer = 10;
 
-                if (!this.nav.navigateTo(owner))
+                if (!this.nav.navigateTo((LivingEntity) this.petEntity.getOwner().getBukkitEntity()))
                 {
-                    if (owner.onGround && this.petEntity.e(owner) > this.teleportDistance && controlPathfinderGoal.moveTo == null && petEntity.goalTarget == null && MyPetBukkitUtil.canSpawn(ownerLocation, this.petEntity))
+                    if (this.petEntity.getOwner().onGround && this.petEntity.e(this.petEntity.getOwner()) > this.teleportDistance && controlPathfinderGoal.moveTo == null && petEntity.goalTarget == null && MyPetBukkitUtil.canSpawn(ownerLocation, this.petEntity))
                     {
                         this.petEntity.setPositionRotation(ownerLocation.getX(), ownerLocation.getY(), ownerLocation.getZ(), this.petEntity.yaw, this.petEntity.pitch);
-                        this.nav.navigateTo(owner);
+                        this.nav.navigateTo((LivingEntity) this.petEntity.getOwner().getBukkitEntity());
                     }
                 }
             }
