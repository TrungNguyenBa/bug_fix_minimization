diff --git a/src/main/java/de/Keyle/MyPet/entity/ai/movement/FollowOwner.java b/src/main/java/de/Keyle/MyPet/entity/ai/movement/FollowOwner.java
index 7ba1dbcf..c1581376 100644
--- a/src/main/java/de/Keyle/MyPet/entity/ai/movement/FollowOwner.java
+++ b/src/main/java/de/Keyle/MyPet/entity/ai/movement/FollowOwner.java
@@ -24,12 +24,13 @@ import de.Keyle.MyPet.entity.ai.AIGoal;
 import de.Keyle.MyPet.entity.ai.navigation.AbstractNavigation;
 import de.Keyle.MyPet.entity.types.EntityMyPet;
 import de.Keyle.MyPet.util.BukkitUtil;
-import net.minecraft.server.v1_7_R3.*;
+import net.minecraft.server.v1_7_R3.EntityPlayer;
 import org.bukkit.Location;
 import org.bukkit.craftbukkit.v1_7_R3.entity.CraftPlayer;
 
 public class FollowOwner extends AIGoal {
     private EntityMyPet petEntity;
+    private float walkSpeedModifier;
     private AbstractNavigation nav;
     private int setPathTimer = 0;
     private float stopDistance;
@@ -38,8 +39,9 @@ public class FollowOwner extends AIGoal {
     private Control controlPathfinderGoal;
     private EntityPlayer owner;
 
-    public FollowOwner(EntityMyPet entityMyPet, double startDistance, float stopDistance, float teleportDistance) {
+    public FollowOwner(EntityMyPet entityMyPet, float walkSpeedModifier, double startDistance, float stopDistance, float teleportDistance) {
         this.petEntity = entityMyPet;
+        this.walkSpeedModifier = walkSpeedModifier;
         this.nav = entityMyPet.petNavigation;
         this.startDistance = startDistance * startDistance;
         this.stopDistance = stopDistance * stopDistance;
@@ -86,7 +88,7 @@ public class FollowOwner extends AIGoal {
 
     @Override
     public void start() {
-        applyWalkSpeed();
+        nav.getParameters().addSpeedModifier("FollowOwner", walkSpeedModifier);
         this.setPathTimer = 0;
     }
 
@@ -114,36 +117,8 @@ public class FollowOwner extends AIGoal {
                         this.petEntity.setPositionRotation(ownerLocation.getX(), ownerLocation.getY(), ownerLocation.getZ(), this.petEntity.yaw, this.petEntity.pitch);
                         this.nav.navigateTo(owner);
                     }
-                } else {
-                    applyWalkSpeed();
-                }
                 }
             }
         }
-
-    private void applyWalkSpeed() {
-        float walkSpeed = owner.abilities.walkSpeed;
-        if (owner.abilities.isFlying) {
-            // make the pet faster when the player is flying
-            walkSpeed += owner.abilities.flySpeed;
-        } else if (owner.isSprinting()) {
-            // make the pet faster when the player is sprinting
-            if (owner.bb().a(GenericAttributes.b) != null) {
-                walkSpeed += owner.bb().a(GenericAttributes.b).getValue();
-            }
-        } else if (owner.vehicle != null && owner.vehicle instanceof EntityLiving) {
-            // adjust the speed to the pet can catch up with the vehicle the player is in
-            AttributeInstance vehicleSpeedAttribute = ((EntityLiving) owner.vehicle).bb().a(GenericAttributes.d);
-            if (vehicleSpeedAttribute != null) {
-                walkSpeed = (float) vehicleSpeedAttribute.getValue();
-            }
-        } else if (owner.hasEffect(MobEffectList.FASTER_MOVEMENT)) {
-            // make the pet faster when the player is has the SPEED effect
-            walkSpeed += owner.getEffect(MobEffectList.FASTER_MOVEMENT).getAmplifier() * 0.2 * walkSpeed;
-        }
-        // make the pet a little bit faster than the player so it can catch up
-        walkSpeed += 0.07f;
-
-        nav.getParameters().addSpeedModifier("FollowOwner", walkSpeed);
     }
 }
\ No newline at end of file
