diff --git a/src/main/java/de/Keyle/MyPet/skill/skilltree/SkillTree.java b/src/main/java/de/Keyle/MyPet/skill/skilltree/SkillTree.java
index ba926cc6..5f9eef33 100644
--- a/src/main/java/de/Keyle/MyPet/skill/skilltree/SkillTree.java
+++ b/src/main/java/de/Keyle/MyPet/skill/skilltree/SkillTree.java
@@ -39,7 +39,6 @@ public class SkillTree {
     private int maxLevel = 0;
     private int requiredLevel = 0;
     private SortedMap<Integer, SkillTreeLevel> skillsPerLevel = new TreeMap<Integer, SkillTreeLevel>();
-    private int lastLevelWithSkills = 1;
 
     public SkillTree(String name) {
         this.skillTreeName = name;
@@ -116,10 +115,6 @@ public class SkillTree {
         return iconItem;
     }
 
-    public int getLastLevelWithSkills() {
-        return lastLevelWithSkills;
-    }
-
     public int getMaxLevel() {
         return maxLevel;
     }
@@ -145,9 +140,6 @@ public class SkillTree {
     }
 
     public SkillTreeLevel addLevel(int level) {
-        if (level > lastLevelWithSkills) {
-            lastLevelWithSkills = level;
-        }
         if (!skillsPerLevel.containsKey(level)) {
             SkillTreeLevel newLevel = new SkillTreeLevel(level);
             skillsPerLevel.put(level, newLevel);
@@ -157,9 +149,6 @@ public class SkillTree {
     }
 
     public SkillTreeLevel addLevel(SkillTreeLevel level) {
-        if (level.getLevel() > lastLevelWithSkills) {
-            lastLevelWithSkills = level.getLevel();
-        }
         if (!skillsPerLevel.containsKey(level.getLevel())) {
             skillsPerLevel.put(level.getLevel(), level);
             return level;
@@ -170,12 +159,6 @@ public class SkillTree {
     public void removeLevel(int level) {
         if (skillsPerLevel.containsKey(level)) {
             skillsPerLevel.remove(level);
-            lastLevelWithSkills = 1;
-            for (int l : skillsPerLevel.keySet()) {
-                if (l > lastLevelWithSkills) {
-                    lastLevelWithSkills = l;
-                }
-            }
         }
     }
 
