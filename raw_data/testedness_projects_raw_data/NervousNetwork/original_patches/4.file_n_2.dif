diff --git a/src/main/java/org/tiernolan/nervous/network/AcceptThread.java b/src/main/java/org/tiernolan/nervous/network/AcceptThread.java
index 272dd1d..d3b2deb 100644
--- a/src/main/java/org/tiernolan/nervous/network/AcceptThread.java
+++ b/src/main/java/org/tiernolan/nervous/network/AcceptThread.java
@@ -2,18 +2,12 @@ package org.tiernolan.nervous.network;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
-import java.nio.channels.SelectionKey;
-import java.nio.channels.Selector;
 import java.nio.channels.ServerSocketChannel;
 import java.nio.channels.SocketChannel;
-import java.nio.channels.spi.SelectorProvider;
-import java.util.Iterator;
-import java.util.Set;
 
 public class AcceptThread extends Thread {
 
 	private final ServerSocketChannel serverChannel;
-	private final Selector selector;
 	
 	public AcceptThread(int port) throws IOException {
 		this(new InetSocketAddress(port));
@@ -21,10 +15,9 @@ public class AcceptThread extends Thread {
 
 	public AcceptThread(InetSocketAddress addr) throws IOException {
 		try {
-			this.selector = SelectorProvider.provider().openSelector();
 			this.serverChannel = ServerSocketChannel.open();
+			this.serverChannel.configureBlocking(true);
 			this.serverChannel.bind(addr);
-			this.serverChannel.register(selector, SelectionKey.OP_ACCEPT);
 		} catch (IOException e) {
 			cleanup();
 			throw new IOException("Unable to start accept thread", e);
@@ -35,30 +28,13 @@ public class AcceptThread extends Thread {
 	public void run() {
 		try {
 			while (!isInterrupted()) {
-				int k;
-				try {
-					k = selector.select();
-				} catch (IOException e1) {
-					// TODO - Logging
-					break;
-				}
-				if (k <= 0) {
-					continue;
-				}
-				Set<SelectionKey> keys = selector.selectedKeys();
-				Iterator<SelectionKey> i = keys.iterator();
-				while (i.hasNext()) {
-					SelectionKey key = i.next();
-					ServerSocketChannel serverChannel = (ServerSocketChannel) key.channel();
 				SocketChannel channel;
 				try {
 					channel = serverChannel.accept();
 				} catch (IOException e) {
-						e.printStackTrace();
 					continue;
 				}
-					// add to pool
-				}
+				
 			}
 			
 		} finally {
@@ -73,12 +49,6 @@ public class AcceptThread extends Thread {
 			} catch (IOException e1) {
 			}
 		}
-		if (this.selector != null) {
-			try {
-				this.selector.close();
-			} catch (IOException ioe) {
-			}
-		}
 	}
 
 }
