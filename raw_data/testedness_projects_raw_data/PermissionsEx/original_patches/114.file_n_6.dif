diff --git a/src/main/java/ru/tehkode/permissions/backends/file/FileData.java b/src/main/java/ru/tehkode/permissions/backends/file/FileData.java
index ff6c233..e1cbbd9 100644
--- a/src/main/java/ru/tehkode/permissions/backends/file/FileData.java
+++ b/src/main/java/ru/tehkode/permissions/backends/file/FileData.java
@@ -147,37 +147,47 @@ public class FileData implements PermissionsUserData, PermissionsGroupData {
 	}
 
 	@Override
+	public String getPrefix(String worldName) {
+		return this.node.getString(formatPath(worldName, "prefix"));
+	}
+
+	@Override
+	public void setPrefix(String prefix, String worldName) {
+		this.node.set(formatPath(worldName, "prefix"), prefix);
+		save();
+	}
+
+	@Override
+	public String getSuffix(String worldName) {
+		return this.node.getString(formatPath(worldName, "suffix"));
+	}
+
+	@Override
+	public void setSuffix(String suffix, String worldName) {
+		this.node.set(formatPath(worldName, "suffix"), suffix);
+		save();
+	}
+
+	@Override
 	public String getOption(String option, String worldName) {
-		if (option.equals("prefix") || option.equals("suffix")) {
-			return this.node.getString(formatPath(worldName, option));
-		} else {
-			return this.node.getString(formatPath(worldName, "options", option));
-		}
+		return this.node.getString(formatPath(worldName, "options", option));
 	}
 
 	@Override
 	public void setOption(String option, String value, String worldName) {
-		if (option.equals("prefix") || option.equals("suffix")) {
-			this.node.set(formatPath(worldName, option), value);
-		} else {
-			this.node.set(formatPath(worldName, "options", option), value);
-		}
+		this.node.set(formatPath(worldName, "options", option), value);
 		save();
 	}
 
 	@Override
 	public Map<String, String> getOptions(String worldName) {
 		ConfigurationSection optionsSection = this.node.getConfigurationSection(formatPath(worldName, "options"));
-		Map<String, String> worldOptions = new LinkedHashMap<>();
-		worldOptions.put("prefix", this.node.getString(formatPath(worldName, "prefix")));
-		worldOptions.put("suffix", this.node.getString(formatPath(worldName, "suffix")));
 
 		if (optionsSection == null) {
 			return Collections.emptyMap();
 		}
 
-		return Collections.unmodifiableMap(collectOptions(worldOptions, optionsSection));
-
+		return collectOptions(optionsSection);
 	}
 
 	@Override
@@ -267,7 +277,9 @@ public class FileData implements PermissionsUserData, PermissionsGroupData {
 		save();
 	}
 
-	private Map<String, String> collectOptions(Map<String, String> options, ConfigurationSection section) {
+	private Map<String, String> collectOptions(ConfigurationSection section) {
+		Map<String, String> options = new LinkedHashMap<>();
+
 		for (String key : section.getKeys(true)) {
 			if (section.isConfigurationSection(key)) {
 				continue;
@@ -276,7 +288,7 @@ public class FileData implements PermissionsUserData, PermissionsGroupData {
 			options.put(key.replace(section.getRoot().options().pathSeparator(), '.'), section.getString(key));
 		}
 
-		return options;
+		return Collections.unmodifiableMap(options);
 	}
 
 	protected static String formatPath(String worldName, String node, String value) {
