diff --git a/src/main/java/ru/tehkode/permissions/bukkit/commands/UtilityCommands.java b/src/main/java/ru/tehkode/permissions/bukkit/commands/UtilityCommands.java
index 18acd31..63a4919 100644
--- a/src/main/java/ru/tehkode/permissions/bukkit/commands/UtilityCommands.java
+++ b/src/main/java/ru/tehkode/permissions/bukkit/commands/UtilityCommands.java
@@ -67,6 +67,9 @@ public class UtilityCommands extends PermissionsCommand {
 			permission = "permissions.manage.config",
 			description = "Print or set <node> [value]")
 	public void config(PermissionsEx plugin, CommandSender sender, Map<String, String> args) {
+		if (!(plugin instanceof PermissionsEx)) {
+			return;
+		}
 
 		String nodeName = args.get("node");
 		if (nodeName == null || nodeName.isEmpty()) {
@@ -87,12 +90,12 @@ public class UtilityCommands extends PermissionsCommand {
 		Object node = config.get(nodeName);
 		if (node instanceof Map) {
 			sender.sendMessage("Node \"" + nodeName + "\": ");
-			for (Map.Entry<?, ?> entry : ((Map<?, ?>) node).entrySet()) {
+			for (Map.Entry<String, Object> entry : ((Map<String, Object>) node).entrySet()) {
 				sender.sendMessage("  " + entry.getKey() + " = " + entry.getValue());
 			}
 		} else if (node instanceof List) {
 			sender.sendMessage("Node \"" + nodeName + "\": ");
-			for (Object item : ((List<?>) node)) {
+			for (String item : ((List<String>) node)) {
 				sender.sendMessage(" - " + item);
 			}
 		} else {
@@ -148,11 +151,16 @@ public class UtilityCommands extends PermissionsCommand {
 			permission = "permissions.dump",
 			description = "Import data from <backend> as specified in the configuration")
 	public void dumpData(PermissionsEx plugin, CommandSender sender, Map<String, String> args) {
+		if (!(plugin instanceof PermissionsEx)) {
+			return; // User informing is disabled
+		}
+
 		try {
 			PermissionManager mgr = plugin.getPermissionsManager();
 			PermissionBackend backend = mgr.createBackend(args.get("backend"));
 			mgr.getBackend().loadFrom(backend);
 
+
 			sender.sendMessage(ChatColor.WHITE + "[PermissionsEx] Data from \"" + args.get("backend") + "\" loaded into currently active backend");
 		} catch (RuntimeException e) {
 			if (e.getCause() instanceof ClassNotFoundException) {
@@ -176,10 +184,13 @@ public class UtilityCommands extends PermissionsCommand {
 		PermissionManager manager = plugin.getPermissionsManager();
 
 		manager.setDebug(!manager.isDebug());
+
 		String debugStatusMessage = "Debug mode " + (manager.isDebug() ? "enabled" : "disabled");
+
 		if (sender instanceof Player) {
 			sender.sendMessage(debugStatusMessage);
 		}
+
 		plugin.getLogger().warning(debugStatusMessage);
 	}
 
