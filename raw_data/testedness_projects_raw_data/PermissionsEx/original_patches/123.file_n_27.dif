diff --git a/src/main/java/ru/tehkode/permissions/bukkit/regexperms/PermissiblePEX.java b/src/main/java/ru/tehkode/permissions/bukkit/regexperms/PermissiblePEX.java
index 9708334..09ab2eb 100644
--- a/src/main/java/ru/tehkode/permissions/bukkit/regexperms/PermissiblePEX.java
+++ b/src/main/java/ru/tehkode/permissions/bukkit/regexperms/PermissiblePEX.java
@@ -50,8 +50,8 @@ import java.util.concurrent.atomic.AtomicBoolean;
  * Class should be thread-safe
  */
 public class PermissiblePEX extends PermissibleBase {
-	private static final FieldReplacer<PermissibleBase, Map> PERMISSIONS_FIELD = new FieldReplacer<>(PermissibleBase.class, "permissions", Map.class);
-	private static final FieldReplacer<PermissibleBase, List> ATTACHMENTS_FIELD = new FieldReplacer<>(PermissibleBase.class, "attachments", List.class);
+	private static final FieldReplacer<PermissibleBase, Map> PERMISSIONS_FIELD = new FieldReplacer<PermissibleBase, Map>(PermissibleBase.class, "permissions", Map.class);
+	private static final FieldReplacer<PermissibleBase, List> ATTACHMENTS_FIELD = new FieldReplacer<PermissibleBase, List>(PermissibleBase.class, "attachments", List.class);
 	private static final Method CALC_CHILD_PERMS_METH;
 
 	static {
@@ -70,7 +70,7 @@ public class PermissiblePEX extends PermissibleBase {
 	protected final Player player;
 	protected final PermissionsEx plugin;
 	private Permissible previousPermissible = null;
-	protected final Map<String, PermissionCheckResult> cache = new ConcurrentHashMap<>();
+	protected final Map<String, PermissionCheckResult> cache = new ConcurrentHashMap<String, PermissionCheckResult>();
 
 	@SuppressWarnings("unchecked")
 	public PermissiblePEX(Player player, PermissionsEx plugin) {
@@ -185,7 +185,6 @@ public class PermissiblePEX extends PermissibleBase {
 		try {
 			CALC_CHILD_PERMS_METH.invoke(this, children, invert, attachment);
 		} catch (IllegalAccessException e) {
-			// Shouldn't happen, we setAccessible earlier
 		} catch (InvocationTargetException e) {
 			throw new RuntimeException(e);
 		}
@@ -199,7 +198,7 @@ public class PermissiblePEX extends PermissibleBase {
 
 	@Override
 	public Set<PermissionAttachmentInfo> getEffectivePermissions() {
-		return new LinkedHashSet<>(permissions.values());
+		return new LinkedHashSet<PermissionAttachmentInfo>(permissions.values());
 	}
 
 	private PermissionCheckResult checkSingle(String expression, String permission, boolean value) {
@@ -242,6 +241,7 @@ public class PermissiblePEX extends PermissibleBase {
 						}
 						break;
 					}
+					break;
 				}
 			}
 			cache.put(permission, res);
