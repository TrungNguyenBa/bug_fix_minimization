diff --git a/src/main/java/ru/tehkode/permissions/backends/sql/SQLEntity.java b/src/main/java/ru/tehkode/permissions/backends/sql/SQLEntity.java
index c45221d..73f1e46 100644
--- a/src/main/java/ru/tehkode/permissions/backends/sql/SQLEntity.java
+++ b/src/main/java/ru/tehkode/permissions/backends/sql/SQLEntity.java
@@ -21,7 +21,12 @@ package ru.tehkode.permissions.backends.sql;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
-import java.util.*;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
 
 import ru.tehkode.permissions.PermissionEntity;
 import ru.tehkode.permissions.PermissionManager;
@@ -57,9 +62,9 @@ public class SQLEntity extends PermissionEntity {
 		this.fetchInheritance();
 	}
 
-	public static Set<String> getEntitiesNames(SQLConnection sql, Type type, boolean defaultOnly) {
+	public static String[] getEntitiesNames(SQLConnection sql, Type type, boolean defaultOnly) {
 		try {
-			Set<String> entities = new HashSet<String>();
+			List<String> entities = new LinkedList<String>();
 
 			ResultSet result = sql.prepAndBind("SELECT name FROM `{permissions_entity}` WHERE `type` = ? " + (defaultOnly ? " AND `default` = 1" : ""), type.ordinal()).executeQuery();
 
@@ -69,7 +74,7 @@ public class SQLEntity extends PermissionEntity {
 
 			result.close();
 
-			return Collections.unmodifiableSet(entities);
+			return entities.toArray(new String[0]);
 		} catch (SQLException e) {
 			throw new RuntimeException(e);
 		}
