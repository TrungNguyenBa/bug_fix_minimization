diff --git a/src/main/java/ru/tehkode/permissions/bukkit/commands/GroupCommands.java b/src/main/java/ru/tehkode/permissions/bukkit/commands/GroupCommands.java
index d098345..fb7a29c 100644
--- a/src/main/java/ru/tehkode/permissions/bukkit/commands/GroupCommands.java
+++ b/src/main/java/ru/tehkode/permissions/bukkit/commands/GroupCommands.java
@@ -22,7 +22,6 @@ import java.util.Arrays;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
-
 import org.bukkit.ChatColor;
 import org.bukkit.command.CommandSender;
 import org.bukkit.plugin.Plugin;
@@ -36,9 +35,9 @@ import ru.tehkode.utils.StringUtils;
 public class GroupCommands extends PermissionsCommand {
 
 	@Command(name = "pex",
-			syntax = "groups list [world]",
-			permission = "permissions.manage.groups.list",
-			description = "List all registered groups")
+	syntax = "groups list [world]",
+	permission = "permissions.manage.groups.list",
+	description = "List all registered groups")
 	public void groupsList(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		PermissionGroup[] groups = PermissionsEx.getPermissionManager().getGroups();
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -55,25 +54,25 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "groups",
-			permission = "permissions.manage.groups.list",
-			description = "List all registered groups (alias)")
+	syntax = "groups",
+	permission = "permissions.manage.groups.list",
+	description = "List all registered groups (alias)")
 	public void groupsListAlias(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		this.groupsList(plugin, sender, args);
 	}
 
 	@Command(name = "pex",
-			syntax = "group",
-			permission = "permissions.manage.groups.list",
-			description = "List all registered groups (alias)")
+	syntax = "group",
+	permission = "permissions.manage.groups.list",
+	description = "List all registered groups (alias)")
 	public void groupsListAnotherAlias(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		this.groupsList(plugin, sender, args);
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> weight [weight]",
-			permission = "permissions.manage.groups.weight.<group>",
-			description = "Print or set group weight")
+	syntax = "group <group> weight [weight]",
+	permission = "permissions.manage.groups.weight.<group>",
+	description = "Print or set group weight")
 	public void groupPrintSetWeight(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 
@@ -97,9 +96,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> toggle debug",
-			permission = "permissions.manage.groups.debug.<group>",
-			description = "Toggle debug mode for group")
+	syntax = "group <group> toggle debug",
+	permission = "permissions.manage.groups.debug.<group>",
+	description = "Toggle debug mode for group")
 	public void groupToggleDebug(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 
@@ -116,9 +115,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> prefix [newprefix] [world]",
-			permission = "permissions.manage.groups.prefix.<group>",
-			description = "Get or set <group> prefix.")
+	syntax = "group <group> prefix [newprefix] [world]",
+	permission = "permissions.manage.groups.prefix.<group>",
+	description = "Get or set <group> prefix.")
 	public void groupPrefix(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -138,9 +137,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> suffix [newsuffix] [world]",
-			permission = "permissions.manage.groups.suffix.<group>",
-			description = "Get or set <group> suffix")
+	syntax = "group <group> suffix [newsuffix] [world]",
+	permission = "permissions.manage.groups.suffix.<group>",
+	description = "Get or set <group> suffix")
 	public void groupSuffix(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -160,9 +159,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> create [parents]",
-			permission = "permissions.manage.groups.create.<group>",
-			description = "Create <group> and/or set [parents]")
+	syntax = "group <group> create [parents]",
+	permission = "permissions.manage.groups.create.<group>",
+	description = "Create <group> and/or set [parents]")
 	public void groupCreate(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		PermissionGroup group = PermissionsEx.getPermissionManager().getGroup(args.get("group"));
 
@@ -193,9 +192,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> delete",
-			permission = "permissions.manage.groups.remove.<group>",
-			description = "Remove <group>")
+	syntax = "group <group> delete",
+	permission = "permissions.manage.groups.remove.<group>",
+	description = "Remove <group>")
 	public void groupDelete(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 
@@ -217,17 +216,17 @@ public class GroupCommands extends PermissionsCommand {
 	 * Group inheritance
 	 */
 	@Command(name = "pex",
-			syntax = "group <group> parents [world]",
-			permission = "permissions.manage.groups.inheritance.<group>",
-			description = "List parents for <group> (alias)")
+	syntax = "group <group> parents [world]",
+	permission = "permissions.manage.groups.inheritance.<group>",
+	description = "List parents for <group> (alias)")
 	public void groupListParentsAlias(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		this.groupListParents(plugin, sender, args);
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> parents list [world]",
-			permission = "permissions.manage.groups.inheritance.<group>",
-			description = "List parents for <group>")
+	syntax = "group <group> parents list [world]",
+	permission = "permissions.manage.groups.inheritance.<group>",
+	description = "List parents for <group>")
 	public void groupListParents(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -253,9 +252,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> parents set <parents> [world]",
-			permission = "permissions.manage.groups.inheritance.<group>",
-			description = "Set parent(s) for <group> (single or comma-separated list)")
+	syntax = "group <group> parents set <parents> [world]",
+	permission = "permissions.manage.groups.inheritance.<group>",
+	description = "Set parent(s) for <group> (single or comma-separated list)")
 	public void groupSetParents(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -288,9 +287,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> parents add <parents> [world]",
-			permission = "permissions.manage.groups.inheritance.<group>",
-			description = "Set parent(s) for <group> (single or comma-separated list)")
+	syntax = "group <group> parents add <parents> [world]",
+	permission = "permissions.manage.groups.inheritance.<group>",
+	description = "Set parent(s) for <group> (single or comma-separated list)")
 	public void groupAddParents(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -323,9 +322,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> parents remove <parents> [world]",
-			permission = "permissions.manage.groups.inheritance.<group>",
-			description = "Set parent(s) for <group> (single or comma-separated list)")
+	syntax = "group <group> parents remove <parents> [world]",
+	permission = "permissions.manage.groups.inheritance.<group>",
+	description = "Set parent(s) for <group> (single or comma-separated list)")
 	public void groupRemoveParents(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -359,17 +358,17 @@ public class GroupCommands extends PermissionsCommand {
 	 * Group permissions
 	 */
 	@Command(name = "pex",
-			syntax = "group <group>",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "List all <group> permissions (alias)")
+	syntax = "group <group>",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "List all <group> permissions (alias)")
 	public void groupListAliasPermissions(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		this.groupListPermissions(plugin, sender, args);
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> list [world]",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "List all <group> permissions in [world]")
+	syntax = "group <group> list [world]",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "List all <group> permissions in [world]")
 	public void groupListPermissions(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -403,9 +402,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> add <permission> [world]",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "Add <permission> to <group> in [world]")
+	syntax = "group <group> add <permission> [world]",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "Add <permission> to <group> in [world]")
 	public void groupAddPermission(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -425,9 +424,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> set <option> <value> [world]",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "Set <option> <value> for <group> in [world]")
+	syntax = "group <group> set <option> <value> [world]",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "Set <option> <value> for <group> in [world]")
 	public void groupSetOption(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -451,9 +450,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> remove <permission> [world]",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "Remove <permission> from <group> in [world]")
+	syntax = "group <group> remove <permission> [world]",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "Remove <permission> from <group> in [world]")
 	public void groupRemovePermission(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -476,9 +475,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> swap <permission> <targetPermission> [world]",
-			permission = "permissions.manage.groups.permissions.<group>",
-			description = "Swap <permission> and <targetPermission> in permission list. Could be number or permission itself")
+	syntax = "group <group> swap <permission> <targetPermission> [world]",
+	permission = "permissions.manage.groups.permissions.<group>",
+	description = "Swap <permission> and <targetPermission> in permission list. Could be number or permission itself")
 	public void userSwapPermission(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -511,9 +510,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> timed add <permission> [lifetime] [world]",
-			permission = "permissions.manage.groups.permissions.timed.<group>",
-			description = "Add timed <permission> to <group> with [lifetime] in [world]")
+	syntax = "group <group> timed add <permission> [lifetime] [world]",
+	permission = "permissions.manage.groups.permissions.timed.<group>",
+	description = "Add timed <permission> to <group> with [lifetime] in [world]")
 	public void groupAddTimedPermission(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -521,7 +520,7 @@ public class GroupCommands extends PermissionsCommand {
 		int lifetime = 0;
 
 		if (args.containsKey("lifetime")) {
-			lifetime = DateUtils.parseInterval(args.get("lifetime"));
+            lifetime = DateUtils.parseInterval(args.get("lifetime"));
 		}
 
 		PermissionGroup group = PermissionsEx.getPermissionManager().getGroup(groupName);
@@ -541,9 +540,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> timed remove <permission> [world]",
-			permission = "permissions.manage.groups.permissions.timed.<group>",
-			description = "Remove timed <permissions> for <group> in [world]")
+	syntax = "group <group> timed remove <permission> [world]",
+	permission = "permissions.manage.groups.permissions.timed.<group>",
+	description = "Remove timed <permissions> for <group> in [world]")
 	public void groupRemoveTimedPermission(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -565,9 +564,9 @@ public class GroupCommands extends PermissionsCommand {
 	 * Group users management
 	 */
 	@Command(name = "pex",
-			syntax = "group <group> users",
-			permission = "permissions.manage.membership.<group>",
-			description = "List all users in <group>")
+	syntax = "group <group> users",
+	permission = "permissions.manage.membership.<group>",
+	description = "List all users in <group>")
 	public void groupUsersList(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 
@@ -585,9 +584,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> user add <user> [world]",
-			permission = "permissions.manage.membership.<group>",
-			description = "Add <user> (single or comma-separated list) to <group>")
+	syntax = "group <group> user add <user> [world]",
+	permission = "permissions.manage.membership.<group>",
+	description = "Add <user> (single or comma-separated list) to <group>")
 	public void groupUsersAdd(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -617,9 +616,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "group <group> user remove <user> [world]",
-			permission = "permissions.manage.membership.<group>",
-			description = "Add <user> (single or comma-separated list) to <group>")
+	syntax = "group <group> user remove <user> [world]",
+	permission = "permissions.manage.membership.<group>",
+	description = "Add <user> (single or comma-separated list) to <group>")
 	public void groupUsersRemove(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
@@ -650,9 +649,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "default group [world]",
-			permission = "permissions.manage.groups.inheritance",
-			description = "Print default group for specified world")
+	syntax = "default group [world]",
+	permission = "permissions.manage.groups.inheritance",
+	description = "Print default group for specified world")
 	public void groupDefaultCheck(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String worldName = this.autoCompleteWorldName(args.get("world"));
 
@@ -662,9 +661,9 @@ public class GroupCommands extends PermissionsCommand {
 	}
 
 	@Command(name = "pex",
-			syntax = "set default group <group> [world]",
-			permission = "permissions.manage.groups.inheritance",
-			description = "Set default group for specified world")
+	syntax = "set default group <group> [world]",
+	permission = "permissions.manage.groups.inheritance",
+	description = "Set default group for specified world")
 	public void groupDefaultSet(Plugin plugin, CommandSender sender, Map<String, String> args) {
 		String groupName = this.autoCompleteGroupName(args.get("group"));
 		String worldName = this.autoCompleteWorldName(args.get("world"));
