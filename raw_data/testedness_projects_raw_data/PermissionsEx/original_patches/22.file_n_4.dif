diff --git a/src/main/java/ninja/leaping/permissionsex/data/SubjectCache.java b/src/main/java/ninja/leaping/permissionsex/data/SubjectCache.java
index 6c49219..572c399 100644
--- a/src/main/java/ninja/leaping/permissionsex/data/SubjectCache.java
+++ b/src/main/java/ninja/leaping/permissionsex/data/SubjectCache.java
@@ -24,14 +24,12 @@ import com.google.common.util.concurrent.ListenableFuture;
 import ninja.leaping.permissionsex.backends.DataStore;
 
 import java.util.Map;
-import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutionException;
 
 public class SubjectCache {
     private final String type;
     private final DataStore dataStore;
     private final LoadingCache<String, ImmutableOptionSubjectData> cache;
-    private final Map<String, Caching> cacheHolders = new ConcurrentHashMap<>();
     private final CacheListenerHolder<String> listeners = new CacheListenerHolder<>();
 
     public SubjectCache(final String type, final DataStore dataStore) {
@@ -67,8 +65,6 @@ public class SubjectCache {
         Preconditions.checkNotNull(identifier, "identifier");
 
         cache.invalidate(identifier);
-        cacheHolders.remove(identifier);
-        listeners.removeAll(identifier);
     }
 
     public void cacheAll() {
@@ -91,15 +87,13 @@ public class SubjectCache {
     }
 
     private Caching clearListener(final String name) {
-        Caching ret = new Caching() {
+        return new Caching() {
             @Override
             public void clearCache(ImmutableOptionSubjectData newData) {
                 cache.put(name, newData);
                 listeners.call(name, newData);
             }
         };
-        cacheHolders.put(name, ret);
-        return ret;
     }
 
     public void addListener(String identifier, Caching listener) {
