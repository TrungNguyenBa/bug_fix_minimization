diff --git a/src/main/java/ninja/leaping/permissionsex/sponge/PEXSubject.java b/src/main/java/ninja/leaping/permissionsex/sponge/PEXSubject.java
index 6f574a6..ede187f 100644
--- a/src/main/java/ninja/leaping/permissionsex/sponge/PEXSubject.java
+++ b/src/main/java/ninja/leaping/permissionsex/sponge/PEXSubject.java
@@ -21,8 +21,6 @@ import com.google.common.base.Optional;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
 import ninja.leaping.permissionsex.data.CalculatedSubject;
-import ninja.leaping.permissionsex.data.SubjectCache;
-import ninja.leaping.permissionsex.exception.PermissionsLoadingException;
 import ninja.leaping.permissionsex.sponge.option.OptionSubject;
 import org.spongepowered.api.service.permission.Subject;
 import org.spongepowered.api.service.permission.context.Context;
@@ -36,7 +34,6 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.ExecutionException;
 
 import static ninja.leaping.permissionsex.sponge.PEXOptionSubjectData.parSet;
 
@@ -47,21 +44,15 @@ public class PEXSubject implements OptionSubject {
     private final PEXSubjectCollection collection;
     private final PEXOptionSubjectData data;
     private final PEXOptionSubjectData transientData;
-    private volatile CalculatedSubject baked;
+    private final CalculatedSubject baked;
     private final String identifier;
 
-    public PEXSubject(String identifier, PEXSubjectCollection collection) throws ExecutionException, PermissionsLoadingException {
+    public PEXSubject(String identifier, CalculatedSubject baked, PEXOptionSubjectData data, PEXOptionSubjectData transientData, PEXSubjectCollection collection) {
         this.identifier = identifier;
+        this.data = data;
+        this.transientData = transientData;
+        this.baked = baked;
         this.collection = collection;
-        this.baked = collection.getCalculatedSubject(identifier);
-        this.data = new PEXOptionSubjectData(collection.getCache(), identifier, collection.getPlugin());
-        this.transientData = new PEXOptionSubjectData(collection.getTransientCache(), identifier, collection.getPlugin());
-    }
-
-    void update(CalculatedSubject subject, SubjectCache cache, SubjectCache transientCache) throws ExecutionException {
-        this.baked = subject;
-        this.data.updateCache(cache);
-        this.transientData.updateCache(transientCache);
     }
 
     @Override
