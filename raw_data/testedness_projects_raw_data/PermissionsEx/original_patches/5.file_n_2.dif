diff --git a/permissionsex-bukkit/src/main/java/ninja/leaping/permissionsex/bukkit/PEXPermissible.java b/permissionsex-bukkit/src/main/java/ninja/leaping/permissionsex/bukkit/PEXPermissible.java
index ee3023b..36fc14c 100644
--- a/permissionsex-bukkit/src/main/java/ninja/leaping/permissionsex/bukkit/PEXPermissible.java
+++ b/permissionsex-bukkit/src/main/java/ninja/leaping/permissionsex/bukkit/PEXPermissible.java
@@ -25,7 +25,7 @@ import com.google.common.util.concurrent.FutureCallback;
 import com.google.common.util.concurrent.Futures;
 import ninja.leaping.permissionsex.PermissionsEx;
 import ninja.leaping.permissionsex.data.CalculatedSubject;
-import ninja.leaping.permissionsex.data.ImmutableSubjectData;
+import ninja.leaping.permissionsex.data.ImmutableOptionSubjectData;
 import ninja.leaping.permissionsex.data.SubjectCache;
 import ninja.leaping.permissionsex.exception.PermissionsLoadingException;
 import ninja.leaping.permissionsex.util.NodeTree;
@@ -144,15 +144,15 @@ public class PEXPermissible extends PermissibleBase {
     @Override
     public PermissionAttachment addAttachment(Plugin plugin) {
         final PEXPermissionAttachment attach = new PEXPermissionAttachment(plugin, player, this);
-        Futures.addCallback(this.cache.doUpdate(player.getUniqueId().toString(), new Function<ImmutableSubjectData, ImmutableSubjectData>() {
+        Futures.addCallback(this.cache.doUpdate(player.getUniqueId().toString(), new Function<ImmutableOptionSubjectData, ImmutableOptionSubjectData>() {
             @Nullable
             @Override
-            public ImmutableSubjectData apply(@Nullable ImmutableSubjectData input) {
+            public ImmutableOptionSubjectData apply(@Nullable ImmutableOptionSubjectData input) {
                 return input.addParent(PermissionsExPlugin.GLOBAL_CONTEXT, PEXPermissionAttachment.ATTACHMENT_TYPE, attach.getIdentifier());
             }
-        }), new FutureCallback<ImmutableSubjectData>() {
+        }), new FutureCallback<ImmutableOptionSubjectData>() {
             @Override
-            public void onSuccess(@Nullable ImmutableSubjectData result) {
+            public void onSuccess(@Nullable ImmutableOptionSubjectData result) {
                 PEXPermissible.this.attachments.add(attach);
             }
 
@@ -165,15 +165,15 @@ public class PEXPermissible extends PermissibleBase {
     }
 
     public boolean removeAttachmentInternal(final PEXPermissionAttachment attach) {
-        Futures.addCallback(this.cache.doUpdate(player.getUniqueId().toString(), new Function<ImmutableSubjectData, ImmutableSubjectData>() {
+        Futures.addCallback(this.cache.doUpdate(player.getUniqueId().toString(), new Function<ImmutableOptionSubjectData, ImmutableOptionSubjectData>() {
             @Nullable
             @Override
-            public ImmutableSubjectData apply(@Nullable ImmutableSubjectData input) {
+            public ImmutableOptionSubjectData apply(@Nullable ImmutableOptionSubjectData input) {
                 return input.removeParent(PermissionsExPlugin.GLOBAL_CONTEXT, PEXPermissionAttachment.ATTACHMENT_TYPE, attach.getIdentifier());
             }
-        }), new FutureCallback<ImmutableSubjectData>() {
+        }), new FutureCallback<ImmutableOptionSubjectData>() {
             @Override
-            public void onSuccess(@Nullable ImmutableSubjectData result) {
+            public void onSuccess(@Nullable ImmutableOptionSubjectData result) {
                 PermissionRemovedExecutor exec = attach.getRemovalCallback();
                 if (exec != null) {
                     exec.attachmentRemoved(attach);
