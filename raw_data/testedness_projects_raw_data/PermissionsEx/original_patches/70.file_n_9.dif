diff --git a/src/main/java/ru/tehkode/permissions/data/MatcherGroup.java b/src/main/java/ru/tehkode/permissions/data/MatcherGroup.java
index b54bccf..dd6512f 100644
--- a/src/main/java/ru/tehkode/permissions/data/MatcherGroup.java
+++ b/src/main/java/ru/tehkode/permissions/data/MatcherGroup.java
@@ -272,8 +272,12 @@ public abstract class MatcherGroup implements Comparable<MatcherGroup> {
 	 * @param context The context to verify
 	 * @return whether or not a match is performed.
 	 */
-	public boolean matches(Context context) {
+	public boolean matches(Context context, Qualifier ignoreMismatches) {
 		int matches = 0;
+		if (ignoreMismatches != null) {
+			matches |= ignoreMismatches.getFlag();
+			matches |= ignoreMismatches.getInheritanceQualifier().getFlag();
+		}
 		for (Map.Entry<Qualifier, String> ent : getQualifiers().entries()) {
 			if ((matches & ~ent.getKey().getFlag()) != 0) { // We have already matched a qualifier of this type, don't need to check again
 				continue;
@@ -282,7 +286,8 @@ public abstract class MatcherGroup implements Comparable<MatcherGroup> {
 				matches |= ent.getKey().getFlag();
 			}
 		}
-		return matches == getQualifierTypeMask(); // same flags are masked as were expected to be matched
+		final int typeMask = getQualifierTypeMask();
+		return (matches | ~typeMask) == 0xFFFFFFFF; // same flags are masked as were expected to be matched
 	}
 
 	/**
