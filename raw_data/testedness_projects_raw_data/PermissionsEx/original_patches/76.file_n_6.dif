diff --git a/src/main/java/ru/tehkode/permissions/backends/file/FileMatcherList.java b/src/main/java/ru/tehkode/permissions/backends/file/FileMatcherList.java
index d2d74fd..3672dfb 100644
--- a/src/main/java/ru/tehkode/permissions/backends/file/FileMatcherList.java
+++ b/src/main/java/ru/tehkode/permissions/backends/file/FileMatcherList.java
@@ -16,7 +16,6 @@ import java.util.HashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.Executor;
 import java.util.concurrent.atomic.AtomicReference;
 
 /**
@@ -25,19 +24,16 @@ import java.util.concurrent.atomic.AtomicReference;
 public final class FileMatcherList extends MemoryMatcherList<FileMatcherGroup, List<Node>> {
 	private List<String> comments;
 	private final FileConfig config;
-	private final Executor executor;
 
-	public FileMatcherList(FileConfig config, Executor executor) {
+	public FileMatcherList(FileConfig config) {
 		comments = Collections.emptyList();
 		this.config = config;
-		this.executor = executor;
 		// Empty list
 	}
 
-	public FileMatcherList(List<Node> nodes, FileConfig config, Executor executor) throws IOException {
+	public FileMatcherList(List<Node> nodes, FileConfig config) throws IOException {
 		super(nodes);
 		this.config = config;
-		this.executor = executor;
 	}
 
 	// -- Load/save
@@ -180,10 +176,6 @@ public final class FileMatcherList extends MemoryMatcherList<FileMatcherGroup, L
 		}
 	}
 
-	Executor getExecutor() {
-		return this.executor;
-	}
-
 	@Override
 	protected FileMatcherGroup newGroup(AtomicReference<FileMatcherGroup> ptr, String type, Map<String, String> entries, Multimap<Qualifier, String> qualifiers) {
 		return new FileMatcherGroup(type, ptr, this, qualifiers, entries, null, null);
