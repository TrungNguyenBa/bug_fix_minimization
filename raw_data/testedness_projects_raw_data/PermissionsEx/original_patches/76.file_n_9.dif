diff --git a/src/main/java/ru/tehkode/permissions/backends/memory/impl/MemoryMatcherGroupImpl.java b/src/main/java/ru/tehkode/permissions/backends/memory/impl/MemoryMatcherGroupImpl.java
index 8e8845c..a693748 100644
--- a/src/main/java/ru/tehkode/permissions/backends/memory/impl/MemoryMatcherGroupImpl.java
+++ b/src/main/java/ru/tehkode/permissions/backends/memory/impl/MemoryMatcherGroupImpl.java
@@ -2,6 +2,7 @@ package ru.tehkode.permissions.backends.memory.impl;
 
 import com.google.common.collect.Multimap;
 import ru.tehkode.permissions.backends.memory.MemoryMatcherGroup;
+import ru.tehkode.permissions.backends.memory.MemoryMatcherList;
 import ru.tehkode.permissions.data.Qualifier;
 
 import java.util.List;
@@ -11,12 +12,12 @@ import java.util.concurrent.atomic.AtomicReference;
 /**
  * Implementation of the abstract memory matcher group used for MemoryBackend
  */
-public class MemoryMatcherGroupImpl extends MemoryMatcherGroup<MemoryMatcherGroupImpl, MemoryMatcherListImpl> {
-	public MemoryMatcherGroupImpl(String name, AtomicReference<MemoryMatcherGroupImpl> selfRef, MemoryMatcherListImpl listRef, Multimap<Qualifier, String> qualifiers, Map<String, String> entries) {
+public class MemoryMatcherGroupImpl extends MemoryMatcherGroup<MemoryMatcherGroupImpl> {
+	public MemoryMatcherGroupImpl(String name, AtomicReference<MemoryMatcherGroupImpl> selfRef, MemoryMatcherList<MemoryMatcherGroupImpl, ?> listRef, Multimap<Qualifier, String> qualifiers, Map<String, String> entries) {
 		super(name, selfRef, listRef, qualifiers, entries);
 	}
 
-	public MemoryMatcherGroupImpl(String name, AtomicReference<MemoryMatcherGroupImpl> selfRef, MemoryMatcherListImpl listRef, Multimap<Qualifier, String> qualifiers, List<String> entriesList) {
+	public MemoryMatcherGroupImpl(String name, AtomicReference<MemoryMatcherGroupImpl> selfRef, MemoryMatcherList<MemoryMatcherGroupImpl, ?> listRef, Multimap<Qualifier, String> qualifiers, List<String> entriesList) {
 		super(name, selfRef, listRef, qualifiers, entriesList);
 	}
 
