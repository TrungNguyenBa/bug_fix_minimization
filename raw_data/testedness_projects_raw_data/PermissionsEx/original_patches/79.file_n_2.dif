diff --git a/src/main/java/ru/tehkode/permissions/PermissionManager.java b/src/main/java/ru/tehkode/permissions/PermissionManager.java
index 56e4b8a..f079fe5 100644
--- a/src/main/java/ru/tehkode/permissions/PermissionManager.java
+++ b/src/main/java/ru/tehkode/permissions/PermissionManager.java
@@ -36,8 +36,6 @@ import ru.tehkode.permissions.events.PermissionSystemEvent;
 import ru.tehkode.permissions.exceptions.PermissionBackendException;
 
 import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ConcurrentMap;
 import java.util.logging.Logger;
 
 /**
@@ -46,9 +44,9 @@ import java.util.logging.Logger;
 public class PermissionManager {
 
 	public final static int TRANSIENT_PERMISSION = 0;
-	protected ConcurrentMap<String, PermissionUser> users = new ConcurrentHashMap<>();
-	protected ConcurrentMap<String, PermissionGroup> groups = new ConcurrentHashMap<>();
-	protected Map<String, PermissionGroup> defaultGroups = new ConcurrentHashMap<>();
+	protected Map<String, PermissionUser> users = new HashMap<>();
+	protected Map<String, PermissionGroup> groups = new HashMap<>();
+	protected Map<String, PermissionGroup> defaultGroups = new HashMap<>();
 	protected PermissionBackend backend = null;
 	private final PermissionsEx plugin;
 	protected Timer timer;
@@ -327,10 +325,7 @@ public class PermissionManager {
 			user = new PermissionUser(identifier, data, this);
 			user.initialize();
 			if (store) {
-				PermissionUser newUser = this.users.put(identifier, user);
-				if (newUser != null) {
-					user = newUser;
-				}
+				this.users.put(identifier, user);
 			}
 		} else {
 			throw new IllegalStateException("User " + identifier + " is null");
@@ -493,10 +488,7 @@ public class PermissionManager {
 			PermissionsGroupData data = this.backend.getGroupData(groupname);
 			if (data != null) {
 				group = new PermissionGroup(groupname, data, this);
-				PermissionGroup oldGroup;
-				if ((oldGroup = this.groups.putIfAbsent(groupname.toLowerCase(), group)) != null) {
-					return oldGroup;
-				}
+				this.groups.put(groupname.toLowerCase(), group);
 				try {
 					group.initialize();
 				} catch (Exception e) {
@@ -763,6 +755,7 @@ public class PermissionManager {
 	protected void clearCache() {
 		this.users.clear();
 		this.groups.clear();
+		this.defaultGroups.clear();
 
 		// Close old timed Permission Timer
 		this.initTimer();
