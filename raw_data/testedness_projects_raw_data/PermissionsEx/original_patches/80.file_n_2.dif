diff --git a/src/main/java/ru/tehkode/permissions/PermissionEntity.java b/src/main/java/ru/tehkode/permissions/PermissionEntity.java
index 7a8bdf4..8dd3ebb 100644
--- a/src/main/java/ru/tehkode/permissions/PermissionEntity.java
+++ b/src/main/java/ru/tehkode/permissions/PermissionEntity.java
@@ -222,7 +222,7 @@ public abstract class PermissionEntity {
 	 * @return Array of permission expressions
 	 */
 	public List<String> getPermissions(String world) {
-		return Collections.unmodifiableList(getPermissionsInternal(world));
+		return Collections.unmodifiableList(getPermissionsInternal(world, false));
 	}
 
 	/**
@@ -255,14 +255,15 @@ public abstract class PermissionEntity {
 		return Collections.unmodifiableMap(ret);
 	}
 
-	protected List<String> getPermissionsInternal(String worldName) {
+	protected List<String> getPermissionsInternal(String worldName, final boolean filterNonInheritable) {
 		final List<String> ret = new ArrayList<>();
+		// TODO: Handle non-inheritable permissions correctly
 
 		new HierarchyTraverser<Void>(this, worldName) {
 			@Override
 			protected Void fetchLocal(PermissionEntity entity, String world) {
 				for (String perm : entity.getOwnPermissions(world)) {
-					if (perm.startsWith(NON_INHERITABLE_PREFIX) && !PermissionEntity.this.getParents(world).contains(entity)) {
+					if (filterNonInheritable && entity != PermissionEntity.this && perm.startsWith(NON_INHERITABLE_PREFIX)) {
 						continue;
 					}
 
@@ -271,7 +272,7 @@ public abstract class PermissionEntity {
 				}
 
 				for (String perm : entity.getTimedPermissions(world)) {
-					if (perm.startsWith(NON_INHERITABLE_PREFIX) && !PermissionEntity.this.getParents(world).contains(entity)) {
+					if (filterNonInheritable && entity != PermissionEntity.this && perm.startsWith(NON_INHERITABLE_PREFIX)) {
 						continue;
 					}
 
