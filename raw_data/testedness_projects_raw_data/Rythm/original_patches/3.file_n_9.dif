diff --git a/sample/src/main/java/com/actinarium/rhythm/sample/RhythmSampleApplication.java b/sample/src/main/java/com/actinarium/rhythm/sample/RhythmSampleApplication.java
index e5916f6..6595a40 100644
--- a/sample/src/main/java/com/actinarium/rhythm/sample/RhythmSampleApplication.java
+++ b/sample/src/main/java/com/actinarium/rhythm/sample/RhythmSampleApplication.java
@@ -3,7 +3,7 @@ package com.actinarium.rhythm.sample;
 import android.app.Application;
 import android.view.Gravity;
 import com.actinarium.rhythm.RhythmConfig;
-import com.actinarium.rhythm.RhythmGroup;
+import com.actinarium.rhythm.RhythmControl;
 import com.actinarium.rhythm.RhythmDrawable;
 import com.actinarium.rhythm.RhythmManager;
 
@@ -25,17 +25,16 @@ public class RhythmSampleApplication extends Application implements RhythmManage
         final float density = getResources().getDisplayMetrics().density;
 
         mRhythmManager.newControl("Main control")
-                .addConfig(RhythmConfig.make8DipGrid("8dp grid", density))
-                .addConfig(RhythmConfig.makeBaselineGrid("Baseline grid", density))
-                .addConfig(RhythmConfig.make8DipAndBaselineGrid("Baseline grid", density));
+                .addConfig(RhythmConfig.make8DipGrid("8dp grid", density, 0x80FF4444))
+                .addConfig(RhythmConfig.makeBaselineGrid("Baseline grid", density, 0x80228888))
+                .addConfig(RhythmConfig.make8DipAndBaselineGrid("Baseline grid", density, 0x80FF4444, 0x80228888));
 
-        final RhythmGroup secondaryControl = mRhythmManager.newControl("Secondary control");
-        final int gridStep8dp = (int) (8 * density);
+        final RhythmControl secondaryControl = mRhythmManager.newControl("Secondary control");
         new RhythmConfig("Test config")
-                .addLayer(new RhythmDrawable.GridLines(Gravity.LEFT, gridStep8dp).setMargins(true, 0, 0, 60, 0))
-                .addLayer(new RhythmDrawable.GridLines(Gravity.RIGHT, gridStep8dp).setMargins(true, 60, 0, 0, 0))
-                .addLayer(new RhythmDrawable.GridLines(Gravity.TOP, gridStep8dp).setMargins(true, 0, 0, 0, 60))
-                .addLayer(new RhythmDrawable.GridLines(Gravity.BOTTOM, gridStep8dp).setMargins(true, 0, 60, 0, 0))
+                .addLayer(new RhythmDrawable.GridLines(Gravity.LEFT, (int) (8 * density), 0x80FF4444).setMargins(true, 0, 0, 60, 0))
+                .addLayer(new RhythmDrawable.GridLines(Gravity.RIGHT, (int) (8 * density), 0x80FF4444).setMargins(true, 60, 0, 0, 0))
+                .addLayer(new RhythmDrawable.GridLines(Gravity.TOP, (int) (8 * density), 0x80FF4444).setMargins(true, 0, 0, 0, 60))
+                .addLayer(new RhythmDrawable.GridLines(Gravity.BOTTOM, (int) (8 * density), 0x80FF4444).setMargins(true, 0, 60, 0, 0))
                 .addToControl(secondaryControl);
 
         mRhythmManager.showNotification(-2);
