diff --git a/src/main/java/com/lonepulse/zombielink/core/response/parser/AbstractResponseParser.java b/src/main/java/com/lonepulse/zombielink/core/response/parser/AbstractResponseParser.java
index 6a60ebe..4377d7e 100644
--- a/src/main/java/com/lonepulse/zombielink/core/response/parser/AbstractResponseParser.java
+++ b/src/main/java/com/lonepulse/zombielink/core/response/parser/AbstractResponseParser.java
@@ -77,27 +77,42 @@ import com.lonepulse.zombielink.util.AnnotationExtractor;
  * @author <a href="mailto:lahiru@lonepulse.com">Lahiru Sahan Jayasinghe</a>
  */
 public abstract class AbstractResponseParser<T> implements ResponseParser<T> {
+	
 
+	/**
+	 * <p>The {@link Class} of the desired request return type.</p>
+	 * <br><br> 
+	 * @since 1.1.5
+	 */
+	protected Class<? extends Object> requestReturnType = null; 
+	
+	
+	/**
+	 * <p>Accessor for {@link #requestReturnType}.
+	 * 
+	 * @return {@link #requestReturnType}
+	 * <br><br>
+	 * @since 1.1.5
+	 */
+	protected Class<? extends Object> getRequestReturnType() {
 
+		return requestReturnType;
+	}
+	
 	/**
 	 * {@inheritDoc}
 	 */
 	@Override
 	public T parse(HttpResponse httpResponse, ProxyInvocationConfiguration config) {
 		
-		Class<?> requestReturnType = config.getRequest().getReturnType();
-		
-		if(requestReturnType.equals(Void.TYPE) || httpResponse.getEntity() == null) {
-			
-			return null; //a response body is not expected
-		}
+		this.requestReturnType = config.getRequest().getReturnType();
 		
 		throwIfNotAssignable(requestReturnType);
 		
 		try {
 			
 			processHeaders(httpResponse, config);
-			return processResponse(httpResponse, config);
+			return processResponse(httpResponse);
 		}
 		catch(Exception e) {
 		
@@ -177,10 +192,6 @@ public abstract class AbstractResponseParser<T> implements ResponseParser<T> {
 	 * 
 	 * @param httpResponse
 	 * 				the {@link HttpResponse} from which the content is extracted
-	 * 
-	 * @param config
-	 * 				the {@link ProxyInvocationConfiguration} which supplies all information 
-	 * 				regarding the request and it's invocation
      * <br><br>
 	 * @return the entity which is created after parsing the output
 	 * <br><br>
@@ -189,8 +200,7 @@ public abstract class AbstractResponseParser<T> implements ResponseParser<T> {
 	 * <br><br>
 	 * @since 1.1.4
 	 */
-	protected abstract T processResponse(HttpResponse httpResponse, ProxyInvocationConfiguration config) 
-	throws Exception;
+	protected abstract T processResponse(HttpResponse httpResponse) throws Exception;
 	
 	/**
 	 * <p>Allows any {@link ResponseParser} extension to determine the type 
