diff --git a/src/main/java/com/lonepulse/zombielink/core/request/AbstractRequestProcessor.java b/src/main/java/com/lonepulse/zombielink/core/request/AbstractRequestProcessor.java
index e316e5a..c3988af 100644
--- a/src/main/java/com/lonepulse/zombielink/core/request/AbstractRequestProcessor.java
+++ b/src/main/java/com/lonepulse/zombielink/core/request/AbstractRequestProcessor.java
@@ -21,27 +21,14 @@ package com.lonepulse.zombielink.core.request;
  */
 
 
-import org.apache.http.HttpRequest;
-import org.apache.http.client.methods.HttpGet;
-import org.apache.http.client.methods.HttpPut;
 import org.apache.http.client.methods.HttpRequestBase;
 
-import com.lonepulse.zombielink.core.processor.Processor;
 import com.lonepulse.zombielink.core.processor.ProxyInvocationConfiguration;
 
 /**
- * <p>This is an abstract implementation of {@link Processor} which specifies a template for processing the 
- * <i>data</i> and <i>metadata</i> on a proxy endpoint <b>request invocation</b>. It includes an implementation 
- * of {@link Processor#run(Object...)} that checks the preconditions for executing 
- * {@link #process(HttpRequestBase, ProxyInvocationConfiguration)}.</p>
- * 
- * <p>All implementations must be aware of the {@link ProxyInvocationConfiguration} which can be used to discover 
- * information about the endpoint and the request declaration. This information can be queried based on the 
- * <i>targeting criteria</i> for this request processor and the resulting information should be used to <i>build 
- * upon</i> the given {@link HttpRequest}.</p>
- * 
- * <p>It is advised to adhere to <a href="www.w3.org/Protocols/rfc2616/rfc2616.htmlâ€Ž">RFC 2616</a> of <b>HTTP 
- * 1.1</b> when designing an implementation.</p>
+ * <p>An abstract implementation of {@link RequestProcessor} which provides and implementation of 
+ * {@link RequestProcessor#run(Object...)} that checks the preconditions for executing 
+ * {@link #process(HttpRequestBase, ProxyInvocationConfiguration)}.
  * 
  * @version 1.1.0
  * <br><br>
@@ -49,7 +36,7 @@ import com.lonepulse.zombielink.core.processor.ProxyInvocationConfiguration;
  * <br><br>
  * @author <a href="mailto:sahan@lonepulse.com">Lahiru Sahan Jayasinghe</a>
  */
-public abstract class AbstractRequestProcessor implements Processor<Void, RequestProcessorException> {
+public abstract class AbstractRequestProcessor implements RequestProcessor {
 
 	
 	/**
@@ -62,7 +49,7 @@ public abstract class AbstractRequestProcessor implements Processor<Void, Reques
 	 * 
 	 * <p>Delegates to {@link #process(HttpRequestBase, ProxyInvocationConfiguration)}.</p>
 	 * 
-	 * <p>See {@link Processor#run(Object...)}.</p>
+	 * <p>See {@link RequestProcessor#run(Object...)}.</p>
 	 *
 	 * @param args
 	 * 			a array of <b>length 2</b> with an {@link HttpRequestBase} and a {@link ProxyInvocationConfiguration} 
@@ -85,8 +72,8 @@ public abstract class AbstractRequestProcessor implements Processor<Void, Reques
 
 		if(args == null || args.length != 2) {
 			
-			StringBuilder errorContext = new StringBuilder("An ")
-			.append(AbstractRequestProcessor.class.getName())
+			StringBuilder errorContext = new StringBuilder("A ")
+			.append(RequestProcessor.class.getName())
 			.append(" requires exactly two arguments: the ")
 			.append(HttpRequestBase.class.getName())
 			.append(" which it should process and the ")
@@ -126,31 +113,4 @@ public abstract class AbstractRequestProcessor implements Processor<Void, Reques
 		
 		return null;
 	}
-	
-	/**
-	 * <p>Takes the {@link ProxyInvocationConfiguration} for the given {@link HttpRequestBase} and uses the 
-	 * metadata contained within the configuration to <i>build upon</i> the request.</p>
-	 * 
-	 * <p>The provided {@link HttpRequestBase} will be a concrete implementation which coincides with one of 
-	 * the {@link RequestMethod}s, such as {@link HttpGet} or {@link HttpPut}. It would be sensible to check 
-	 * the type of the request-method so that you treat each request in a way that complies with 
-	 * <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html">Section 9</a> of the <b>HTTP 1.1</b> 
-	 * RFC when designing an implementation.</p>   
-	 * 
-	 * @param httpRequestBase
-	 * 			a concrete implementation of {@link HttpRequestBase}, such as {@link HttpGet} which should 
-	 * 			be used to grow on based on the targeting criteria for this request processor
-	 *
-	 * @param config
-	 * 			the {@link ProxyInvocationConfiguration} which is used to discover the request's 
-	 * 			{@link RequestMethod} and any annotated metadata along with the invocation arguments  
- 	 *
-	 * @throws RequestProcessorException
-	 * 			if the processor finds an {@link HttpRequestBase} <i>which it should act upon</i> and yet 
-	 * 			fails to perform the necessary processing 
-	 * 
-	 * @since 1.2.4
-	 */
-	protected abstract void process(HttpRequestBase httpRequestBase, ProxyInvocationConfiguration config)
-	throws RequestProcessorException;
 }
