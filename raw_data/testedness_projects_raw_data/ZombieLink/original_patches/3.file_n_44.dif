diff --git a/zombielink/src/main/java/com/lonepulse/zombielink/request/EntityProcessor.java b/zombielink/src/main/java/com/lonepulse/zombielink/request/EntityProcessor.java
index 4abfa68..6d944f3 100644
--- a/zombielink/src/main/java/com/lonepulse/zombielink/request/EntityProcessor.java
+++ b/zombielink/src/main/java/com/lonepulse/zombielink/request/EntityProcessor.java
@@ -35,8 +35,8 @@ import org.apache.http.client.methods.HttpRequestBase;
 import org.apache.http.entity.ContentType;
 
 import com.lonepulse.zombielink.annotation.Entity;
-import com.lonepulse.zombielink.annotation.Serialize;
-import com.lonepulse.zombielink.proxy.InvocationContext;
+import com.lonepulse.zombielink.annotation.Serializer;
+import com.lonepulse.zombielink.inject.InvocationContext;
 import com.lonepulse.zombielink.util.Entities;
 import com.lonepulse.zombielink.util.EntityResolutionFailedException;
 import com.lonepulse.zombielink.util.Metadata;
@@ -72,7 +72,7 @@ class EntityProcessor extends AbstractRequestProcessor {
 	 * </ul>
 	 * 
 	 * <p>Parameter types are resolved to their {@link HttpEntity} as specified in 
-	 * {@link Entities#resolve(Object)}. If an attached @{@link Serialize} is discovered, the entity 
+	 * {@link Entities#resolve(Object)}. If an attached @{@link Serializer} is discovered, the entity 
 	 * will be serialized using the specified serializer before translation to an {@link HttpEntity}.</p>
 	 * 
 	 * <p>See {@link AbstractRequestProcessor#process(InvocationContext, HttpRequestBase)}.</p>
@@ -92,7 +92,7 @@ class EntityProcessor extends AbstractRequestProcessor {
 	 * <br><br>
 	 * @since 1.2.4
 	 */
-	@Override @SuppressWarnings("unchecked") //welcomes a ClassCastException on misuse of @Serialize(Custom.class)
+	@Override @SuppressWarnings("unchecked") //welcomes a ClassCastException on misuse of @Serializer(Custom.class)
 	protected HttpRequestBase process(InvocationContext context, HttpRequestBase request) {
 
 		try {
@@ -113,13 +113,13 @@ class EntityProcessor extends AbstractRequestProcessor {
 				
 				Object entity = entities.get(0).getValue();
 				
-				Serialize metadata = (metadata = 
-					context.getRequest().getAnnotation(Serialize.class)) == null? 
-						context.getEndpoint().getAnnotation(Serialize.class) :metadata;
+				Serializer metadata = (metadata = 
+					context.getRequest().getAnnotation(Serializer.class)) == null? 
+						context.getEndpoint().getAnnotation(Serializer.class) :metadata;
 				
-				if(metadata != null && !detached(context, Serialize.class)) {
+				if(metadata != null && !detached(context, Serializer.class)) {
 					
-					@SuppressWarnings("rawtypes") //no restrictions on custom serializer types with @Serialize
+					@SuppressWarnings("rawtypes") //no restrictions on custom serializer types with @Serializer
 					AbstractSerializer serializer = (metadata.value() == UNDEFINED)? 
 						Serializers.resolve(metadata.type()) :Serializers.resolve(metadata.value());
 						
