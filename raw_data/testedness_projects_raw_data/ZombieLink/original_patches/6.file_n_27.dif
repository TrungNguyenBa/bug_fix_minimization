diff --git a/src/main/java/com/lonepulse/zombielink/request/QueryParamProcessor.java b/src/main/java/com/lonepulse/zombielink/request/QueryParamProcessor.java
index 64b9622..1a3adef 100644
--- a/src/main/java/com/lonepulse/zombielink/request/QueryParamProcessor.java
+++ b/src/main/java/com/lonepulse/zombielink/request/QueryParamProcessor.java
@@ -31,7 +31,7 @@ import org.apache.http.client.utils.URIBuilder;
 
 import com.lonepulse.zombielink.annotation.QueryParam;
 import com.lonepulse.zombielink.annotation.Request;
-import com.lonepulse.zombielink.inject.InvocationContext;
+import com.lonepulse.zombielink.inject.ProxyInvocationConfiguration;
 
 /**
  * <p>This is a concrete implementation of {@link RequestProcessor} which discovers <i>query parameters</i> 
@@ -58,21 +58,21 @@ class QueryParamProcessor extends AbstractRequestProcessor {
 
 	
 	/**
-	 * <p>Accepts the {@link InvocationContext} along with an {@link HttpRequestBase} and creates 
+	 * <p>Accepts the {@link ProxyInvocationConfiguration} along with an {@link HttpRequestBase} and creates 
 	 * a <a href="http://en.wikipedia.org/wiki/Query_string">query string</a> using any arguments which were 
 	 * annotated with @{@link QueryParam} and @{@link Request.Param} which is subsequently appended to the URI.</p>
 	 * 
 	 * <p><b>Note</b> that any constant request parameters which are annotated with @{@link Request.Param} 
 	 * will be treated as <b>name-value</b> pairs to be used in the query string.</p>
 	 * 
-	 * <p>See {@link ParamPopulator#populate(InvocationContext)}.</p>
+	 * <p>See {@link ParamPopulator#populate(ProxyInvocationConfiguration)}.</p>
 	 * 
 	 * @param httpRequestBase
 	 * 			prefers an instance of {@link HttpGet} so as to conform with HTTP 1.1; however, other request 
 	 * 			types will be entertained to allow compliance with unusual endpoint definitions 
 	 * <br><br>
 	 * @param config
-	 * 			an immutable instance of {@link InvocationContext} which is used to form the query 
+	 * 			an immutable instance of {@link ProxyInvocationConfiguration} which is used to form the query 
 	 * 			string and append it to the request URL
 	 * <br><br>
 	 * @throws RequestProcessorException
@@ -81,7 +81,7 @@ class QueryParamProcessor extends AbstractRequestProcessor {
 	 * @since 1.2.4
 	 */
 	@Override
-	protected void process(HttpRequestBase httpRequestBase, InvocationContext config) throws RequestProcessorException {
+	protected void process(HttpRequestBase httpRequestBase, ProxyInvocationConfiguration config) throws RequestProcessorException {
 
 		try {
 			
