diff --git a/src/test/java/com/lonepulse/zombielink/inject/RequestValidationTest.java b/src/test/java/com/lonepulse/zombielink/inject/RequestValidationTest.java
index b6ab362..c5ba9b5 100644
--- a/src/test/java/com/lonepulse/zombielink/inject/RequestValidationTest.java
+++ b/src/test/java/com/lonepulse/zombielink/inject/RequestValidationTest.java
@@ -53,10 +53,10 @@ public class RequestValidationTest {
 	}
 	
 	/**
-	 * <p>The {@link Class} of a package-private exception which is thrown due to a missing @{@link Request} 
-	 * annotation on an endpoint request definition. 
+	 * <p>The {@link Class} of a package-private exception which is thrown due to a missing 
+	 * {@link Request} annotation on an endpoint request definition. 
 	 */
-	private Class<Throwable> strayRequestException;
+	private Class<Throwable> missingRequestAnnotationException;
 	
 	@Rule
 	public ExpectedException expectedException = ExpectedException.none();
@@ -66,13 +66,13 @@ public class RequestValidationTest {
 	 * <p>Sets up the test case by reflectively accessing the {@link Class}es of the expected exceptions.
 	 * 
 	 * @throws java.lang.Exception
-	 * 			if reflection failed to retrieve the necessary {@link Class}es
+	 * 			if reflection falied to retrieve the necessary {@link Class}es
 	 */
 	@Before @SuppressWarnings("unchecked") //safe case to Class<Throwable> from a known exception
 	public void setUp() throws Exception {
 		
-		strayRequestException = (Class<Throwable>) 
-			Class.forName("com.lonepulse.zombielink.inject.StrayEndpointRequestException");
+		missingRequestAnnotationException = (Class<Throwable>) 
+			Class.forName("com.lonepulse.zombielink.validator.MissingRequestAnnotationException");
 	}
 	
 	/**
@@ -83,7 +83,11 @@ public class RequestValidationTest {
 	@Test
 	public final void testMissingRequestAnnotation() {
 		
-		expectedException.expect(Is.isA(strayRequestException));
-		EndpointProxyFactory.INSTANCE.create(MissingRequestAnnotationEndpoint.class);
+		MissingRequestAnnotationEndpoint endpoint = 
+			EndpointProxyFactory.INSTANCE.create(MissingRequestAnnotationEndpoint.class);
+		
+		expectedException.expectCause(Is.isA(missingRequestAnnotationException));
+		
+		endpoint.invalidRequest();
 	}
 }
