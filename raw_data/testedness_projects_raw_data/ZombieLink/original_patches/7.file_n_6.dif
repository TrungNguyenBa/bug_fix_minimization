diff --git a/src/main/java/com/lonepulse/zombielink/inject/Zombie.java b/src/main/java/com/lonepulse/zombielink/inject/Zombie.java
index c807379..0dd1b42 100644
--- a/src/main/java/com/lonepulse/zombielink/inject/Zombie.java
+++ b/src/main/java/com/lonepulse/zombielink/inject/Zombie.java
@@ -42,7 +42,7 @@ import com.lonepulse.zombielink.executor.RequestExecutors;
  * concrete implementations of endpoint interface definitions. Place an @{@link Bite} annotation on all instance 
  * properties which are endpoints and invoke {@link Zombie#infect(Object)} or {@link Zombie#infect(Class)}.</p> 
  *  
- * @version 1.3.0
+ * @version 1.2.0
  * <br><br>
  * @since 1.1.1
  * <br><br>
@@ -153,18 +153,10 @@ public final class Zombie {
 	 * @param injectee
 	 * 			the object to which the endpoint must be injected
 	 * <br><br>
-	 * @throws IllegalArgumentException
-	 * 			if the object supplied for endpoint injection is {@code null} 
-	 * <br><br>
 	 * @since 1.1.1
 	 */
 	public static void infect(Object injectee) {
 		
-		if(injectee == null) {
-			
-			throw new IllegalArgumentException("The object supplied for endpoint injection was <null>");
-		}
-		
 		Class<?> injecteeClass = injectee.getClass();
 		Field[] fields = injecteeClass.getDeclaredFields();
 		
@@ -248,18 +240,10 @@ public final class Zombie {
 	 * 
 	 * @return a <b>new instance</b> of the injectee or {@code null} if constructor injection failed
 	 * <br><br>
-	 * @throws IllegalArgumentException
-	 * 			if the {@link Class} supplied for endpoint injection is {@code null} 
-	 * <br><br>
 	 * @since 1.1.1
 	 */
 	public static <T extends Object> T infect(Class<T> injectee) {
 
-		if(injectee == null) {
-			
-			throw new IllegalArgumentException("The java.lang.Class supplied for endpoint injection was <null>");
-		}
-		
 		Class<?> endpointInterface = null;
 		Constructor<?>[] constructors = injectee.getConstructors();
 
