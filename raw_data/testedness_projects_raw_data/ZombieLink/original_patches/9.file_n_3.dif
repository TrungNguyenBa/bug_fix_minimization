diff --git a/src/main/java/com/lonepulse/zombielink/executor/ConfigurationManager.java b/src/main/java/com/lonepulse/zombielink/executor/ConfigurationManager.java
deleted file mode 100644
index daf241f..0000000
--- a/src/main/java/com/lonepulse/zombielink/executor/ConfigurationManager.java
+++ /dev/null
@@ -1,70 +0,0 @@
-package com.lonepulse.zombielink.executor;
-
-/*
- * #%L
- * ZombieLink
- * %%
- * Copyright (C) 2013 Lonepulse
- * %%
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- * #L%
- */
-
-
-import com.lonepulse.zombielink.inject.Zombie;
-import com.lonepulse.zombielink.inject.Zombie.Configuration;
-
-/**
- * <p>This contract defines the services which are offered for managing <b>request execution configurations</b>. 
- * A configuration may govern aspects such as the schemes which are handled, or the number of pooled connections. 
- * These configurations may apply when executing requests on discrete endpoints or on all endpoints in general.</p>
- * 
- * <p>See {@link Zombie.Configuration}</p>
- * 
- * @version 1.1.0
- * <br><br>
- * @since 1.2.4
- * <br><br>
- * @author <a href="mailto:sahan@lonepulse.com">Lahiru Sahan Jayasinghe</a>
- */
-public interface ConfigurationManager {
-	
-	
-	/**
-	 * <p>Creates a new instance of the <i>out-of-the-box</i> configuration which will be used by default for 
-	 * executing all endoint requests.</p>
-	 *
-	 * @return the default {@link Configuration} used for all endpoints
-	 * <br><br> 
-	 * @since 1.2.4
-	 */
-	Configuration getDefault();
-	
-	/**
-	 * <p>Takes the {@link Class} of an endpoint interface and registers the associated {@link Configuration}. This 
-	 * may be a custom configuration which is specified using the <b>@Configuration</b> annotation or the default 
-	 * configuration if the annotation is not found. In either case, the {@link Configuration} will be instantiated, 
-	 * registered and returned.</p>
-	 *
-	 * @param endpointClass
-	 * 			the {@link Class} of the endpoint definition interface whose {@link Configuration} is to be registered
-	 * <br><br>
-	 * @return a <b>new instance</b> of the {@link Configuration} which was instantiated and registered
-	 * <br><br>
-	 * @throws ConfigurationFailedException
-	 * 			if the associated {@link Configuration} failed to be instantiated or registered
-	 * <br><br>
-	 * @since 1.2.3
-	 */
-	Configuration register(Class<?> endpointClass) throws ConfigurationFailedException;
-}
