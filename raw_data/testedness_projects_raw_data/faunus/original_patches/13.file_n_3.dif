diff --git a/include/faunus/energy.h b/include/faunus/energy.h
index 3acd1734..8e44d992 100644
--- a/include/faunus/energy.h
+++ b/include/faunus/energy.h
@@ -372,12 +372,11 @@ namespace Faunus {
      */
     template<class Tspace, class Tpairpot>
       class NonbondedVector : public Energybase<Tspace> {
-        private:
+        protected:
           string _info() { return pairpot.info(25); }
           typedef Energybase<Tspace> Tbase;
           typedef typename Tbase::Tparticle Tparticle;
           typedef typename Tbase::Tpvec Tpvec;
-          bool groupBasedField;
 
         public:
           typename Tspace::GeometryType geo;
@@ -388,7 +387,6 @@ namespace Faunus {
                 std::is_base_of<Potential::PairPotentialBase,Tpairpot>::value,
                 "Tpairpot must be a pair potential" );
             Tbase::name="Nonbonded N" + textio::squared + " - " + pairpot.name;
-            groupBasedField = in.get<bool>("pol_g2g",false,"Field will exclude own group");
           }
 
           void setSpace(Tspace &s) FOVERRIDE {
@@ -510,16 +508,6 @@ namespace Faunus {
            */
           void field(const Tpvec &p, Eigen::MatrixXd &E) FOVERRIDE {
             assert((int)p.size()==E.cols());
-
-            // Include field only from external molecules
-            if (groupBasedField) {
-              for (auto gi : Tbase::spc->groupList()) // loop over all groups
-                for (auto gj : Tbase::spc->groupList()) // loop over all group
-                  if (gi!=gj) // discard identical groups (addresss comparison)
-                    for (auto i : *gi)  // loop over particle index in 1st group
-                      for (auto j : *gj) // loop ove
-                        E.col(i) = E.col(i) + pairpot.field(p[j],geo.vdist(p[i],p[j]));
-              } else {
             size_t i=0;
             for (auto &pi : p) {
               for (auto &pj : p)
@@ -528,7 +516,6 @@ namespace Faunus {
               i++;
             }
           }
-          }
       };
 
     /**
