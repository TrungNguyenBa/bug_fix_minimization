diff --git a/include/faunus/energy.h b/include/faunus/energy.h
index 3eedb9a0..d95c43d4 100644
--- a/include/faunus/energy.h
+++ b/include/faunus/energy.h
@@ -513,48 +513,6 @@ namespace Faunus {
       };
 
     /**
-     * @brief Nonbonded with early rejection for infinite energies
-     *
-     * Useful for potentials with a hard sphere part
-     */
-    template<class Tspace, class Tpairpot, class Tnonbonded=Energy::Nonbonded<Tspace,Tpairpot> >
-      class NonbondedEarlyReject : public Tnonbonded {
-        private:
-          typedef Tnonbonded base;
-        public:
-          NonbondedEarlyReject(InputMap &in) : base(in) {
-            base::name+=" (early reject)";
-          }
-
-          double g2g(const typename base::Tpvec &p, Group &g1, Group &g2) FOVERRIDE {
-            double u=0;
-            for (auto i : g1)
-              for (auto j : g2) {
-                auto _u = base::pairpot(p[i],p[j],base::geo.sqdist(p[i],p[j]));
-                if (std::isinf(_u))
-                  return INFINITY;
-                u+=_u;
-              }
-            return u;
-          }
-
-          double g_internal(const typename base::Tpvec &p, Group &g) FOVERRIDE { 
-            double u=0;
-            int b=g.back(), f=g.front();
-            if (!g.empty())
-              for (int i=f; i<b; ++i)
-                for (int j=i+1; j<=b; ++j) {
-                  auto _u = base::pairpot(p[i],p[j],base::geo.sqdist(p[i],p[j]));
-                  if (std::isinf(_u))
-                    return INFINITY;
-                  u+=_u;
-                }
-            return u;
-          }
-
-      };
-
-    /**
      * @brief Cuts group-to-group interactions at specified mass-center separation
      *
      * For two molecular groups (`Group::isMolecular()==true`) this will invoke
@@ -588,7 +546,7 @@ namespace Faunus {
               }
             return false;
           }
-
+          
         public:
           bool noPairPotentialCutoff; //!< Set if range of pairpot is longer than rcut (default: false)
 
@@ -634,7 +592,7 @@ namespace Faunus {
               return u;
             }
           }
-
+          
           // unfinished
           void field(const typename base::Tpvec &p, Eigen::MatrixXd &E) FOVERRIDE {
             assert((int)p.size()==E.cols());
@@ -649,13 +607,13 @@ namespace Faunus {
                     for (int i : *gi)
                       for (int j : *gj)
                         E.col(i)+=base::pairpot.field(p[j],base::geo.vdist(p[i],p[j]));
-
-            // now loop over all internal particles in groups
-            for (auto g : base::spc->groupList())
-              for (int i : *g)
-                for (int j : *g)
-                  if (i!=j)
-                    E.col(i)+=base::pairpot.field(p[j],base::geo.vdist(p[i],p[j]));
+              
+              // now loop over all internal particles in groups
+              for (auto g : base::spc->groupList())
+                for (int i : *g)
+                  for (int j : *g)
+                    if (i!=j)
+                      E.col(i)+=base::pairpot.field(p[j],base::geo.vdist(p[i],p[j]));
           }
       };
 
