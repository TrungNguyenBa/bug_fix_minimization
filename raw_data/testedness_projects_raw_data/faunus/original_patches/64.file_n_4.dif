diff --git a/include/faunus/io.h b/include/faunus/io.h
index 3df6f7f6..ecfb85fe 100644
--- a/include/faunus/io.h
+++ b/include/faunus/io.h
@@ -3,9 +3,11 @@
 
 #ifndef SWIG
 #include <faunus/common.h>
+#include <faunus/potentials.h>
 #include <faunus/geometry.h>
 #include <faunus/group.h>
-#include <faunus/space.h>
+#include <faunus/energy.h>
+
 
 #ifndef __cplusplus
 #define __cplusplus
@@ -380,51 +382,18 @@ namespace Faunus {
   /*!
    * \brief File IO for faste protein sequences
    */
-  template<class Tbonded>
   class FormatFastaSequence {
     private:
       std::map<char,string> map; //!< Map one letter code (char) to three letter code (string)
-        Tbonded bond;
+      Potential::Harmonic bond;
     public:
-        FormatFastaSequence(double harmonic_k, double harmonic_req) : bond(harmonic_k, harmonic_req) {
-          map['A']="ALA";
-          map['R']="ARG";
-          map['N']="ASN";
-          map['D']="ASP";
-          map['C']="CYS";
-          map['E']="GLU";
-          map['Q']="GLN";
-          map['G']="GLY";
-          map['H']="HIS";
-          map['I']="ILE";
-          map['L']="LEU";
-          map['K']="LYS";
-          map['M']="MET";
-          map['F']="PHE";
-          map['P']="PRO";
-          map['S']="SER";
-          map['T']="THR";
-          map['W']="TRP";
-          map['Y']="TYR";
-          map['V']="VAL";
-        }
-
-        p_vec interpret(string seq) {
-          p_vec p;
-          particle a;
-          for (auto c : seq) {
-            if (map.find(c)!=map.end() ) {
-              a=atom[ map[c] ];
-              p.push_back(a);
-            }
-          }
-          return p;
-        }
+      p_vec interpret(string);
+      FormatFastaSequence(double=0.76, double=4.9);
 
       /*!
        * Inserts at end of particle vector
        */
-        template<class Tspace>
+      template<class Tspace, class Tbonded>
         Group insert(string fasta, Tspace &spc, Tbonded &b) {
           p_vec p = interpret(fasta);
           Group g( p.size() );
@@ -438,7 +407,7 @@ namespace Faunus {
           return g;
         }
 
-        template<class Tspace>
+      template<class Tspace, class Tbonded>
         Group include(string file, Tspace &spc, Tbonded &b) {
           Group g;
           return g;
