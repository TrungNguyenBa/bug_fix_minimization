diff --git a/include/faunus/point.h b/include/faunus/point.h
index 2fb8e999..5ed70e8f 100644
--- a/include/faunus/point.h
+++ b/include/faunus/point.h
@@ -148,7 +148,7 @@ namespace Faunus {
       typedef Eigen::Matrix<T,3,3> Tmat; //!< Matrix from Eigen
 
       /** @brief Default constructor. Data is *not* zeroed */
-      Tensor() {}
+      inline Tensor() {}
 
       Tensor(T xx, T xy, T xz, T yy, T yz, T zz) {
         (*this) << xx,xy,xz,xy,yy,yz,xz,yz,zz;
@@ -184,16 +184,10 @@ namespace Faunus {
         return operator<<(i);
       }
 
-      /** @brief Write data members to stream */
-      friend std::ostream &operator<<(std::ostream &o, const Tensor<T> &t) {
-        for (int i=0; i!=t.rows(); ++i)
-          for (int j=i; j!=t.cols(); ++j)
-            o << t(i,j);
-        return o;
-      }
-
       template<typename Trotator>
-        void rotate(const Trotator &rot) { *this = rot(*this); }
+        void rotate(const Trotator &rot) {
+          *this = rot(*this);
+        }
     };
 
   /**
@@ -498,8 +492,7 @@ namespace Faunus {
     }
 
     /* write data members to stream */
-    friend std::ostream &operator<<(std::ostream &o, const DipoleParticle &p)
-    {
+    friend std::ostream &operator<<(std::ostream &o, const DipoleParticle &p) {
       o << PointParticle(p) << " " << p.mu << " " << p.muscalar
         << " " << p.mup << " " << p.alpha << " " << p.theta;
       return o;
