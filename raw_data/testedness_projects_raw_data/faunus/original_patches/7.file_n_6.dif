diff --git a/include/faunus/group.h b/include/faunus/group.h
index c8efb770..e2015c3c 100644
--- a/include/faunus/group.h
+++ b/include/faunus/group.h
@@ -209,6 +209,50 @@ namespace Faunus {
           }
         }
 
+      /** @brief Side lengths scaling for NVT ensemble 
+      template<class Tspace>
+        void isoscale(Tspace &s, double xy, double z) {
+          if (empty()) return;
+
+          if (isAtomic()) {
+            cm_trial=cm;
+            cm_trial.isoscale(s.geo,xy,z);
+            for (auto i : *this)
+              s.trial[i].isoscale(s.geo,xy,z);
+            return;
+          }
+
+          if (isMolecular()) {
+            assert( s.geo.dist(cm, massCenter(s))<1e-6);
+            assert( s.geo.dist(cm, cm_trial)<1e-7);
+
+            Point newcm=cm;
+            newcm.isoscale(s.geo,xy,z);
+            translate(s,-cm);           // move to origo
+            Point oldlen = s.geo.len;
+            Point newlen = Point ( s.geo.len.x()*xy, s.geo.len.y()*xy, s.geo.len.z()*z );
+            s.geo.setlen( newlen );  // apply trial lengths
+
+            for (auto i : *this) {
+              s.trial[i] += newcm;           // move all particles to new cm
+              s.geo.boundary( s.trial[i] );  // respect boundary conditions
+            }
+            cm_trial=newcm;
+            s.geo.setlen( oldlen );   // restore original lengths
+            return;
+          }
+
+          if (isRange()) {
+            for (int i=0; i!=numMolecules(); ++i) {
+              Group sel;
+              getMolecule(i,sel);
+              sel.setMassCenter(s);
+              sel.isoscale(s,xy,z);
+            }
+            return;
+          }
+        }*/
+
       /** @brief Undo move operation */
       template<class Tspace>
         void undo(Tspace &s) {
