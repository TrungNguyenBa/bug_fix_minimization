diff --git a/src/main/java/org/grails/maven/plugin/AbstractGrailsMojo.java b/src/main/java/org/grails/maven/plugin/AbstractGrailsMojo.java
index b504db8..dec50f5 100755
--- a/src/main/java/org/grails/maven/plugin/AbstractGrailsMojo.java
+++ b/src/main/java/org/grails/maven/plugin/AbstractGrailsMojo.java
@@ -99,11 +99,6 @@ public abstract class AbstractGrailsMojo extends AbstractMojo {
     protected String grailsVersion;
 
     /**
-     * The version of Groovy used
-     */
-    private String groovyVersion;
-
-    /**
      * The Grails work directory to use.
      *
      * @parameter expression="${grails.grailsWorkDir}" default-value="${project.build.directory}/work"
@@ -546,16 +540,14 @@ public abstract class AbstractGrailsMojo extends AbstractMojo {
             Set<File> jars = new HashSet<File>();
             // calculate the Grails version to use from the dependency or grailsVersion setting
             String grailsVersion = establishGrailsVersion();
-            String groovyVersion = establishGroovyVersion();
 
             if(grailsVersion != null) {
                 String scriptsId = "org.grails:grails-scripts:" + grailsVersion;
                 String bootstrapId = "org.grails:grails-bootstrap:" + grailsVersion;
-                String groovyId = "org.codehaus.groovy:groovy-all:" + groovyVersion;
-                jars.addAll(resolveArtifactIds(Arrays.asList(scriptsId, bootstrapId, groovyId)));
+                jars.addAll(resolveArtifactIds(Arrays.asList(scriptsId, bootstrapId)));
             }
 
-            jars.addAll(resolveArtifacts(pluginProject, COMPILE_PLUS_RUNTIME_SCOPE, new ExclusionsDependencyFilter(Arrays.asList("org.grails:grails-bootstrap", "org.codehaus.groovy:groovy-all", "org.codehaus.groovy:groovy"))));
+            jars.addAll(resolveArtifacts(pluginProject, COMPILE_PLUS_RUNTIME_SCOPE, new ExclusionsDependencyFilter(Arrays.asList("org.grails:grails-bootstrap"))));
 
             findAndAddToolsJar(jars);
             addExtraClassPathEntries(jars);
@@ -566,28 +558,6 @@ public abstract class AbstractGrailsMojo extends AbstractMojo {
         }
     }
 
-    protected String establishGroovyVersion() throws ProjectBuildingException {
-        if(this.groovyVersion == null) {
-            Artifact groovyDependency = findGroovyDependency(project);
-            if(groovyDependency != null) {
-                this.groovyVersion = groovyDependency.getVersion();
-            }
-            else {
-                String grailsVersion = establishGrailsVersion();
-                if(grailsVersion.startsWith("2.3")) {
-                    this.groovyVersion = "2.1.9";
-                }
-                else {
-                    this.groovyVersion = findGroovyVersionFromPlugin();
-                    if(this.groovyVersion == null) {
-                        this.groovyVersion = "2.3.3";
-                    }
-                }
-            }
-        }
-        return this.groovyVersion;
-    }
-
     protected String establishGrailsVersion() throws ProjectBuildingException {
         if(this.grailsVersion == null) {
             Artifact grailsDependency = findGrailsDependency(project);
@@ -602,20 +572,12 @@ public abstract class AbstractGrailsMojo extends AbstractMojo {
     }
 
     private String findGrailsVersionFromPlugin() throws ProjectBuildingException {
-        return findArtefactVersionFromPlugin("org.grails", "grails-bootstrap");
-    }
-
-    private String findGroovyVersionFromPlugin() throws ProjectBuildingException {
-        return findArtefactVersionFromPlugin("org.codehaus.groovy", "groovy");
-    }
-
-    private String findArtefactVersionFromPlugin(String group, String name) throws ProjectBuildingException {
         MavenProject pluginProject = getPluginProject();
         Set<Artifact> dependencyArtifacts = pluginProject.getArtifacts();
         if(dependencyArtifacts != null) {
             for (Artifact artifact : dependencyArtifacts) {
-                if (artifact.getArtifactId().equals(name) &&
-                        artifact.getGroupId().equals(group)) {
+                if (artifact.getArtifactId().equals("grails-bootstrap") &&
+                        artifact.getGroupId().equals("org.grails")) {
                     return artifact.getVersion();
                 }
             }
@@ -698,20 +660,6 @@ public abstract class AbstractGrailsMojo extends AbstractMojo {
         return null;
     }
 
-    private Artifact findGroovyDependency(MavenProject project) {
-        Set dependencyArtifacts = project.getDependencyArtifacts();
-        for (Object o : dependencyArtifacts) {
-            Artifact artifact = (Artifact) o;
-            String groupId = artifact.getGroupId();
-            if (artifact.getArtifactId().equals("org.codehaus.groovy") &&
-                    (groupId.equals("groovy-all") || groupId.equals("groovy"))) {
-                return artifact;
-            }
-        }
-        return null;
-    }
-
-
 
     private void configureMavenProxy() {
         if (settings != null) {
