diff --git a/src/main/java/com/fasterxml/jackson/dataformat/protobuf/schema/ProtobufField.java b/src/main/java/com/fasterxml/jackson/dataformat/protobuf/schema/ProtobufField.java
index f82dc10..d0fe892 100644
--- a/src/main/java/com/fasterxml/jackson/dataformat/protobuf/schema/ProtobufField.java
+++ b/src/main/java/com/fasterxml/jackson/dataformat/protobuf/schema/ProtobufField.java
@@ -56,32 +56,25 @@ public class ProtobufField
         this.type = type;
         wireType = type.getWireType();
         usesZigZag = type.usesZigZag();
+        typedTag = (nativeField.getTag() << 3) + wireType;
+        name = nativeField.getName();
         enumType = et;
         messageType = msg;
-
-        if (nativeField == null) { // for "unknown" field
-            typedTag = 0;
-            repeated = required = deprecated = packed = false;
-            name = "UNKNOWN";
-        } else {
-            typedTag = (nativeField.getTag() << 3) + wireType;
-            name = nativeField.getName();
-            switch (nativeField.getLabel()) {
-            case REPEATED:
-                required = false;
-                repeated = true;
-                break;
-            case REQUIRED:
-                required = true;
-                repeated = false;
-                break;
-            default:
-                required = repeated = false;
-                break;
-            }
-            packed = nativeField.isPacked();
-            deprecated = nativeField.isDeprecated();
+        switch (nativeField.getLabel()) {
+        case REPEATED:
+            required = false;
+            repeated = true;
+            break;
+        case REQUIRED:
+            required = true;
+            repeated = false;
+            break;
+        default:
+            required = repeated = false;
+            break;
         }
+        packed = nativeField.isPacked();
+        deprecated = nativeField.isDeprecated();
         isObject = !repeated && (type == FieldType.MESSAGE);
     }
 
