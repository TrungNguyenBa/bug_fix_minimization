diff --git a/src/main/java/com/fasterxml/jackson/datatype/joda/deser/DateMidnightDeserializer.java b/src/main/java/com/fasterxml/jackson/datatype/joda/deser/DateMidnightDeserializer.java
index 3087ce7..3f6201c 100644
--- a/src/main/java/com/fasterxml/jackson/datatype/joda/deser/DateMidnightDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/datatype/joda/deser/DateMidnightDeserializer.java
@@ -32,28 +32,28 @@ public class DateMidnightDeserializer extends
     }
 
     @Override
-    public DateMidnight deserialize(JsonParser p, DeserializationContext ctxt)
+    public DateMidnight deserialize(JsonParser jp, DeserializationContext ctxt)
         throws IOException
     {
         // We'll accept either long (timestamp) or array:
-        if (p.isExpectedStartArrayToken()) {
-            p.nextToken(); // VALUE_NUMBER_INT
-            int year = p.getIntValue();
-            p.nextToken(); // VALUE_NUMBER_INT
-            int month = p.getIntValue();
-            p.nextToken(); // VALUE_NUMBER_INT
-            int day = p.getIntValue();
-            if (p.nextToken() != JsonToken.END_ARRAY) {
-                throw ctxt.wrongTokenException(p, JsonToken.END_ARRAY,
+        if (jp.isExpectedStartArrayToken()) {
+            jp.nextToken(); // VALUE_NUMBER_INT
+            int year = jp.getIntValue();
+            jp.nextToken(); // VALUE_NUMBER_INT
+            int month = jp.getIntValue();
+            jp.nextToken(); // VALUE_NUMBER_INT
+            int day = jp.getIntValue();
+            if (jp.nextToken() != JsonToken.END_ARRAY) {
+                throw ctxt.wrongTokenException(jp, JsonToken.END_ARRAY,
                         "after DateMidnight ints");
             }
             return new DateMidnight(year, month, day);
         }
-        switch (p.getCurrentToken()) {
+        switch (jp.getCurrentToken()) {
         case VALUE_NUMBER_INT:
-            return new DateMidnight(p.getLongValue());
+            return new DateMidnight(jp.getLongValue());
         case VALUE_STRING:
-            String str = p.getText().trim();
+            String str = jp.getText().trim();
             if (str.length() == 0) { // [JACKSON-360]
                 return null;
             }
@@ -64,7 +64,7 @@ public class DateMidnightDeserializer extends
             return local.toDateMidnight();
         default:
         }
-        throw ctxt.wrongTokenException(p, JsonToken.START_ARRAY,
+        throw ctxt.wrongTokenException(jp, JsonToken.START_ARRAY,
                 "expected JSON Array, Number or String");
     }
 }
\ No newline at end of file
