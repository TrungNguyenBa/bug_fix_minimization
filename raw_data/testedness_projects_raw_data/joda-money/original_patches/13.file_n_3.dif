diff --git a/src/main/java/org/joda/money/DefaultCurrencyUnitDataProvider.java b/src/main/java/org/joda/money/DefaultCurrencyUnitDataProvider.java
index 09ee23a..a3e5e84 100644
--- a/src/main/java/org/joda/money/DefaultCurrencyUnitDataProvider.java
+++ b/src/main/java/org/joda/money/DefaultCurrencyUnitDataProvider.java
@@ -17,7 +17,6 @@ package org.joda.money;
 
 import java.io.BufferedReader;
 import java.io.FileNotFoundException;
-import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.ArrayList;
@@ -58,48 +57,29 @@ class DefaultCurrencyUnitDataProvider extends CurrencyUnitDataProvider {
      * @throws Exception if a necessary file is not found
      */
     private void loadCurrenciesFromFile(String fileName, boolean isNecessary) throws Exception {
-        InputStream in = null;
-        Exception resultEx = null;
-        try {
-            in = getClass().getResourceAsStream(fileName);
-            if (in == null && isNecessary) {
-                throw new FileNotFoundException("Data file " + fileName + " not found");
-            } else if (in == null && !isNecessary) {
-                return; // no extension file found, no problem. just return
-            }
-            BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF-8"));
-            String line;
-            while ((line = reader.readLine()) != null) {
-                Matcher matcher = REGEX_LINE.matcher(line);
-                if (matcher.matches()) {
-                    List<String> countryCodes = new ArrayList<String>();
-                    String codeStr = matcher.group(4);
-                    String currencyCode = matcher.group(1);
-                    if (codeStr.length() % 2 == 1) {
-                        continue;  // invalid line
-                    }
-                    for (int i = 0; i < codeStr.length(); i += 2) {
-                        countryCodes.add(codeStr.substring(i, i + 2));
-                    }
-                    int numericCode = Integer.parseInt(matcher.group(2));
-                    int digits = Integer.parseInt(matcher.group(3));
-                    registerCurrency(currencyCode, numericCode, digits, countryCodes);
+        InputStream in = getClass().getResourceAsStream(fileName);
+        if (in == null && isNecessary) {
+            throw new FileNotFoundException("Data file " + fileName + " not found");
+        } else if (in == null && !isNecessary) {
+            return; // no extension file found, no problem. just return
+        }
+        BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF-8"));
+        String line;
+        while ((line = reader.readLine()) != null) {
+            Matcher matcher = REGEX_LINE.matcher(line);
+            if (matcher.matches()) {
+                List<String> countryCodes = new ArrayList<String>();
+                String codeStr = matcher.group(4);
+                String currencyCode = matcher.group(1);
+                if (codeStr.length() % 2 == 1) {
+                    continue;  // invalid line
                 }
-            }
-        } catch (Exception ex) {
-            resultEx = ex;
-            throw ex;
-        } finally {
-            if (in != null) {
-                if (resultEx != null) {
-                    try {
-                        in.close();
-                    } catch (IOException ignored) {
-                        throw resultEx;
-                    }
-                } else {
-                    in.close();
+                for (int i = 0; i < codeStr.length(); i += 2) {
+                    countryCodes.add(codeStr.substring(i, i + 2));
                 }
+                int numericCode = Integer.parseInt(matcher.group(2));
+                int digits = Integer.parseInt(matcher.group(3));
+                registerCurrency(currencyCode, numericCode, digits, countryCodes);
             }
         }
     }
