diff --git a/src/main/java/pl/project13/maven/git/GitCommitIdMojo.java b/src/main/java/pl/project13/maven/git/GitCommitIdMojo.java
index 882330f..0830596 100644
--- a/src/main/java/pl/project13/maven/git/GitCommitIdMojo.java
+++ b/src/main/java/pl/project13/maven/git/GitCommitIdMojo.java
@@ -22,6 +22,7 @@ import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Function;
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
+import com.google.common.base.Strings;
 import com.google.common.collect.Lists;
 import com.google.common.io.Closeables;
 import com.google.common.io.Files;
@@ -272,6 +273,14 @@ public class GitCommitIdMojo extends AbstractMojo {
   private List<String> excludeProperties = Collections.emptyList();
 
   /**
+   * Specifies the character encoding for the properties file that is generated by this plugin
+   *
+   * @parameter  expression="${encoding}" default-value="${project.reporting.outputEncoding}
+   * @since 2.1.11
+   */
+  private String encoding;
+
+  /**
    * The properties we store our data in and then expose them
    */
   private Properties properties;
@@ -490,7 +499,7 @@ public class GitCommitIdMojo extends AbstractMojo {
     try {
       Files.createParentDirs(gitPropsFile);
 
-      outputWriter = new OutputStreamWriter(new FileOutputStream(gitPropsFile), Charset.forName("UTF-8"));
+      outputWriter = new OutputStreamWriter(new FileOutputStream(gitPropsFile), determineEncoding());
       if ("json".equalsIgnoreCase(format)) {
         log("Writing json file to [", gitPropsFile.getAbsolutePath(), "] (for module ", project.getName(), ")...");
         ObjectMapper mapper = new ObjectMapper();
@@ -507,6 +516,20 @@ public class GitCommitIdMojo extends AbstractMojo {
     }
   }
 
+  private String determineEncoding() {
+    if (Strings.isNullOrEmpty(this.encoding) )
+    {
+        getLog().warn(
+                "File encoding has not been set, using platform encoding " + Charset.defaultCharset().name()
+                        + ", i.e. build is platform dependent!" );
+        return Charset.defaultCharset().name();
+    }
+    else
+    {
+        return this.encoding;
+    }
+  }
+
   @VisibleForTesting
   File craftPropertiesOutputFile(File base, String propertiesFilename){
     File returnPath = new File(base, propertiesFilename);
