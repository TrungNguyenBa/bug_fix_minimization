diff --git a/src/main/java/de/bwaldvogel/mongo/backend/memory/MemoryCollection.java b/src/main/java/de/bwaldvogel/mongo/backend/memory/MemoryCollection.java
index 8fdeaec..2aa97ac 100644
--- a/src/main/java/de/bwaldvogel/mongo/backend/memory/MemoryCollection.java
+++ b/src/main/java/de/bwaldvogel/mongo/backend/memory/MemoryCollection.java
@@ -522,52 +522,22 @@ public class MemoryCollection extends MongoCollection {
     }
 
     private BSONObject projectDocument(BSONObject document, BSONObject fields) {
-        BSONObject newDocument = projectDocumentSeparingDots(document, fields);
-
-        // implicitly add _id if not mentioned
-        // http://docs.mongodb.org/manual/core/read-operations/#result-projections
-        if (!fields.containsField(idField)) {
-            newDocument.put(idField, document.get(idField));
-        }
-
-        return newDocument;
-    }
-
-	private BSONObject projectDocumentSeparingDots(BSONObject document,
-			BSONObject fields) {
         if (document == null)
             return null;
         BSONObject newDocument = new BasicBSONObject();
         for (String key : fields.keySet()) {
-        	if (Utils.isTrue(fields.get(key)))
-        		projectField(document, newDocument, key);
+            if (Utils.isTrue(fields.get(key))) {
+                newDocument.put(key, document.get(key));
             }
-		return newDocument;
         }
 
-	private void projectField(BSONObject document, BSONObject newDocument,
-			String key) {
-		String[] splittedKeys = key.split("\\.");
-		String currentField = splittedKeys[0];
-		if (Utils.isTrue(document.get(currentField))) {
-			if (splittedKeys.length == 1)
-				newDocument.put(currentField, document.get(currentField));
-			else {
-				BSONObject remainingFields = new BasicBSONObject();
-				remainingFields.put(key.substring(currentField.length() + 1), new Integer(1));
-				if (newDocument.containsField(currentField))
-					mergeFields((BSONObject)newDocument.get(currentField), projectDocumentSeparingDots((BSONObject)document.get(currentField), remainingFields));
-				else
-					newDocument.put(currentField, projectDocumentSeparingDots((BSONObject)document.get(currentField), remainingFields));
-			}
-		}
+        // implicitly add _id if not mentioned
+        // http://docs.mongodb.org/manual/core/read-operations/#result-projections
+        if (!fields.containsField(idField)) {
+            newDocument.put(idField, document.get(idField));
         }
 
-    private Object mergeFields(BSONObject object1,
-			BSONObject object2) {
-    	object1.putAll(object2);
-    	
-		return object1;
+        return newDocument;
     }
 
     public synchronized Iterable<BSONObject> handleQuery(BSONObject queryObject, int numberToSkip, int numberToReturn)
