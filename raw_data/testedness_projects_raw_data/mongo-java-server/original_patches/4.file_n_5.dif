diff --git a/test-common/src/main/java/de/bwaldvogel/mongo/backend/AbstractBackendTest.java b/test-common/src/main/java/de/bwaldvogel/mongo/backend/AbstractBackendTest.java
index 6449627..7d354b8 100644
--- a/test-common/src/main/java/de/bwaldvogel/mongo/backend/AbstractBackendTest.java
+++ b/test-common/src/main/java/de/bwaldvogel/mongo/backend/AbstractBackendTest.java
@@ -183,10 +183,10 @@ public abstract class AbstractBackendTest extends AbstractSimpleBackendTest {
         collection.createIndex(new BasicDBObject("b", 1));
         List<DBObject> indexes = getCollection("system.indexes").find().toArray();
         assertThat(indexes).containsOnly(
+
         json("key:{_id:1}").append("ns", collection.getFullName()).append("name", "_id_"),
                 json("key:{n:1}").append("ns", collection.getFullName()).append("name", "n_1"),
-            json("key:{b:1}").append("ns", collection.getFullName()).append("name", "b_1")
-        );
+                json("key:{b:1}").append("ns", collection.getFullName()).append("name", "b_1"));
     }
 
     @Test
@@ -403,9 +403,7 @@ public abstract class AbstractBackendTest extends AbstractSimpleBackendTest {
                 json("_id: 4, counts:{done:1}"),
                 json("_id: 1"),
                 json("_id: 2"),
-            json("_id: 3")
-        );
-
+                json("_id: 3"));
         cursor.close();
     }
 
@@ -1486,36 +1484,6 @@ public abstract class AbstractBackendTest extends AbstractSimpleBackendTest {
     }
 
     @Test
-    public void testUpdatePullValueWithCondition() {
-        collection.insert(json("_id: 1, votes: [ 3, 5, 6, 7, 7, 8 ]"));
-        collection.update(json("_id: 1"), json("$pull: { votes: { $gte: 6 } }"));
-
-        assertThat(collection.findOne()).isEqualTo(json("_id: 1, votes: [ 3, 5 ]"));
-    }
-
-    @Test
-    public void testUpdatePullDocuments() {
-        collection.insert(json("_id: 1, results: [{item: 'A', score: 5}, {item: 'B', score: 8, comment: 'foobar'}]"));
-        collection.insert(json("_id: 2, results: [{item: 'C', score: 8, comment: 'foobar'}, {item: 'B', score: 4}]"));
-
-        collection.update(json("{}"), json("$pull: { results: { score: 8 , item: 'B' } }"), false, true);
-
-        assertThat(collection.findOne(json("_id: 1"))).isEqualTo(json("_id: 1, results: [{item: 'A', score: 5}]"));
-        assertThat(collection.findOne(json("_id: 2"))).isEqualTo(json("_id: 2, results: [{item: 'C', score: 8, comment: 'foobar'}, {item: 'B', score: 4}]"));
-    }
-
-    // https://github.com/bwaldvogel/mongo-java-server/issues/20
-    @Test
-    public void testUpdatePullLeavesEmptyArray() {
-        BasicDBObject obj = json("_id: 1");
-        collection.insert(obj);
-        collection.update(obj, json("$set: {field: [{'key1': 'value1', 'key2': 'value2'}]}"));
-        collection.update(obj, json("$pull: {field: {'key1': 'value1'}}"));
-
-        assertThat(collection.findOne(obj)).isEqualTo(json("_id: 1, field: []"));
-    }
-
-    @Test
     public void testUpdatePullAll() throws Exception {
         DBObject obj = json("_id: 1");
         collection.insert(obj);
