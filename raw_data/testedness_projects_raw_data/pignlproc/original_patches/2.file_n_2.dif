diff --git a/src/main/java/pignlproc/storage/ParsingWikipediaLoader.java b/src/main/java/pignlproc/storage/ParsingWikipediaLoader.java
index b8ab4f8..3babb83 100644
--- a/src/main/java/pignlproc/storage/ParsingWikipediaLoader.java
+++ b/src/main/java/pignlproc/storage/ParsingWikipediaLoader.java
@@ -74,33 +74,22 @@ public class ParsingWikipediaLoader extends RawWikipediaLoader implements
         schema.add(new FieldSchema("uri", DataType.CHARARRAY));
         schema.add(new FieldSchema("text", DataType.CHARARRAY));
         schema.add(new FieldSchema("redirect", DataType.CHARARRAY));
-
-		// wrapping each bag in a tuple
-
         Schema linkInfoSchema = new Schema();
         linkInfoSchema.add(new FieldSchema("target", DataType.CHARARRAY));
         linkInfoSchema.add(new FieldSchema("begin", DataType.INTEGER));
         linkInfoSchema.add(new FieldSchema("end", DataType.INTEGER));
-        Schema linkInfoWrapper = new Schema(new FieldSchema ("t", linkInfoSchema));
-        linkInfoWrapper.setTwoLevelAccessRequired(true);
-        schema.add(new FieldSchema("links", linkInfoWrapper, DataType.BAG));
-
+        schema.add(new FieldSchema("links", linkInfoSchema, DataType.BAG));
         Schema headerInfoSchema = new Schema();
         headerInfoSchema.add(new FieldSchema("tagname", DataType.CHARARRAY));
         headerInfoSchema.add(new FieldSchema("begin", DataType.INTEGER));
         headerInfoSchema.add(new FieldSchema("end", DataType.INTEGER));
-        Schema headerInfoWrapper = new Schema(new FieldSchema("t", headerInfoSchema));
-        headerInfoWrapper.setTwoLevelAccessRequired(true);
-        schema.add(new FieldSchema("headers", headerInfoWrapper, DataType.BAG));
-
+        schema.add(new FieldSchema("headers", headerInfoSchema, DataType.BAG));
         Schema paragraphInfoSchema = new Schema();
         paragraphInfoSchema.add(new FieldSchema("tagname", DataType.CHARARRAY));
         paragraphInfoSchema.add(new FieldSchema("begin", DataType.INTEGER));
         paragraphInfoSchema.add(new FieldSchema("end", DataType.INTEGER));
-        Schema paragraphInfoWrapper = new Schema(new FieldSchema("t", paragraphInfoSchema));
-        paragraphInfoWrapper.setTwoLevelAccessRequired(true);
-        schema.add(new FieldSchema("paragraphs", paragraphInfoWrapper, DataType.BAG));
-
+        schema.add(new FieldSchema("paragraphs", paragraphInfoSchema,
+                DataType.BAG));
         return new ResourceSchema(schema);
     }
 
