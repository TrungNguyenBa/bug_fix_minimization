diff --git a/src/main/java/org/springframework/samples/petclinic/web/PetController.java b/src/main/java/org/springframework/samples/petclinic/web/PetController.java
index bf82302..ea8aeaa 100644
--- a/src/main/java/org/springframework/samples/petclinic/web/PetController.java
+++ b/src/main/java/org/springframework/samples/petclinic/web/PetController.java
@@ -34,8 +34,6 @@ import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.SessionAttributes;
 import org.springframework.web.bind.support.SessionStatus;
 
-import javax.validation.Valid;
-
 /**
  * @author Juergen Hoeller
  * @author Ken Krebs
@@ -59,9 +57,8 @@ public class PetController {
     }
 
     @InitBinder
-    public void initBinder(WebDataBinder dataBinder) {
+    public void setAllowedFields(WebDataBinder dataBinder) {
         dataBinder.setDisallowedFields("id");
-        dataBinder.setValidator(new PetValidator());
     }
 
     @RequestMapping(value = "/owners/{ownerId}/pets/new", method = RequestMethod.GET)
@@ -74,7 +71,8 @@ public class PetController {
     }
 
     @RequestMapping(value = "/owners/{ownerId}/pets/new", method = RequestMethod.POST)
-    public String processCreationForm(@Valid Pet pet, BindingResult result, SessionStatus status) {
+    public String processCreationForm(@ModelAttribute("pet") Pet pet, BindingResult result, SessionStatus status) {
+        new PetValidator().validate(pet, result);
         if (result.hasErrors()) {
             return "pets/createOrUpdatePetForm";
         } else {
@@ -92,7 +90,9 @@ public class PetController {
     }
 
     @RequestMapping(value = "/owners/{ownerId}/pets/{petId}/edit", method = {RequestMethod.PUT, RequestMethod.POST})
-    public String processUpdateForm(@Valid Pet pet, BindingResult result, SessionStatus status) {
+    public String processUpdateForm(@ModelAttribute("pet") Pet pet, BindingResult result, SessionStatus status) {
+        // we're not using @Valid annotation here because it is easier to define such validation rule in Java
+        new PetValidator().validate(pet, result);
         if (result.hasErrors()) {
             return "pets/createOrUpdatePetForm";
         } else {
