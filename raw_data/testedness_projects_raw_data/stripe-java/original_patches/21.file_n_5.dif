diff --git a/src/main/java/com/stripe/model/BitcoinReceiver.java b/src/main/java/com/stripe/model/BitcoinReceiver.java
index ea9693b..33a129f 100644
--- a/src/main/java/com/stripe/model/BitcoinReceiver.java
+++ b/src/main/java/com/stripe/model/BitcoinReceiver.java
@@ -12,7 +12,9 @@ import com.stripe.net.RequestOptions;
 import java.util.Collections;
 import java.util.Map;
 
-public class BitcoinReceiver extends ExternalAccount {
+public class BitcoinReceiver extends APIResource implements PaymentSource {
+    String id;
+    String object;
     String status;
     Long created;
     String currency;
@@ -27,11 +29,28 @@ public class BitcoinReceiver extends ExternalAccount {
     String inboundAddress;
     String refundAddress;
     String bitcoinUri;
+    String customer;
     String email;
     String payment;
     BitcoinTransactionCollection transactions;
     Map<String, String> metadata;
 
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getObject() {
+        return object;
+    }
+
+    public void setObject(String object) {
+        this.object = object;
+    }
+
     public String getStatus() {
         return status;
     }
@@ -144,6 +163,14 @@ public class BitcoinReceiver extends ExternalAccount {
         this.bitcoinUri = bitcoinUri;
     }
 
+    public String getCustomer() {
+        return customer;
+    }
+
+    public void setCustomer(String customer) {
+        this.customer = customer;
+    }
+
     public String getEmail() {
         return email;
     }
@@ -212,38 +239,32 @@ public class BitcoinReceiver extends ExternalAccount {
         return request(RequestMethod.GET, String.format("%s/%s", Stripe.getApiBase(), "v1/bitcoin/receivers"), params, BitcoinReceiverCollection.class, options);
     }
 
-    @Override
     public String getInstanceURL() {
-        String result = super.getInstanceURL();
-        if (result == null) {
-            return String.format("%s/%s/%s", Stripe.getApiBase(), "v1/bitcoin/receivers", this.getId());
+        if (this.customer != null) {
+            return String.format("%s/%s/sources/%s", classURL(Customer.class), this.customer, this.getId());
         } else {
-            return result;
+            return String.format("%s/%s/%s", Stripe.getApiBase(), "v1/bitcoin/receivers", this.getId());
         }
     }
 
-    @Override
     public BitcoinReceiver update(Map<String, Object> params)
             throws AuthenticationException, InvalidRequestException,
             APIConnectionException, CardException, APIException {
         return update(params, (RequestOptions) null);
     }
 
-    @Override
     public BitcoinReceiver update(Map<String, Object> params, RequestOptions options)
             throws AuthenticationException, InvalidRequestException,
             APIConnectionException, CardException, APIException {
         return request(RequestMethod.POST, this.getInstanceURL(), params, BitcoinReceiver.class, options);
     }
 
-    @Override
     public DeletedBitcoinReceiver delete() throws AuthenticationException,
             InvalidRequestException, APIConnectionException, CardException,
             APIException {
         return delete((RequestOptions) null);
     }
 
-    @Override
     public DeletedBitcoinReceiver delete(RequestOptions options) throws AuthenticationException,
             InvalidRequestException, APIConnectionException, CardException,
             APIException {
