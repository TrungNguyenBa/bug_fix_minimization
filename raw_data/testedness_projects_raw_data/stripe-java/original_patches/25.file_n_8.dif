diff --git a/src/main/java/com/stripe/model/PaymentSourceDeserializer.java b/src/main/java/com/stripe/model/PaymentSourceDeserializer.java
index 1175bcb..10c3a88 100644
--- a/src/main/java/com/stripe/model/PaymentSourceDeserializer.java
+++ b/src/main/java/com/stripe/model/PaymentSourceDeserializer.java
@@ -10,40 +10,23 @@ import com.google.gson.JsonParseException;
 import com.google.gson.reflect.TypeToken;
 
 import java.lang.reflect.Type;
-import java.util.Map;
-import java.util.HashMap;
 import java.util.List;
 
 public class PaymentSourceDeserializer implements JsonDeserializer<PaymentSource> {
   private static final String SOURCE_OBJECT_PROP = "object";
 
-    private static Map<String, Class<?>> typeToClazz;
-
-    public static Map<String, Class<?>> getTypeToClazz() {
-        if (PaymentSourceDeserializer.typeToClazz == null) {
-            HashMap<String, Class<?>> mapping = new HashMap<String, Class<?>>();
-            mapping.put("bitcoin_receiver", BitcoinReceiver.class);
-            mapping.put("card", Card.class);
-            mapping.put("alipay_account", AlipayAccount.class);
-            PaymentSourceDeserializer.setTypeToClazz(mapping);
-        }
-
-        return PaymentSourceDeserializer.typeToClazz;
-    }
-
-    public static void setTypeToClazz(Map<String, Class<?>> mapping) {
-        PaymentSourceDeserializer.typeToClazz = mapping;
-    }
-
   @Override
   public PaymentSource deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
     throws JsonParseException {
 
     String sourceObject = json.getAsJsonObject().getAsJsonPrimitive(SOURCE_OBJECT_PROP).getAsString();
-        Class<?> clazz = PaymentSourceDeserializer.getTypeToClazz().get(sourceObject);
-
-        if (clazz == null) {
-            clazz = ConcretePaymentSource.class;
+    Class<?> clazz;
+    if (sourceObject.equals("bitcoin_receiver")) {
+      clazz = BitcoinReceiver.class;
+    } else if (sourceObject.equals("card")) {
+      clazz = Card.class;
+    } else {
+      clazz = PaymentSource.class;
     }
 
     return (PaymentSource) context.deserialize(json, clazz);
