diff --git a/src/main/java/com/stripe/net/APIResource.java b/src/main/java/com/stripe/net/APIResource.java
index 1ebeba8..4ab9a52 100644
--- a/src/main/java/com/stripe/net/APIResource.java
+++ b/src/main/java/com/stripe/net/APIResource.java
@@ -37,8 +37,6 @@ import com.stripe.model.ChargeRefundCollectionDeserializer;
 import com.stripe.model.StripeObject;
 import com.stripe.model.StripeRawJsonObject;
 import com.stripe.model.StripeRawJsonObjectDeserializer;
-import com.stripe.model.FeeRefundCollection;
-import com.stripe.model.FeeRefundCollectionDeserializer;
 
 public abstract class APIResource extends StripeObject {
 
@@ -46,7 +44,6 @@ public abstract class APIResource extends StripeObject {
 			.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)
 			.registerTypeAdapter(EventData.class, new EventDataDeserializer())
 			.registerTypeAdapter(ChargeRefundCollection.class, new ChargeRefundCollectionDeserializer())
-			.registerTypeAdapter(FeeRefundCollection.class, new FeeRefundCollectionDeserializer())
 			.registerTypeAdapter(StripeRawJsonObject.class, new StripeRawJsonObjectDeserializer())
 			.create();
 
@@ -426,7 +423,8 @@ public abstract class APIResource extends StripeObject {
 				if (originalDNSCacheTTL == null) {
 					// value unspecified by implementation
                                         // DNS_CACHE_TTL_PROPERTY_NAME of -1 = cache forever
-					java.security.Security.setProperty(DNS_CACHE_TTL_PROPERTY_NAME, "-1");
+					java.security.Security.setProperty(
+							DNS_CACHE_TTL_PROPERTY_NAME, "-1");
 				} else {
 					java.security.Security.setProperty(
 							DNS_CACHE_TTL_PROPERTY_NAME, originalDNSCacheTTL);
@@ -499,7 +497,8 @@ public abstract class APIResource extends StripeObject {
 		case 401:
 			throw new AuthenticationException(error.message);
 		case 402:
-			throw new CardException(error.message, error.code, error.param, null);
+			throw new CardException(error.message, error.code, error.param,
+					null);
 		default:
 			throw new APIException(error.message, null);
 		}
