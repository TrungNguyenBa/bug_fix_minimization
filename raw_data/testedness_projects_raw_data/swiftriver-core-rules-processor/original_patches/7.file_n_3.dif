diff --git a/src/test/java/com/ushahidi/swiftriver/core/rules/RulesUpdateQueueConsumerTest.java b/src/test/java/com/ushahidi/swiftriver/core/rules/RulesUpdateQueueConsumerTest.java
index 16ac2df..2aa9d66 100644
--- a/src/test/java/com/ushahidi/swiftriver/core/rules/RulesUpdateQueueConsumerTest.java
+++ b/src/test/java/com/ushahidi/swiftriver/core/rules/RulesUpdateQueueConsumerTest.java
@@ -66,7 +66,7 @@ public class RulesUpdateQueueConsumerTest {
 
 		MessageProperties mockMessageProperties = mock(MessageProperties.class);
 		
-		String messageBody = "{\"id\": 1, \"river_id\": 20, \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": false}";
+		String messageBody = "{\"id\": 1, \"river_id\": 20, \"name\": \"Keyword Filter\", \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": false}";
 		
 		when(mockMessage.getBody()).thenReturn(messageBody.getBytes());
 		when(mockMessage.getMessageProperties()).thenReturn(mockMessageProperties);
@@ -80,6 +80,7 @@ public class RulesUpdateQueueConsumerTest {
 		Rule rule = ruleArgument.getValue();
 		
 		assertEquals(1L, rule.getId());
+		assertEquals("Keyword Filter", rule.getName());
 		assertEquals(20L, rule.getRiverId());
 
 	}
@@ -90,7 +91,7 @@ public class RulesUpdateQueueConsumerTest {
 		Channel mockChannel = mock(Channel.class);
 		MessageProperties mockMessageProperties = mock(MessageProperties.class);
 		
-		String messageBody = "{\"id\": 1, \"river_id\": 20, \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": true}";
+		String messageBody = "{\"id\": 1, \"river_id\": 20, \"name\": \"Keyword Filter\", \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": true}";
 
 		when(mockMessage.getBody()).thenReturn(messageBody.getBytes());
 		when(mockMessage.getMessageProperties()).thenReturn(mockMessageProperties);
@@ -109,7 +110,7 @@ public class RulesUpdateQueueConsumerTest {
 		Channel mockChannel = mock(Channel.class);
 		MessageProperties mockMessageProperties = mock(MessageProperties.class);
 		
-		String messageBody = "{\"id\": 1, \"river_id\": 20, \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": false}";
+		String messageBody = "{\"id\": 1, \"river_id\": 20, \"name\": \"Keyword Filter\", \"conditions\": [{\"field\": \"title\", \"operator\": \"contains\", \"value\": \"kenya\"}], \"actions\": [{\"addToBucket\": 2}], \"all_conditions\": false}";
 		when(mockMessage.getBody()).thenReturn(messageBody.getBytes());
 		when(mockMessage.getMessageProperties()).thenReturn(mockMessageProperties);
 		when(mockMessageProperties.getReceivedRoutingKey()).thenReturn("web.river.rules.delete");
