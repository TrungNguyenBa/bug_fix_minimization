diff --git a/src/test/java/org/zeroturnaround/zip/FilePermissionsTest.java b/src/test/java/org/zeroturnaround/zip/FilePermissionsTest.java
index d913719..7c28128 100644
--- a/src/test/java/org/zeroturnaround/zip/FilePermissionsTest.java
+++ b/src/test/java/org/zeroturnaround/zip/FilePermissionsTest.java
@@ -1,6 +1,7 @@
 package org.zeroturnaround.zip;
 
 import java.io.File;
+import java.io.IOException;
 
 import org.zeroturnaround.zip.commons.FileUtils;
 
@@ -9,11 +10,7 @@ import junit.framework.TestCase;
 public class FilePermissionsTest extends TestCase {
   private final File testFile = new File(getClass().getClassLoader().getResource("TestFile.txt").getPath());
   
-  public void beforeMethod() {
-    System.out.println("Before method called!");
-  }
-  
-  public void testPreserveExecuteFlag() throws Exception {
+  public void testPreserveExecuteFlag() throws IOException {
     File tmpDir = File.createTempFile("FilePermissionsTest-", null);
     tmpDir.delete();
     tmpDir.mkdir();
@@ -22,7 +19,7 @@ public class FilePermissionsTest extends TestCase {
     FileUtils.copyFile(testFile, file);
     
     assertTrue(file.exists());
-    setExecutable(file, true);
+    file.setExecutable(true);
     
     File tmpZip = File.createTempFile("FilePermissionsTest-", ".zip");
     ZipUtil.pack(tmpDir, tmpZip);
@@ -30,15 +27,7 @@ public class FilePermissionsTest extends TestCase {
     ZipUtil.unpack(tmpZip, tmpDir);
     
     assertTrue(file.exists());
-    assertTrue(canExecute(file));
-  }
-  
-  private boolean canExecute(File file) throws Exception {
-    return (Boolean) File.class.getDeclaredMethod("canExecute").invoke(file);
-  }
-  
-  private boolean setExecutable(File file, boolean executable) throws Exception {
-    return (Boolean) File.class.getDeclaredMethod("setExecutable", boolean.class).invoke(file, executable);
+    assertTrue(file.canExecute());
   }
   
 }
