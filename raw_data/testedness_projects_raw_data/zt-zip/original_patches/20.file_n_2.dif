diff --git a/src/main/java/org/zeroturnaround/zip/FileSource.java b/src/main/java/org/zeroturnaround/zip/FileSource.java
index 3bfbc58..1699676 100644
--- a/src/main/java/org/zeroturnaround/zip/FileSource.java
+++ b/src/main/java/org/zeroturnaround/zip/FileSource.java
@@ -22,25 +22,20 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.util.zip.ZipEntry;
 
-/**
- * @author Toomas Romer
- * @author shelajev
- * @author Innokenty Shuvalov
- */
 public class FileSource implements ZipEntrySource {
 
   private final String path;
   private final File file;
-
+  
   public FileSource(String path, File file) {
     this.path = path;
     this.file = file;
   }
-
+  
   public String getPath() {
     return path;
   }
-
+  
   public ZipEntry getEntry() {
     ZipEntry entry = new ZipEntry(path);
     if (!file.isDirectory()) {
@@ -58,34 +53,9 @@ public class FileSource implements ZipEntrySource {
       return new BufferedInputStream(new FileInputStream(file));
     }
   }
-
+  
   public String toString() {
     return "FileSource[" + path + ", " + file + "]";
   }
 
-  /**
-   * Creates a sequence of FileSource objects via mapping
-   * a sequence of files to the sequence of corresponding names
-   * for the entries
-   * @param files file array to form the data of the objects
-   *              in the resulting array
-   * @param names file array to form the names of the objects
-   *              in the resulting array
-   * @return array of FileSource objects created by mapping
-   * given files array to the given names array one by one
-   * @throws java.lang.IllegalArgumentException if the names array
-   * contains less items than the files array
-   */
-  public static FileSource[] pair(File[] files, String[] names) {
-    if (files.length > names.length) {
-      throw new IllegalArgumentException("names array must contain " +
-          "at least the same amount of items as files array or more");
-    }
-
-    FileSource[] result = new FileSource[files.length];
-    for(int i = 0; i < files.length; i++) {
-      result[i] = new FileSource(names[i], files[i]);
-    }
-    return result;
-  }
 }
