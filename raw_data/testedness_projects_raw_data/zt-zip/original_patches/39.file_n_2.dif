diff --git a/src/test/java/ZipUtilTest.java b/src/test/java/ZipUtilTest.java
index de6c6e5..742b28e 100644
--- a/src/test/java/ZipUtilTest.java
+++ b/src/test/java/ZipUtilTest.java
@@ -17,7 +17,6 @@ import java.io.BufferedInputStream;
 import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -391,30 +390,6 @@ public class ZipUtilTest extends TestCase {
     assertTrue("Wrong entry hasn't beed iterated", files.contains("bar.txt"));
   }
 
-  public void testIterateGivenEntriesFromStream() throws IOException {
-    File src = new File(getClass().getResource("demo.zip").getPath());
-    final Set files = new HashSet();
-    files.add("foo.txt");
-    files.add("bar.txt");
-    files.add("foo1.txt");
-    files.add("foo2.txt");
-
-    FileInputStream inputStream = null;
-    try {
-      inputStream = new FileInputStream(src);
-      ZipUtil.iterate(inputStream, new String[] { "foo.txt", "foo1.txt", "foo2.txt" }, new ZipEntryCallback() {
-        public void process(InputStream in, ZipEntry zipEntry) throws IOException {
-          files.remove(zipEntry.getName());
-        }
-      });
-      assertEquals(1, files.size());
-      assertTrue("Wrong entry hasn't beed iterated", files.contains("bar.txt"));
-    }
-    finally {
-      inputStream.close();
-    }
-  }
-
   public void testIterateAndBreak() {
     File src = new File(getClass().getResource("demo.zip").getPath());
     final Set files = new HashSet();
